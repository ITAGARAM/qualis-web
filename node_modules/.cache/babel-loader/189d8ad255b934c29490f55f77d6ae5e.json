{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"name\",\"onChange\",\"className\",\"errors\",\"hasSearch\",\"resetOpenNodesOnDataUpdate\",\"disableKeyboard\",\"activeKey\",\"focusKey\",\"data\",\"initialOpenNodes\",\"initialActiveKey\",\"handleTreeClick\",\"openNodes\",\"placeholder\"];import React,{useEffect,useRef}from\"react\";import{Form,InputGroup}from\"react-bootstrap\";import TreeMenu,{ItemComponent}from\"react-simple-tree-menu\";import\"react-simple-tree-menu/dist/main.css\";import{TreeMenuGroup}from\"../form-tree-menu/form-tree-menu.styles\";import{AtWell}from'../App.styles';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSearch,faMinus,faPlus}from\"@fortawesome/free-solid-svg-icons\";var openedIcon=/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMinus});var closedIcon=/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus});var FormTreeMenu=function FormTreeMenu(_ref){var name=_ref.name,onChange=_ref.onChange,className=_ref.className,errors=_ref.errors,hasSearch=_ref.hasSearch,resetOpenNodesOnDataUpdate=_ref.resetOpenNodesOnDataUpdate,disableKeyboard=_ref.disableKeyboard,activeKey=_ref.activeKey,focusKey=_ref.focusKey,data=_ref.data,initialOpenNodes=_ref.initialOpenNodes,initialActiveKey=_ref.initialActiveKey,handleTreeClick=_ref.handleTreeClick,openNodes=_ref.openNodes,placeholder=_ref.placeholder,props=_objectWithoutProperties(_ref,_excluded);var focusRef=useRef(null);useEffect(function(){var animationFrame=requestAnimationFrame(function(){if(focusRef.current){focusRef.current.scrollIntoView({behavior:\"smooth\",block:\"center\"});var scrollParent=focusRef.current.closest(\".ps\");if(scrollParent){var top=focusRef.current.offsetTop;scrollParent.scrollTop=top-scrollParent.clientHeight/2;}}else{console.warn(\"Focus ref is null - element may not be rendered yet.\");}});return function(){return cancelAnimationFrame(animationFrame);};},[focusKey]);return/*#__PURE__*/React.createElement(TreeMenuGroup,null,/*#__PURE__*/React.createElement(TreeMenu,{name:name,data:data,cacheSearch:false,debounceTime:125,disableKeyboard:disableKeyboard,resetOpenNodesOnDataUpdate:true,initialOpenNodes:initialOpenNodes,onClickItem:handleTreeClick,openNodes:openNodes,activeKey:activeKey,focusKey:focusKey,initialActiveKey:initialActiveKey},function(_ref2){var search=_ref2.search,items=_ref2.items;return/*#__PURE__*/React.createElement(React.Fragment,null,hasSearch&&/*#__PURE__*/React.createElement(AtWell,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formSearch\"},/*#__PURE__*/React.createElement(InputGroup,{className:\"organisationtreeclass\"},/*#__PURE__*/React.createElement(InputGroup.Prepend,null,/*#__PURE__*/React.createElement(InputGroup.Text,{className:\"backgroundhidden\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSearch,style:{color:\"#c1c7d0\"}}))),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:placeholder,hidden:!hasSearch,onKeyUp:function onKeyUp(e){return e.keyCode===13?search(e.target.value):\"\";}})))),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled\"},items.map(function(itemProps){var isFocused=itemProps.key===focusKey;return/*#__PURE__*/React.createElement(\"li\",{key:itemProps.key,ref:isFocused?focusRef:null},/*#__PURE__*/React.createElement(ItemComponent,Object.assign({},itemProps,{openedIcon:openedIcon,closedIcon:closedIcon})));})));}));};export default FormTreeMenu;","map":{"version":3,"sources":["D:/WorkingFolder/LIMS/ALPD/branches/Version 11.0.0.1/QuaLISWeb/src/components/form-tree-menu/form-tree-menu.component.jsx"],"names":["React","useEffect","useRef","Form","InputGroup","TreeMenu","ItemComponent","TreeMenuGroup","AtWell","FontAwesomeIcon","faSearch","faMinus","faPlus","openedIcon","closedIcon","FormTreeMenu","name","onChange","className","errors","hasSearch","resetOpenNodesOnDataUpdate","disableKeyboard","activeKey","focusKey","data","initialOpenNodes","initialActiveKey","handleTreeClick","openNodes","placeholder","props","focusRef","animationFrame","requestAnimationFrame","current","scrollIntoView","behavior","block","scrollParent","closest","top","offsetTop","scrollTop","clientHeight","console","warn","cancelAnimationFrame","search","items","color","e","keyCode","target","value","map","itemProps","isFocused","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport TreeMenu, { ItemComponent } from \"react-simple-tree-menu\";\r\nimport \"react-simple-tree-menu/dist/main.css\";\r\nimport { TreeMenuGroup } from \"../form-tree-menu/form-tree-menu.styles\";\r\nimport { AtWell } from '../App.styles';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst openedIcon = <FontAwesomeIcon icon={faMinus} />;\r\nconst closedIcon = <FontAwesomeIcon icon={faPlus} />;\r\n\r\nconst FormTreeMenu = ({\r\n  name,\r\n  onChange,\r\n  className,\r\n  errors,\r\n  hasSearch,\r\n  resetOpenNodesOnDataUpdate,\r\n  disableKeyboard,\r\n  activeKey,\r\n  focusKey,\r\n  data,\r\n  initialOpenNodes,\r\n  initialActiveKey,\r\n  handleTreeClick,\r\n  openNodes,\r\n  placeholder,\r\n  ...props\r\n}) => {\r\n  const focusRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n  const animationFrame = requestAnimationFrame(() => {\r\n    if (focusRef.current) {\r\n      focusRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\r\n      const scrollParent = focusRef.current.closest(\".ps\");\r\n      if (scrollParent) {\r\n        const top = focusRef.current.offsetTop;\r\n        scrollParent.scrollTop = top - scrollParent.clientHeight / 2;\r\n      }\r\n    } else {\r\n      console.warn(\"Focus ref is null - element may not be rendered yet.\");\r\n    }\r\n  });\r\n\r\n  return () => cancelAnimationFrame(animationFrame);\r\n}, [focusKey]);\r\n\r\n\r\n  return (\r\n    <TreeMenuGroup>\r\n      <TreeMenu\r\n        name={name}\r\n        data={data}\r\n        cacheSearch={false}\r\n        debounceTime={125}\r\n        disableKeyboard={disableKeyboard}\r\n        resetOpenNodesOnDataUpdate\r\n        initialOpenNodes={initialOpenNodes}\r\n        onClickItem={handleTreeClick}\r\n        openNodes={openNodes}\r\n        activeKey={activeKey}\r\n        focusKey={focusKey}\r\n        initialActiveKey={initialActiveKey}\r\n      >\r\n        {({ search, items }) => (\r\n          <>\r\n            {hasSearch && (\r\n              <AtWell>\r\n                <Form.Group controlId=\"formSearch\">\r\n                  <InputGroup className=\"organisationtreeclass\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text className=\"backgroundhidden\">\r\n                        <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder={placeholder}\r\n                      hidden={!hasSearch}\r\n                      onKeyUp={(e) => e.keyCode === 13 ? search(e.target.value) : \"\"}\r\n                    />\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </AtWell>\r\n            )}\r\n\r\n            <ul className=\"list-unstyled\">\r\n              {items.map((itemProps) => {\r\n                const isFocused = itemProps.key === focusKey;\r\n                return (\r\n                  <li\r\n                    key={itemProps.key}\r\n                    ref={isFocused ? focusRef : null}\r\n                  >\r\n                    <ItemComponent\r\n                      {...itemProps}\r\n                      openedIcon={openedIcon}\r\n                      closedIcon={closedIcon}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </TreeMenu>\r\n    </TreeMenuGroup>\r\n  );\r\n};\r\n\r\nexport default FormTreeMenu;\r\n"]},"metadata":{},"sourceType":"module"}