{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\BioBank V 11.0.0.1\\\\QuaLISWeb\\\\src\\\\components\\\\form-tree-menu\\\\form-tree-menu.component.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport TreeMenu, { ItemComponent } from \"react-simple-tree-menu\";\nimport \"react-simple-tree-menu/dist/main.css\";\nimport { TreeMenuGroup } from \"../form-tree-menu/form-tree-menu.styles\";\nimport { AtWell } from '../App.styles';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nconst openedIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faMinus,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 20\n  }\n});\nconst closedIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faPlus,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 20\n  }\n});\n\nconst FormTreeMenu = ({\n  name,\n  onChange,\n  className,\n  errors,\n  hasSearch,\n  resetOpenNodesOnDataUpdate,\n  disableKeyboard,\n  activeKey,\n  focusKey,\n  data,\n  initialOpenNodes,\n  initialActiveKey,\n  handleTreeClick,\n  openNodes,\n  placeholder,\n  ...props\n}) => {\n  const focusRef = useRef(null);\n  useEffect(() => {\n    const animationFrame = requestAnimationFrame(() => {\n      if (focusRef.current) {\n        focusRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\"\n        });\n        const scrollParent = focusRef.current.closest(\".ps\");\n\n        if (scrollParent) {\n          const top = focusRef.current.offsetTop;\n          scrollParent.scrollTop = top - scrollParent.clientHeight / 2;\n        }\n      } else {\n        console.warn(\"Focus ref is null - element may not be rendered yet.\");\n      }\n    });\n    return () => cancelAnimationFrame(animationFrame);\n  }, [focusKey]);\n  return /*#__PURE__*/React.createElement(TreeMenuGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TreeMenu, {\n    name: name,\n    data: data,\n    cacheSearch: false,\n    debounceTime: 125,\n    disableKeyboard: disableKeyboard,\n    resetOpenNodesOnDataUpdate: true,\n    initialOpenNodes: initialOpenNodes,\n    onClickItem: handleTreeClick,\n    openNodes: openNodes,\n    activeKey: activeKey,\n    focusKey: focusKey,\n    initialActiveKey: initialActiveKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, ({\n    search,\n    items\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, hasSearch && /*#__PURE__*/React.createElement(AtWell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"organisationtreeclass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    className: \"backgroundhidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    style: {\n      color: \"#c1c7d0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: placeholder,\n    hidden: !hasSearch,\n    onKeyUp: e => e.keyCode === 13 ? search(e.target.value) : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, items.map(itemProps => {\n    const isFocused = itemProps.key === focusKey;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: itemProps.key,\n      ref: isFocused ? focusRef : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ItemComponent, Object.assign({}, itemProps, {\n      openedIcon: openedIcon,\n      closedIcon: closedIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  })))));\n};\n\nexport default FormTreeMenu;","map":{"version":3,"sources":["D:/WorkingFolder/LIMS/ALPD/branches/BioBank V 11.0.0.1/QuaLISWeb/src/components/form-tree-menu/form-tree-menu.component.jsx"],"names":["React","useEffect","useRef","Form","InputGroup","TreeMenu","ItemComponent","TreeMenuGroup","AtWell","FontAwesomeIcon","faSearch","faMinus","faPlus","openedIcon","closedIcon","FormTreeMenu","name","onChange","className","errors","hasSearch","resetOpenNodesOnDataUpdate","disableKeyboard","activeKey","focusKey","data","initialOpenNodes","initialActiveKey","handleTreeClick","openNodes","placeholder","props","focusRef","animationFrame","requestAnimationFrame","current","scrollIntoView","behavior","block","scrollParent","closest","top","offsetTop","scrollTop","clientHeight","console","warn","cancelAnimationFrame","search","items","color","e","keyCode","target","value","map","itemProps","isFocused","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport TreeMenu, { ItemComponent } from \"react-simple-tree-menu\";\r\nimport \"react-simple-tree-menu/dist/main.css\";\r\nimport { TreeMenuGroup } from \"../form-tree-menu/form-tree-menu.styles\";\r\nimport { AtWell } from '../App.styles';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst openedIcon = <FontAwesomeIcon icon={faMinus} />;\r\nconst closedIcon = <FontAwesomeIcon icon={faPlus} />;\r\n\r\nconst FormTreeMenu = ({\r\n  name,\r\n  onChange,\r\n  className,\r\n  errors,\r\n  hasSearch,\r\n  resetOpenNodesOnDataUpdate,\r\n  disableKeyboard,\r\n  activeKey,\r\n  focusKey,\r\n  data,\r\n  initialOpenNodes,\r\n  initialActiveKey,\r\n  handleTreeClick,\r\n  openNodes,\r\n  placeholder,\r\n  ...props\r\n}) => {\r\n  const focusRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n  const animationFrame = requestAnimationFrame(() => {\r\n    if (focusRef.current) {\r\n      focusRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\r\n      const scrollParent = focusRef.current.closest(\".ps\");\r\n      if (scrollParent) {\r\n        const top = focusRef.current.offsetTop;\r\n        scrollParent.scrollTop = top - scrollParent.clientHeight / 2;\r\n      }\r\n    } else {\r\n      console.warn(\"Focus ref is null - element may not be rendered yet.\");\r\n    }\r\n  });\r\n\r\n  return () => cancelAnimationFrame(animationFrame);\r\n}, [focusKey]);\r\n\r\n\r\n  return (\r\n    <TreeMenuGroup>\r\n      <TreeMenu\r\n        name={name}\r\n        data={data}\r\n        cacheSearch={false}\r\n        debounceTime={125}\r\n        disableKeyboard={disableKeyboard}\r\n        resetOpenNodesOnDataUpdate\r\n        initialOpenNodes={initialOpenNodes}\r\n        onClickItem={handleTreeClick}\r\n        openNodes={openNodes}\r\n        activeKey={activeKey}\r\n        focusKey={focusKey}\r\n        initialActiveKey={initialActiveKey}\r\n      >\r\n        {({ search, items }) => (\r\n          <>\r\n            {hasSearch && (\r\n              <AtWell>\r\n                <Form.Group controlId=\"formSearch\">\r\n                  <InputGroup className=\"organisationtreeclass\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text className=\"backgroundhidden\">\r\n                        <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder={placeholder}\r\n                      hidden={!hasSearch}\r\n                      onKeyUp={(e) => e.keyCode === 13 ? search(e.target.value) : \"\"}\r\n                    />\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </AtWell>\r\n            )}\r\n\r\n            <ul className=\"list-unstyled\">\r\n              {items.map((itemProps) => {\r\n                const isFocused = itemProps.key === focusKey;\r\n                return (\r\n                  <li\r\n                    key={itemProps.key}\r\n                    ref={isFocused ? focusRef : null}\r\n                  >\r\n                    <ItemComponent\r\n                      {...itemProps}\r\n                      openedIcon={openedIcon}\r\n                      closedIcon={closedIcon}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </TreeMenu>\r\n    </TreeMenuGroup>\r\n  );\r\n};\r\n\r\nexport default FormTreeMenu;\r\n"]},"metadata":{},"sourceType":"module"}