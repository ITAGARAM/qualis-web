{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\RegisterSlideOut.jsx\";\nimport React, { Component } from 'react'; //import react, {useState, useEffect, useRef} from \"react\";\n\nimport { Row, Col, Nav, FormGroup, FormLabel, Button } from 'react-bootstrap';\nimport { HeaderSpan } from './registration.styled';\nimport './registration.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport { ReadOnlyText } from '../../components/App.styles'; //import ReactTooltip from 'react-tooltip';\n\nimport SplitterLayout from 'react-splitter-layout';\nimport Site from '../basemaster/Site';\nimport SiteScheduler from '../Scheduler/SiteScheduler';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport SchedulerMasterCombo from '../Scheduler/SchedulerMasterCombo';\nimport { formCode, SampleType, transactionStatus, schedulerConfigType } from '../../components/Enumeration';\n\nclass RegisterSlideOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.formCallback = height => {\n      if (height !== this.state.formWrapheight) {\n        this.setState({\n          formWrapheightDisable: true\n        }); // retriggering the splitter layout to get the latest height\n\n        this.setState({\n          formWrapheight: height,\n          formWrapheightDisable: false\n        });\n      }\n    };\n\n    this.state = {\n      splitChangeWidthPercentage: 50.6\n    };\n  }\n\n  render() {\n    // console.log(\"RegiterSlideoutmodal\",this.props.selectedRecord);\n    const testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      width: \"200px\"\n    }, {\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"ssectionname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_METHOD\",\n      \"dataField\": \"smethodname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n      \"dataField\": \"sinstrumentcatname\",\n      width: \"200px\"\n    }]; // const [height, setHeight] = useState(0)\n    // const refDiv = useRef(null)\n    // useEffect(() => {\n    //     setHeight(refDiv.current.clientHeight)\n    // })\n    //console.log(\"this.props.sampleType:\", this.props.sampleType, this.props.comboComponents);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.loadPreregister ? /*#__PURE__*/React.createElement(React.Fragment, null, this.props.userInfo.nformcode === formCode.SCHEDULERCONFIGURATION && this.props.sampleType.value === SampleType.INSTRUMENT ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SITE\"\n      }),\n      isSearchable: true,\n      name: \"SchedulerSite\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      isClearable: false,\n      options: this.props.siteList,\n      value: this.props.selectedRecord[\"SchedulerSite\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"SchedulerSite\"],\n      onChange: event => this.props.onComboChange(event, \"SchedulerSite\", \"SchedulerSite\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }) : \"\", this.props.selectedSample.nschedulerconfigtypecode === schedulerConfigType.EXTERNAL ? /*#__PURE__*/React.createElement(SchedulerMasterCombo, {\n      schedulerList: this.props.schedulerList,\n      scheduleMasterDetails: this.props.scheduleMasterDetails,\n      selectedRecord: this.props.selectedRecord,\n      formatMessage: this.props.intl.formatMessage,\n      onSchedulerComboChange: this.props.onSchedulerComboChange,\n      userInfo: this.props.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(DynamicSlideout, {\n      siteList: this.props.siteList,\n      selectedRecord: this.props.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.props.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      editfield: this.props.editfield,\n      enableCallback: true,\n      triggerCallback: this.formCallback,\n      selectedSample: this.props.selectedSample,\n      custombuttonclick: this.props.custombuttonclick,\n      onNumericBlur: this.props.onNumericBlur,\n      addMasterRecord: this.props.addMasterRecord,\n      editMasterRecord: this.props.editMasterRecord,\n      userRoleControlRights: this.props.userRoleControlRights1,\n      onClickView: this.props.onClickView,\n      operation: this.props.operation,\n      sampleType: this.props.sampleType,\n      comboComponents: this.props.comboComponents,\n      onDropFile: this.props.onDropFile,\n      deleteAttachment: this.props.deleteAttachment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      className: \"pl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    })), this.props.operation === \"create\" ?\n    /*#__PURE__*/\n    // this.props.ntestgroupspecrequired === false ? <br/> :   //ALPD-4834, Vishakh, Added condition to show or hide add spec button\n    React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 49\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 49\n      }\n    })) :\n    /*#__PURE__*/\n    // this.props.ntestgroupspecrequired === false ? <br/> :   //ALPD-4834, Vishakh, Added condition to show or hide add spec button\n    React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 49\n      }\n    }, \" \"), \"\")))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      message: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VERSION\",\n      message: \"Version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]))))))) : !this.state.formWrapheightDisable ? /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.formWrapheight,\n      primaryMinSize: 40,\n      vertical: true,\n      customClassName: \" p-3 no-border-pane no-height -c-pd-t-1  primary-pane-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }, this.props.userInfo.nformcode === formCode.SCHEDULERCONFIGURATION && this.props.sampleType.value === SampleType.INSTRUMENT ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SITE\"\n      }),\n      isSearchable: true,\n      name: \"SchedulerSite\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      isClearable: false,\n      options: this.props.siteList,\n      value: this.props.selectedRecord[\"SchedulerSite\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"SchedulerSite\"],\n      onChange: event => this.props.onComboChange(event, \"SchedulerSite\", \"SchedulerSite\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }) : \"\", this.props.nschedulerconfigtypecode == schedulerConfigType.EXTERNAL ? /*#__PURE__*/React.createElement(SchedulerMasterCombo, {\n      schedulerList: this.props.schedulerList,\n      scheduleMasterDetails: this.props.scheduleMasterDetails,\n      selectedRecord: this.props.selectedRecord,\n      formatMessage: this.props.intl.formatMessage,\n      onSchedulerComboChange: this.props.onSchedulerComboChange,\n      userInfo: this.props.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(DynamicSlideout // ref={refDiv}\n    , {\n      selectedRecord: this.props.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.props.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      enableCallback: true,\n      triggerCallback: this.formCallback,\n      selectedSample: this.props.selectedSample,\n      custombuttonclick: this.props.custombuttonclick,\n      onNumericBlur: this.props.onNumericBlur,\n      addMasterRecord: this.props.addMasterRecord,\n      editMasterRecord: this.props.editMasterRecord,\n      userRoleControlRights: this.props.userRoleControlRights1,\n      onClickView: this.props.onClickView,\n      sampleType: this.props.sampleType,\n      comboComponents: this.props.comboComponents,\n      onDropFile: this.props.onDropFile,\n      deleteAttachment: this.props.deleteAttachment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 49\n      }\n    })), this.props.operation === \"create\" ? /*#__PURE__*/React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    // this.props.ntestgroupspecrequired === false ? <br/>    //ALPD-4834, Vishakh, Added condition to show or hide add spec button :\n    React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 49\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 49\n      }\n    })), this.props.importData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey\",\n      variant: \"link\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_IMPORT\"\n      }) // data-for=\"tooltip-grid-wrap\"\n      ,\n      onClick: event => this.props.AddImportFile(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileImport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey\",\n      variant: \"link\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SAMPLECOUNT\"\n      }) // data-for=\"tooltip-grid-wrap\"\n      ,\n      onClick: event => this.props.AddSampleCount(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFileImport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 57\n      }\n    }))) : \"\") : \"\"))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      message: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 60\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 49\n      }\n    }, this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VERSION\",\n      message: \"Version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 60\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 49\n      }\n    }, this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]))))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 33\n      }\n    }, this.props.nneedsubsample ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 53\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 66\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: e => this.props.addsubSample(this.props.specBasedComponent, this.props.specBasedTestPackage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 57\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"slno\",\n      primaryKeyField: \"slno\",\n      selectedId: this.props.selectedComponent ? this.props.selectedComponent.slno : null,\n      data: this.props.subSampleDataGridList,\n      dataResult: process(this.props.subSampleDataGridList || [], this.props.subSampleDataState),\n      dataState: this.props.subSampleDataState,\n      dataStateChange: this.props.subSampleDataStateChange,\n      extractedColumnList: this.props.subSampleDataGridFields // detailedFieldList={this.props.subSampleDataDetailGridList}\n      ,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true,\n      handleRowClick: this.props.handleComponentRowClick,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      editRecordWORights: inputParam => this.props.editSubSample(inputParam, this.props.specBasedComponent),\n      deleteRecordWORights: this.props.deleteComponent,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false //  isActionRequired={true}\n      ,\n      jsonField: 'jsondata' //expandField=\"expanded\"\n      // hideColumnFilter={true}\n      // handleRowClick={this.props.selectSubSample}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 45\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: this.props.nneedsubsample ? 6 : 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 49\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addTest(this.props.selectedComponent, this.props.nneedsubsample, this.props.specBasedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 53\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"ntestgrouptestcode\",\n      primaryKeyField: \"ntestgrouptestcode\",\n      selectedId: null //this.state.selectedTestItem.ntestgrouptestcode\n      ,\n      data: this.props.SelectedTest,\n      dataResult: process(this.props.SelectedTest || [], this.props.testDataState),\n      dataState: this.props.testDataState,\n      dataStateChange: this.props.testDataStateChange,\n      extractedColumnList: testColumnList,\n      controlMap: new Map(),\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true // handleRowClick={this.handleRowClick}\n      ,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      deleteRecordWORights: this.props.deleteTest,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false //expandField=\"expanded\"\n      // hideColumnFilter={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 41\n      }\n    }))))) : \"\");\n  }\n\n}\n\nexport default injectIntl(RegisterSlideOut);","map":{"version":3,"sources":["D:/WorkingFolder/LIMS/ALPD/branches/Version 11.0.0.1/QuaLISWeb/src/pages/registration/RegisterSlideOut.jsx"],"names":["React","Component","Row","Col","Nav","FormGroup","FormLabel","Button","HeaderSpan","FontAwesomeIcon","faPlus","faFileImport","FormattedMessage","injectIntl","process","DataGrid","DynamicSlideout","ReadOnlyText","SplitterLayout","Site","SiteScheduler","FormSelectSearch","SchedulerMasterCombo","formCode","SampleType","transactionStatus","schedulerConfigType","RegisterSlideOut","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","formCallback","height","state","formWrapheight","formWrapheightDisable","render","testColumnList","width","loadPreregister","userInfo","nformcode","SCHEDULERCONFIGURATION","sampleType","value","INSTRUMENT","intl","formatMessage","id","siteList","selectedRecord","event","onComboChange","selectedSample","nschedulerconfigtypecode","EXTERNAL","schedulerList","scheduleMasterDetails","onSchedulerComboChange","templateData","handleChange","handleDateChange","onInputOnChange","onNumericInputChange","comboData","timeZoneList","defaultTimeZone","editfield","custombuttonclick","onNumericBlur","addMasterRecord","editMasterRecord","userRoleControlRights1","onClickView","operation","comboComponents","onDropFile","deleteAttachment","e","AddSpec","selectedSpec","label","importData","AddImportFile","AddSampleCount","nneedsubsample","addsubSample","specBasedComponent","specBasedTestPackage","selectedComponent","slno","subSampleDataGridList","subSampleDataState","subSampleDataStateChange","subSampleDataGridFields","controlMap","userRoleControlRights","inputParam","handleComponentRowClick","editSubSample","deleteComponent","addTest","SelectedTest","testDataState","testDataStateChange","Map","deleteTest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import react, {useState, useEffect, useRef} from \"react\";\r\nimport { Row, Col, Nav, FormGroup, FormLabel, Button } from 'react-bootstrap';\r\nimport { HeaderSpan } from './registration.styled';\r\nimport './registration.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faFileImport } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n//import ReactTooltip from 'react-tooltip';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport Site from '../basemaster/Site';\r\nimport SiteScheduler from '../Scheduler/SiteScheduler';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport SchedulerMasterCombo from '../Scheduler/SchedulerMasterCombo';\r\nimport { formCode ,SampleType ,transactionStatus ,schedulerConfigType} from '../../components/Enumeration';\r\n\r\n\r\nclass RegisterSlideOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            splitChangeWidthPercentage: 50.6,\r\n        }\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    formCallback = (height) => {\r\n        if (height !== this.state.formWrapheight) {\r\n            this.setState({ formWrapheightDisable: true })\r\n            // retriggering the splitter layout to get the latest height\r\n            this.setState({\r\n                formWrapheight: height,\r\n                formWrapheightDisable: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"RegiterSlideoutmodal\",this.props.selectedRecord);\r\n        const testColumnList = [\r\n\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }\r\n        ]\r\n\r\n\r\n\r\n        // const [height, setHeight] = useState(0)\r\n        // const refDiv = useRef(null)\r\n\r\n        // useEffect(() => {\r\n        //     setHeight(refDiv.current.clientHeight)\r\n        // })\r\n        //console.log(\"this.props.sampleType:\", this.props.sampleType, this.props.comboComponents);\r\n\r\n        return (\r\n            <>\r\n                {this.props.loadPreregister ?\r\n                    <>\r\n                {\r\n                                         this.props.userInfo.nformcode===formCode.SCHEDULERCONFIGURATION && this.props.sampleType.value===SampleType.INSTRUMENT?\r\n                                        <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"SchedulerSite\"}\r\n                                        isDisabled={ false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={this.props.siteList}\r\n                                        value={this.props.selectedRecord[\"SchedulerSite\"] || \"\"}\r\n                                        defaultValue={this.props.selectedRecord[\"SchedulerSite\"]}\r\n                                        onChange={(event) => this.props.onComboChange(event, \"SchedulerSite\",\"SchedulerSite\")}\r\n                                        closeMenuOnSelect={true}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                        :\"\"\r\n                                        }\r\n                                                {\r\n                                        this.props.selectedSample.nschedulerconfigtypecode===schedulerConfigType.EXTERNAL?\r\n\r\n                                        <SchedulerMasterCombo\r\n                                        schedulerList={this.props.schedulerList}\r\n                                        scheduleMasterDetails={this.props.scheduleMasterDetails}\r\n                                        selectedRecord={this.props.selectedRecord}\r\n                                        formatMessage={this.props.intl.formatMessage}\r\n                                        onSchedulerComboChange={this.props.onSchedulerComboChange}\r\n                                        userInfo={this.props.userInfo}\r\n\r\n                                        />    \r\n                                :\"\"\r\n                                            }\r\n\r\n                        <DynamicSlideout\r\n                            siteList={this.props.siteList}\r\n                            selectedRecord={this.props.selectedRecord}\r\n                            templateData={this.props.templateData}\r\n                            handleChange={this.props.handleChange}\r\n                            handleDateChange={this.props.handleDateChange}\r\n                            onInputOnChange={this.props.onInputOnChange}\r\n                            onNumericInputChange={this.props.onNumericInputChange}\r\n                            comboData={this.props.comboData}\r\n                            onComboChange={this.props.onComboChange}\r\n                            userInfo={this.props.userInfo}\r\n                            timeZoneList={this.props.timeZoneList}\r\n                            defaultTimeZone={this.props.defaultTimeZone}\r\n                            editfield={this.props.editfield}\r\n                            enableCallback={true}\r\n                            triggerCallback={this.formCallback}\r\n                            selectedSample={this.props.selectedSample}\r\n                            custombuttonclick={this.props.custombuttonclick}\r\n                            onNumericBlur={this.props.onNumericBlur}\r\n                            addMasterRecord={this.props.addMasterRecord}\r\n                            editMasterRecord={this.props.editMasterRecord}\r\n                            userRoleControlRights={this.props.userRoleControlRights1}\r\n                            onClickView={this.props.onClickView}\r\n                            operation={this.props.operation}\r\n                            sampleType={this.props.sampleType}\r\n                            comboComponents={this.props.comboComponents}\r\n                            onDropFile={this.props.onDropFile}\r\n                            deleteAttachment={this.props.deleteAttachment}\r\n                        />\r\n                        <Row>\r\n                            <Col md={12} className=\"p-0\">\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <HeaderSpan className='pl-3'>\r\n                                            <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                        {this.props.operation === \"create\" ?\r\n                                        // this.props.ntestgroupspecrequired === false ? <br/> :   //ALPD-4834, Vishakh, Added condition to show or hide add spec button\r\n                                            <Nav.Link className=\"add-txt-btn text-right\"\r\n                                                // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                                onClick={(e) => this.props.AddSpec(e)}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                                <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                            </Nav.Link> \r\n                                            :\r\n                                            // this.props.ntestgroupspecrequired === false ? <br/> :   //ALPD-4834, Vishakh, Added condition to show or hide add spec button\r\n                                            <Nav.Link className=\"add-txt-btn text-right\"\r\n                                                // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                                onClick={(e) => this.props.AddSpec(e)}\r\n                                            >\r\n                                                <div>\r\n                                                    {\" \"}\r\n                                                </div>\r\n                                                {\"\"}\r\n                                            </Nav.Link>\r\n                                            }\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]}\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    :\r\n                    !this.state.formWrapheightDisable ?\r\n                        <SplitterLayout borderColor=\"#999\"\r\n                            primaryIndex={1}\r\n                            secondaryInitialSize={this.state.formWrapheight}\r\n                            primaryMinSize={40}\r\n                            vertical\r\n                            customClassName=\" p-3 no-border-pane no-height -c-pd-t-1  primary-pane-top\"\r\n                        >\r\n                            <Row>\r\n                                {/* <Col md={12} className=\"p-0\">\r\n                                    <Nav.Link className=\"add-txt-btn text-right\"\r\n                                            onClick={this.props.addPatient}\r\n                                        >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                        <FormattedMessage id='IDS_PATIENT' defaultMessage='Patient' />\r\n                                    </Nav.Link>\r\n                                </Col> */}\r\n                                {/* </Row>\r\n                            <Row> */}\r\n                                <Col md={12} className=\"p-0\">\r\n\r\n                                        {\r\n                                            this.props.userInfo.nformcode===formCode.SCHEDULERCONFIGURATION && this.props.sampleType.value===SampleType.INSTRUMENT?\r\n                                        <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"SchedulerSite\"}\r\n                                        isDisabled={ false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={this.props.siteList}\r\n                                        value={this.props.selectedRecord[\"SchedulerSite\"] || \"\"}\r\n                                        defaultValue={this.props.selectedRecord[\"SchedulerSite\"]}\r\n                                        onChange={(event) => this.props.onComboChange(event, \"SchedulerSite\",\"SchedulerSite\")}\r\n                                        closeMenuOnSelect={true}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                        :\"\"\r\n                                        }\r\n                                                {\r\n                                        this.props.nschedulerconfigtypecode==schedulerConfigType.EXTERNAL?\r\n\r\n                                        <SchedulerMasterCombo\r\n                                        schedulerList={this.props.schedulerList}\r\n                                        scheduleMasterDetails={this.props.scheduleMasterDetails}\r\n                                        selectedRecord={this.props.selectedRecord}\r\n                                        formatMessage={this.props.intl.formatMessage}\r\n                                        onSchedulerComboChange={this.props.onSchedulerComboChange}\r\n                                        userInfo={this.props.userInfo}\r\n\r\n                                        />    \r\n                                :\"\"\r\n                                            }\r\n                                   \r\n                            \r\n                                    <DynamicSlideout\r\n                                        // ref={refDiv}\r\n                                        selectedRecord={this.props.selectedRecord}\r\n                                        templateData={this.props.templateData}\r\n                                        handleChange={this.props.handleChange}\r\n                                        handleDateChange={this.props.handleDateChange}\r\n                                        onInputOnChange={this.props.onInputOnChange}\r\n                                        onNumericInputChange={this.props.onNumericInputChange}\r\n                                        comboData={this.props.comboData}\r\n                                        onComboChange={this.props.onComboChange}\r\n                                        userInfo={this.props.userInfo}\r\n                                        timeZoneList={this.props.timeZoneList}\r\n                                        defaultTimeZone={this.props.defaultTimeZone}\r\n                                        enableCallback={true}\r\n                                        triggerCallback={this.formCallback}\r\n                                        selectedSample={this.props.selectedSample}\r\n                                        custombuttonclick={this.props.custombuttonclick}\r\n                                        onNumericBlur={this.props.onNumericBlur}\r\n                                        addMasterRecord={this.props.addMasterRecord}\r\n                                        editMasterRecord={this.props.editMasterRecord}\r\n                                        userRoleControlRights={this.props.userRoleControlRights1}\r\n                                        onClickView={this.props.onClickView}\r\n                                        sampleType={this.props.sampleType}\r\n                                        comboComponents={this.props.comboComponents}\r\n                                        onDropFile={this.props.onDropFile}\r\n                                        deleteAttachment={this.props.deleteAttachment}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row noGutters={true}>\r\n                                {/* <Row noGutters={true}> */}\r\n\r\n                                <Col md={12} className=\"p-0\">\r\n                                    <div className=\"actions-stripe\">\r\n                                        {/* <div className=\"d-flex justify-content-between\"> */}\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <HeaderSpan>\r\n                                                <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                            {this.props.operation === \"create\" ?\r\n                                                <>\r\n                                                {\r\n                                                // this.props.ntestgroupspecrequired === false ? <br/>    //ALPD-4834, Vishakh, Added condition to show or hide add spec button :\r\n                                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                                // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                                    onClick={(e) => this.props.AddSpec(e)}\r\n                                                >\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                                <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                                </Nav.Link> }\r\n                                                    \r\n                                                    {this.props.importData ?\r\n                                                    <>\r\n                                                   <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORT\" })}\r\n                                                        // data-for=\"tooltip-grid-wrap\"\r\n                                                        onClick={(event) => this.props.AddImportFile(event)}>\r\n                                                        <FontAwesomeIcon icon={faFileImport} />\r\n                                                        </Button>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_SAMPLECOUNT\" })}\r\n                                                        // data-for=\"tooltip-grid-wrap\"\r\n                                                        onClick={(event) => this.props.AddSampleCount(event)}>\r\n                                                        <FontAwesomeIcon icon={faFileImport} />\r\n                                                        </Nav.Link>\r\n                                                    </>:\"\"}\r\n                                                </>\r\n                                                : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n\r\n                                {/* <Col md={12} className=\"actioncolor\">\r\n                        <ProductList className=\"d-flex justify-content-end dropdown badget_menu hideboxshadow\">\r\n                            <CustomSwitch\r\n                                name={\"ntransactionstatus\"}\r\n                                type=\"switch\"\r\n                                parentClassName=\"customswitchcss\"\r\n                                labelClassName={\"mb-0 paddingleft5\"}\r\n                                label={\"IDS_ALLTEST\"}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_ALLTEST\" })}\r\n                                defaultValue={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                            />\r\n                            <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\"\r\n                                href=\"#\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_GETCOMPONENTS\" })}\r\n                            >\r\n                                <FontAwesomeIcon icon={faCartArrowDown} className=\"ActionIconColor\"\r\n                                    onClick={(event) => getComponent(event, this.props.selectedRecord)}\r\n                                />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\" href=\"\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTEXCEL\" })}\r\n                                hidden={false}>\r\n                                <input type=\"file\" style={{ display: \"none\" }} />\r\n                                <FontAwesomeIcon icon={faFileImport} className=\"ActionIconColor\" onClick={(event) => this.props.AddFile()}>\r\n                                </FontAwesomeIcon>\r\n\r\n                            </Nav.Link>\r\n                        </ProductList>\r\n                    </Col> */}\r\n                                {/* </Row> */}\r\n                                <Col md={12}>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                                                <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                                <ReadOnlyText>\r\n                                                    {this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]}\r\n                                                </ReadOnlyText>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                {/* {this.props.nneedsubsample === 4 ?\r\n                    <Row>\r\n                        <Col md={12} className=\"p-0\">\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <HeaderSpan>\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-right\"\r\n                                        onClick={(e) => this.props.AddComponent(e)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            <DataGrid\r\n                                key=\"slno\"\r\n                                primaryKeyField=\"slno\"\r\n                                selectedId={this.props.selectedComponent ? this.props.selectedComponent.slno : null}\r\n                                dataResult={process(this.props.Component || [], this.props.componentDataState)}\r\n                                dataState={this.props.componentDataState}\r\n                                dataStateChange={this.props.componentDataStateChange}\r\n                                extractedColumnList={this.props.componentColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                hasControlWithOutRights={true}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                pageable={true}\r\n                                scrollable={\"scrollable\"}\r\n                                isActionRequired={true}\r\n                                handleRowClick={this.props.handleComponentRowClick}\r\n                                methodUrl=\"PopUp\"\r\n                                gridHeight={\"350px\"}\r\n                                editRecordWORights={this.props.editComponent}\r\n                                deleteRecordWORights={this.props.deleteComponent}\r\n                                showdeleteRecordWORights={true}\r\n                                showeditRecordWORights={true}\r\n                            >\r\n                            </DataGrid>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    : \"\"} */}\r\n                                <Row noGutters={true}>\r\n\r\n                                    {this.props.nneedsubsample ?\r\n                                        <Col md={6}>\r\n                                            <div className=\"actions-stripe\">\r\n                                                {/* <div className=\"d-flex justify-content-between\"> */}\r\n                                                <div className=\"d-flex justify-content-end\">\r\n                                                    <HeaderSpan> <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' /></HeaderSpan>\r\n                                                    <Nav.Link className=\"add-txt-btn text-right\" onClick={(e) => this.props.addsubSample(this.props.specBasedComponent, this.props.specBasedTestPackage)} >\r\n                                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                        <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' />\r\n                                                    </Nav.Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <DataGrid\r\n                                                key=\"slno\"\r\n                                                primaryKeyField=\"slno\"\r\n                                                selectedId={this.props.selectedComponent ?\r\n                                                    this.props.selectedComponent.slno : null}\r\n                                                data={this.props.subSampleDataGridList}\r\n                                                dataResult={process(this.props.subSampleDataGridList || [],\r\n                                                    this.props.subSampleDataState)}\r\n                                                dataState={this.props.subSampleDataState}\r\n                                                dataStateChange={this.props.subSampleDataStateChange}\r\n                                                extractedColumnList={this.props.subSampleDataGridFields}\r\n                                               // detailedFieldList={this.props.subSampleDataDetailGridList}\r\n                                                controlMap={this.props.controlMap}\r\n                                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                                hasControlWithOutRights={true}\r\n                                                inputParam={this.props.inputParam}\r\n                                                userInfo={this.props.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={\"scrollable\"}\r\n                                                isActionRequired={true}\r\n                                                handleRowClick={this.props.handleComponentRowClick}\r\n                                                methodUrl=\"PopUp\"\r\n                                                gridHeight={\"400px\"}\r\n                                                editRecordWORights={(inputParam) => this.props.editSubSample(inputParam, this.props.specBasedComponent)}\r\n                                                deleteRecordWORights={this.props.deleteComponent}\r\n                                                showdeleteRecordWORights={true}\r\n                                                showeditRecordWORights={false}\r\n                                                //  isActionRequired={true}\r\n                                                jsonField={'jsondata'}\r\n                                               //expandField=\"expanded\"\r\n\r\n                                            // hideColumnFilter={true}\r\n                                            // handleRowClick={this.props.selectSubSample}\r\n                                            />\r\n                                        </Col> : \"\"}\r\n                                    <Col md={this.props.nneedsubsample ? 6 : 12}>\r\n                                        <div className=\"actions-stripe\">\r\n                                            {/* <div className=\"d-flex justify-content-between\"> */}\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addTest(this.props.selectedComponent,\r\n                                                    this.props.nneedsubsample, this.props.specBasedComponent)} >\r\n                                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                    <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </div>\r\n                                        <DataGrid\r\n                                            key=\"ntestgrouptestcode\"\r\n                                            primaryKeyField=\"ntestgrouptestcode\"\r\n                                            selectedId={null}//this.state.selectedTestItem.ntestgrouptestcode\r\n                                            data={this.props.SelectedTest}\r\n                                            dataResult={process(this.props.SelectedTest || [], this.props.testDataState)}\r\n                                            dataState={this.props.testDataState}\r\n                                            dataStateChange={this.props.testDataStateChange}\r\n                                            extractedColumnList={testColumnList}\r\n                                            controlMap={new Map()}\r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            hasControlWithOutRights={true}\r\n                                            inputParam={this.props.inputParam}\r\n                                            userInfo={this.props.userInfo}\r\n                                            pageable={true}\r\n                                            scrollable={\"scrollable\"}\r\n                                            isActionRequired={true}\r\n                                            // handleRowClick={this.handleRowClick}\r\n                                            methodUrl=\"PopUp\"\r\n                                            gridHeight={\"400px\"}\r\n                                            deleteRecordWORights={this.props.deleteTest}\r\n                                            showdeleteRecordWORights={true}\r\n                                            showeditRecordWORights={false}\r\n                                            //expandField=\"expanded\"\r\n                                        // hideColumnFilter={true}\r\n\r\n                                        />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Row>\r\n                        </SplitterLayout>\r\n\r\n                        : \"\"\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default injectIntl(RegisterSlideOut)\r\n"]},"metadata":{},"sourceType":"module"}