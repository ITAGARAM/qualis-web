{"ast":null,"code":"import _toConsumableArray from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\WorkingFolder\\\\LIMS\\\\ALPD\\\\branches\\\\Version 11.0.0.1\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Nav,FormGroup,FormLabel,Card,Modal,Image,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faCheckCircle,faCopy,faEye,faPlay,faPlus,faSync,faBolt}from'@fortawesome/free-solid-svg-icons';import reject from\"../../assets/image/reject.svg\";import elnimage from\"../../assets/image/sheet-view.svg\";import{callService,crudMaster,updateStore,getTestInstrumentComboService,getTestInstrumentCategory,getProductBasedInstrument,getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction,validateEsignforBatch,getBatchCreationFilter//,batchTAT\n}from'../../actions';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType,SampleType}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,getStartOfDay,getEndOfDay,formatInputDate,constructOptionList,rearrangeDateFormat,convertDateValuetoString,CF_encryptionData}from'../../components/CommonScript';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import Esign from'../audittrail/Esign';import{ProductList}from'../product/product.styled';import CustomPopover from'../../components/customPopover';import{ReactComponent as SaveIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/save_icon.svg\";import BatchCreationFilter from'./BatchCreationFilter';import AddBatchCreation from'./AddBatchCreation';import AddBatchinitiate from'./AddBatchinitiate';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import SampleTab from'./SampleTab';import BatchhistoryTab from'./BatchhistoryTab';import{process}from'@progress/kendo-data-query';import AddSample from'../batchruncreation/AddSample';import ListMaster from'../../components/list-master/list-master.component';import ViewInfo from'./ViewInfo';import{Affix}from'rsuite';import AddMaterialIqc from'./AddMaterialIqc';import BatchIqcSampleTab from'./BatchIqcSampleTab';import BatchResultTab from'./BatchResultTab';import PortalModal from'../../PortalModal';import Iframe from'react-iframe';import ReactTooltip from'react-tooltip';import{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";import ModalShow from'../../components/ModalShow';import FormTextarea from'../../components/form-textarea/form-textarea.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var BatchCreation=/*#__PURE__*/function(_React$Component){_inherits(BatchCreation,_React$Component);var _super=_createSuper(BatchCreation);function BatchCreation(props){var _this;_classCallCheck(this,BatchCreation);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.completeMandatoryFields=[{\"idsName\":\"IDS_BATCHCOMPLETEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.initiateMandatoryFields=[{\"idsName\":\"IDS_BATCHINITIATEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.materialIqcMandatory=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"smaterialtypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"smaterialcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"smaterialname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"sinventoryid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.getSamples=function(selectedbatchmaster){var addSampleID=_this.state.controlMap.has(\"AddSamples\")&&_this.state.controlMap.get(\"AddSamples\").ncontrolcode;if(selectedbatchmaster.ntransactionstatus==transactionStatus.INITIATED||selectedbatchmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedbatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else{_this.props.getSamplesForGrid(_this.props.Login.masterData.SelectedBatchmaster.ntestcode,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,addSampleID,_this.state.dataState,_this.state.addedSamplesListSortedList);}};_this.createBatchValidation=function(addParam){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){_this.props.getBatchSection(addParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.getIqcSamples=function(SelectedBatchmaster){if(SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED||SelectedBatchmaster.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOADDIQC\"}));}else{var addcontrolcode=_this.state.controlMap.has(\"AddBatchCreation\")&&_this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var inputData={};inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData['naddcontrolCode']=addcontrolcode;inputData['ntestgroupspecrequired']=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.ntestgroupspecrequired===true?transactionStatus.YES:transactionStatus.NO;// inputData['section']={\n//         nsectioncode: SelectedBatchmaster.nsectioncode\n// };\ninputData['nsectioncode']=SelectedBatchmaster.nsectioncode;inputData['userInfo']=_this.props.Login.userInfo;inputData['nbatchmastercode']=SelectedBatchmaster.nbatchmastercode;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;_this.props.getIqcSamples(inputData,_this.props.Login.masterData);}};_this.deleteRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.selectedRecord.nbatchsampleCode,fetchUrl:\"batchcreation/getSampleTabDetails\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var jsondata=inputData.selectedRecord;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Sample\",postParam:postParam,inputData:{Sample:{\"sarno\":inputData.selectedRecord.sarno,\"ssamplearno\":inputData.selectedRecord.ssamplearno,\"stestname\":inputData.selectedRecord.stestname,\"nbatchsamplecode\":inputData.selectedRecord.nbatchsamplecode},\"userInfo\":_this.props.Login.userInfo,nbatchsamplecode:inputData.selectedRecord.nbatchsamplecode,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"samples\":[]}),nbatchmastercode:inputData.selectedRecord.nbatchmastercode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteSampleAction(inputParam.inputData);}}};_this.cancelRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.nbatchsampleiqccode,fetchUrl:\"batchcreation/getBatchIqcSampleAction\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"batchcreation\",methodUrl:\"IQCSample\",postParam:postParam,inputData:{iqcSample:inputData.selectedRecord,nbatchsampleiqccode:inputData.selectedRecord.nbatchsampleiqccode,masterData:_this.props.Login.masterData,nbatchmastercode:inputData.selectedRecord.nbatchmastercode,nmaterialinventtranscode:inputData.selectedRecord.nmaterialinventtranscode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.cancelIQCSampleAction(inputParam.inputData);}}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;if(screenName==\"IDS_BATCHHISTORY\"){var inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchhistoryAction(inputData,true);}else if(screenName==\"IDS_BATCHIQCSAMPLE\"){var _inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchIqcSampleAction(_inputData,true);}else if(screenName==\"IDS_RESULTS\"){var _inputData2={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchViewResultAction(_inputData2,true);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,batchactiveKey:screenName}};_this.props.updateStore(updateInfo);}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Samples,event.dataState),sampleState:event.dataState});};_this.dataStateBatchHistoryChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Batchhistory,event.dataState),histortState:event.dataState});};_this.dataStateBatchIqcChangeChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.iqcsample,event.dataState),iqcsampleState:event.dataState});};_this.dataStateViewChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Resultview,event.dataState),viewstate:event.dataState});};_this.getApprovalVersion=function(data){var inputData=[];var obj=convertDateValuetoString(_this.props.Login.masterData.fromDate||_this.props.Login.masterData.realFromDate,_this.props.Login.masterData.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:data.item.nregtypecode,userInfo:_this.props.Login.userInfo,nregsubtypecode:data.item.nregsubtypecode,masterData:_this.props.Login.masterData,isneedapprovalfilter:true,defaultRegistrationSubType:data.item,isneedrealFilterStatus:\"false\",// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate};_this.props.getBCApprovalConfigVersion(inputData);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_SAMPLE\",/*#__PURE__*/React.createElement(SampleTab,{sample:_this.props.Login.masterData.Samples||[],dataResult:process(_this.props.Login.masterData.Samples||[],_this.state.sampleState),dataState:_this.state.sampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,deleteRecord:_this.deleteRecord,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumnMoreItems(_this.state.DynamicGridMoreItem)||[],methodUrl:\"Samples\",getSamples:function getSamples(){return _this.getSamples(_this.props.Login.masterData.SelectedBatchmaster);}// getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\n//inputParam={this.props.Login.inputParam}\n,screenName:\"IDS_SAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHIQCSAMPLE\",/*#__PURE__*/React.createElement(BatchIqcSampleTab,{iqcsample:_this.props.Login.masterData.iqcsample||[],dataResult:process(_this.props.Login.masterData.iqcsample||[],_this.state.iqcsampleState),dataState:_this.state.iqcsampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateBatchIqcChangeChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,cancelRecord:_this.cancelRecord,methodUrl:\"IQCSample\",getIqcSamples:function getIqcSamples(){return _this.getIqcSamples(_this.props.Login.masterData.SelectedBatchmaster);},screenName:\"IDS_BATCHIQCSAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));//     if (this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.INITIATED\n//         || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.COMPLETED)\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(BatchResultTab,{ELNTest:_this.props.Login.masterData.ELNTest||[],resultview:_this.props.Login.masterData.Resultview||[],dataResult:process(_this.props.Login.masterData.Resultview||[],_this.state.viewstate),dataState:_this.state.viewstate,dataStateChange:_this.dataStateViewChange,userInfo:_this.props.Login.userInfo,methodUrl:\"BatchViewResult\",screenName:\"IDS_RESULTS\",intl:_this.props.intl,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,selectedfilename:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno}));}tabMap.set(\"IDS_BATCHHISTORY\",/*#__PURE__*/React.createElement(BatchhistoryTab,{batchhistory:_this.props.Login.masterData.Batchhistory||[],dataResult:process(_this.props.Login.masterData.Batchhistory||[],_this.state.histortState),dataState:_this.state.histortState,dataStateChange:_this.dataStateBatchHistoryChange,userInfo:_this.props.Login.userInfo,methodUrl:\"Batchhistory\",screenName:\"IDS_BATCHHISTORY\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));return tabMap;};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntoDate:dateObj.toDate,//this.props.Login.masterData.toDate,\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate,//ALPD-3571--Vignesh R(05-09-2024) \nrealndesigntemplatemappingcode:_this.props.Login.masterData.realndesigntemplatemappingcode,napprovalversioncode:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA,napprovalconfigcode:_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA,ApprovalVersionValue:_this.state.ApprovalVersionValue};_this.props.getBCApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntoDate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,// realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion,realFromDate:_this.props.Login.masterData.realFromDate,realToDate:_this.props.Login.masterData.realToDate};_this.props.getBCApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",nsampletypecode:parseInt(event.value),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData,isneedrealFilterStatus:\"false\",// realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n//  realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n//realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion};_this.props.getBCRegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:3,needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userInfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,defaultSampleType:_this.props.Login.masterData.defaultSampleType,isneedrealFilterStatus:\"false\",// realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\n// realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\n// realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\n// realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\nrealRegistrationTypeList:_this.props.Login.masterData.realRegistrationTypeList,realRegistrationSubTypeList:_this.props.Login.masterData.realRegistrationSubTypeList,realApprovalConfigVersionList:_this.props.Login.masterData.realApprovalConfigVersionList,realBCFilterStatusList:_this.props.Login.masterData.realBCFilterStatusList,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue,realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus,realApproveConfigVersion:_this.props.Login.masterData.realApproveConfigVersion};_this.props.getBCRegistrationSubType(inputData,_this.props.Login.masterData);}else if(fieldname===\"nregsubtypecode\"){var nregsubtypecode=_this.state;//this.setState({ nregsubtypecode:event });\n_this.getApprovalVersion(event);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={nflag:3,needFilterSubmit:\"false\",fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.nneedsubsample||4,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};//this.props.getREFilterTestData(inputParamData)\n_this.props.getBCFilterTemplate(inputParamData);}else if(fieldname===\"version\"){// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\n//     this.props.Login.masterData.toDate, this.props.Login.userInfo);\n// inputData = {\n//     nflag: 4,\n//     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\n//     todate: obj.toDate,//this.props.Login.masterData.toDate,\n//     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\n//     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\n//     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\n//     napprovalversioncode: event.value,\n//     userinfo: this.props.Login.userInfo,\n//     defaultApprovalConfigVersion: event.item,\n//     masterData: this.props.Login.masterData,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n// }\n// this.props.getBCJobStatus(inputData)\nvar ApprovalVersionValue=_this.state;_this.setState({ApprovalVersionValue:event});}else if(fieldname===\"jobstatus\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,needFilterSubmit:\"false\",fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCFilterStatus(inputData);}else if(fieldname===\"filter\"){var FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else if(fieldname===\"test\"){var _FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else{var selectedRecord=_this.state;_this.setState({selectedRecord:event});}}};_this.handleFilterDateChange=function(dateValue,dateName){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var addedSamplesList=[];checked=checked==false&&_this.state.samples.length>0?false:_this.state.samples.length==0?false:true;if(checked){var _this$setState;//const data = event.dataItems.map(item => {\n//ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\nvar data=event.target.props.data.map(function(item){if(addedSamplesList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})===-1){//addedSamplesList.push({ ...item, selected: false });\nitem.selected=checked;var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);return item;}else{var olditem=JSON.parse(JSON.stringify(addedSamplesList[addedSamplesList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})]));olditem.selected=checked;var _newItem=JSON.parse(JSON.stringify(olditem));_newItem.selected=false;_newItem[\"jsondata\"]={};_newItem[\"jsonuidata\"]={};_newItem[\"jsondata\"]['samplelist']=olditem;_newItem[\"jsonuidata\"]['samplelist']=olditem;addedSamplesList.push(_newItem);return olditem;}});//ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\n_this.setState((_this$setState={samples:data,addedSamplesList:addedSamplesList,addComponentDataListCopy:_this.valiateCopy(_this.state.addedSamplesListSortedList||[],data||[],addedSamplesList||[]),addSelectAll:_this.valiateCheckAll(addedSamplesList),deleteSelectAll:_this.valiateCheckAll(addedSamplesList)},_defineProperty(_this$setState,\"addSelectAll\",checked),_defineProperty(_this$setState,\"deleteSelectAll\",false),_this$setState));}else{var _this$setState2;// let sampleListData = this.state.sampleList || [];\n// let deletedListdData = this.state.sampleList || [];\nvar _addedSamplesList=_this.state.addedSamplesList||[];var deletedListdData=_this.state.deletedList||[];var _data=event.target.props.data.map(function(item){_addedSamplesList=_addedSamplesList.filter(function(item1){return item1.npreregno!==item.npreregno;});deletedListdData=deletedListdData.filter(function(item1){return item1.npreregno!==item.npreregno;});item.selected=checked;return item;});// console.log(\"data:\",data1, data2);\n_this.setState((_this$setState2={samples:_data,addedSamplesList:_addedSamplesList,deletedList:deletedListdData,addSelectAll:_this.valiateCheckAll(_addedSamplesList),deleteSelectAll:_this.valiateCheckAll(_addedSamplesList)},_defineProperty(_this$setState2,\"addSelectAll\",checked),_defineProperty(_this$setState2,\"deleteSelectAll\",false),_defineProperty(_this$setState2,\"addComponentDataListCopy\",_this.valiateCopy(_this.state.addedSamplesListSortedList||[],_data||[],_addedSamplesList||[])),_this$setState2));}// const data = this.state.addComponentDataList.map(item=>{\n//     if (checked){\n//         addedComponentList.push({...item, selected:false});\n//     }\n//     else{\n//         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\n//         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \n//     }  \n//     item.selected = checked;\n//     return item;\n// });\n};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}};_this.selectionChange=function(event){var addedSamplesList=_this.state.addedSamplesList||[];//let addedSamplesList= [];\n//let samples = this.state.samples || [];\nvar samplesList=_this.state.samples.map(function(item){if(item.ntransactiontestcode===event.dataItem.ntransactiontestcode){item.selected=!event.dataItem.selected;//  item={...item,\"selected\":!event.dataItem.selected};\nif(item.selected){var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];//newItem[\"selected\"]=item.selected;\nnewItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);}else{addedSamplesList=addedSamplesList.filter(function(item1){return item1.ntransactiontestcode!==item.ntransactiontestcode;});}}return item;});///samplesList = addedSamplesList;\n_this.setState({addSelectAll:_this.valiateCheckAll(_this.state.dataState&&_this.state.dataState.filter&&_this.state.dataState.filter!==null&&_this.state.dataState.filter!==undefined?process(samplesList||[],_this.state.dataState).data:samplesList),samples:samplesList,addedSamplesList:addedSamplesList,//addSelectAll: this.valiateCheckAll(addComponentDataList),\ndeleteSelectAll:_this.valiateCheckAll(addedSamplesList),addComponentDataListCopy:_this.valiateCopy(_this.state.addedSamplesListSortedList||[],samplesList||[],addedSamplesList||[])});};_this.childDataChange=function(addedSamplesListSortedList){_this.setState({addedSamplesListSortedList:addedSamplesListSortedList,isInitialRender:false});};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;console.log(\"handle save:\",selectedRecord);mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];var selectedSpec=_this.props.Login.selectedSpec;if(selectedRecord&&selectedRecord.nallottedspeccode!==\"\"){selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedSpec:selectedSpec,openModal:true,openSpecModal:false}};_this.props.updateStore(updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.ConfirmDelete=function(selectedBatch,deleteId,operation){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteBatchCreation(selectedBatch,deleteId,operation);});};_this.completePopUpStartActions=function(completeId){// if(this.props.Login.masterData.nneedtestinitiate === true){\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}//    }else \nelse if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: true, \n//         completeId : completeId,\n//         masterData: this.props.Login.masterData,\n//        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n//         operation: \"complete\"\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar inputData={};inputData[\"openModal\"]=true;inputData[\"completeId\"]=completeId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"complete\";_this.props.batchCompleteDatePopup(inputData,_this.props.Login.masterData);}};_this.AddSpec=function(e){if(_this.state.selectedMaterial!==undefined&&_this.state.selectedMaterialCategory!==undefined){var inputData={};inputData[\"nmaterialcode\"]=_this.state.selectedMaterial.value;inputData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory.value;inputData[\"ncategorybasedflow\"]=_this.state.selectedMaterialCategory.item.ncategorybasedflow;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;// inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \n// inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \n// inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \n// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\n// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\n// inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\n_this.props.getTreeByMaterial(inputData,_this.state.selectedRecord,_this.props.Login.masterData);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_FILLALLDETAILSTOADDSPEC\"}));}};_this.testPopUpStartActions=function(testStartId){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}// else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};inputData[\"openModal\"]=true;inputData[\"testStartId\"]=testStartId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"initiate\";_this.props.batchInitiateDatePopup(inputData,_this.props.Login.masterData);//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: {\n//                 openModal: true, \n//                 testStartId : testStartId,\n//                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\n//                 masterData: this.props.Login.masterData,\n//                 operation: \"initiate\"\n//             }\n//         }\n// this.props.updateStore(updateInfo);\n}};_this.testStartActions=function(selectedmaster,testStartId){if(selectedmaster.ntransactionstatus==transactionStatus.INITIATED||selectedmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}//else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};var jsonuidata=[];var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/initiateBatchcreation\",isSingleGet:true,fecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});if(_this.props.Login.masterData.iqcsample.length>0){var totalSample=_this.props.Login.masterData.Samples.concat(_this.props.Login.masterData.iqcsample);inputData[\"npreregno\"]=_this.props.Login.masterData.iqcsample.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=totalSample.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"nneedjoballocationiqc\"]=true;inputData[\"isiqcdata\"]=true;}else{inputData[\"npreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"isiqcdata\"]=false;inputData[\"nneedjoballocationiqc\"]=false;}inputData[\"nbatchsampleCode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.nbatchsamplecode;}).join(\",\");inputData[\"muluserpreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"mulusertransactionsamplecode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactionsamplecode;}).join(\",\");inputData[\"mulusertransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"batchsample\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"nneedmyjob\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedmyjob;inputData[\"nneedjoballocation\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedjoballocation;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:_this.props.Login.masterData.realApproveConfigVersion?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;//ALPD-4922   they dint pass in real data \ninputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napproveconfversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.INITIATED||transactionStatus.DRAFT;inputData[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;inputData[\"testStartId\"]=testStartId;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1];inputData[\"sample\"]=_this.props.Login.masterData?_this.props.Login.masterData.sample:\"\";inputData[\"iqcsample\"]=_this.props.Login.masterData?_this.props.Login.masterData.iqcsample:\"\";var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"initiate\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,testStartId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread({},masterData)},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchInitiateAction(inputData,_this.props.Login.masterData,_this.confirmMessage);}}};_this.batchSaveIQCActions=function(selectedmaster){if(_this.state.selectedRecord.savailablequatity!==\"0.00\"){if(parseFloat(_this.state.selectedRecord.susedquantity)<=parseFloat(_this.props.Login.masterData.inventoryTransaction.savailablequatity)){if(_this.props.Login.selectedSpec.nallottedspeccode!==undefined&&_this.props.Login.selectedSpec.nallottedspeccode!==\"\"){var userInfo={};var inputRegistrationData={};var inputMaterialInventoryData={};var inputBatchData={};var map={};var batchCreationSampleData={};var batchCreationTestData={};var batchCreationSampleArray=[];var batchCreationTestArray=[];var samplecombinationuniqueArray=[];var inputMaterialInventoryArrData=[];batchCreationSampleData[\"nspecsampletypecode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode:transactionStatus.NA;batchCreationSampleData[\"ncomponentcode\"]=transactionStatus.NA;batchCreationSampleData[\"slno\"]=1;batchCreationSampleArray.push(batchCreationSampleData);inputRegistrationData[\"nallottedspeccode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.value:transactionStatus.NA;inputRegistrationData[\"ntemplatemanipulationcode\"]=_this.props.Login.ntemplatemanipulationcode||transactionStatus.NA;inputRegistrationData[\"nregsubtypeversioncode\"]=_this.props.Login.masterData.nregsubtypeversioncode;inputRegistrationData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;// inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputRegistrationData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputRegistrationData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputRegistrationData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputRegistrationData[\"nproductcatcode\"]=transactionStatus.NA;inputRegistrationData[\"nproductcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcatcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcode\"]=transactionStatus.NA;inputRegistrationData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;inputRegistrationData[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;inputRegistrationData[\"jsondata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};inputRegistrationData[\"jsonuidata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};// inputMaterialInventoryData = {\n//     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\n// }\n//  inputMaterialInventoryData = {\n//         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\n//         jsondata : {\n//             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         jsonuidata : {\n//             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\n//  };\ninputMaterialInventoryData[\"nmaterialinventorycode\"]=_this.state.selectedMaterialInventory.item.nmaterialinventorycode;inputMaterialInventoryData[\"jsondata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsondata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\ninputMaterialInventoryData[\"nsectioncode\"]=_this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];inputMaterialInventoryData[\"jsonuidata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsonuidata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryArrData.push(inputMaterialInventoryData);\nbatchCreationTestData[\"ntestgrouptestcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode:transactionStatus.NA;//     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\nbatchCreationTestData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;batchCreationTestData[\"nsectioncode\"]=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;batchCreationTestData[\"nmethodcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;//   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\nbatchCreationTestData[\"nrepeatcountno\"]=1;//--\n//    batchCreationTestData[\"ntestretestno\"]=0;\nbatchCreationTestData[\"nparametercount\"]=1;//--\nbatchCreationTestData[\"slno\"]=1;//--\nbatchCreationTestArray.push(batchCreationTestData);map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;map[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;userInfo=_this.props.Login.userInfo;map[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;map[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;map[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;map[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;map[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;map[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;map[\"nmaterialtypecode\"]=_this.state.selectedMaterialType?_this.state.selectedMaterialType.value:transactionStatus.NA;inputBatchData=_this.props.Login.masterData.SelectedBatchmaster;map['Registration']=inputRegistrationData;map['Batchsampleiqc']=inputBatchData;map['RegistrationSample']=batchCreationSampleArray;map['testgrouptest']=batchCreationTestArray;map['userInfo']=userInfo;map['samplecombinationunique']=samplecombinationuniqueArray;map['inputMaterialInventoryArrData']=inputMaterialInventoryData;var inputParam={inputData:map,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHIQCSAVE\",operation:\"createiqc\"};_this.props.batchSaveIQCActions(inputParam.inputData,_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSPECIFICATIONS\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_NOAVAILABLEQUANTITY\"}));}};_this.cancelBatch=function(selectedmaster,cancelId){if(selectedmaster.ntransactionstatus==transactionStatus.DRAFT||selectedmaster.ntransactionstatus==transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHINITIATEDRECORD\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/cancelBatch\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.CANCELLED||transactionStatus.DRAFT;// inputData[\"Batchhistory\"] ={\n//     dtransactiondate : formatInputDate(new Date(),true),\n//     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\n//     };\n//inputData[\"completeId\"] = completeId;\ninputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[3];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batch\",displayName:\"IDS_BATCHCREATION\",operation:\"cancel\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,cancelId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCancelAction(inputData,_this.props.Login.masterData);}}};_this.batchCompleteActions=function(selectedmaster,completeId){if(selectedmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/completeBatchcreation\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;//  inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=transactionStatus.COMPLETED;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"completeId\"]=completeId;inputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"complete\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread({},masterData)},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCompleteAction(inputData,_this.props.Login.masterData);}}};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var openSpecModal=_this.props.Login.openSpecModal;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"cancel\"){//    this.props.Login.operation === \"complete\") {\nloadEsign=false;openModal=false;}else{loadEsign=false;}selectedRecord[\"esigncomments\"]=\"\";selectedRecord[\"esignpassword\"]=\"\";}else if(_this.props.Login.openSpecModal){loadEsign=false;openSpecModal=false;}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,openSpecModal:openSpecModal,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var _this$state=_this.state,selectedInstCategory=_this$state.selectedInstCategory,selectedInstrumentId=_this$state.selectedInstrumentId,InstrumentCategory=_this$state.InstrumentCategory,selectedInstrument=_this$state.selectedInstrument,Instrument=_this$state.Instrument,InstrumentID=_this$state.InstrumentID;var inputData={};if(comboData==null){selectedInstCategory=undefined;selectedInstrumentId=undefined;Instrument=undefined;InstrumentID=undefined;selectedInstrument=undefined;selectedRecord['sinstrumentcatname']=undefined;selectedRecord['sinstrumentname']=undefined;selectedRecord['sinstrumentid']=undefined;_this.setState({selectedInstCategory:selectedInstCategory,selectedInstrumentId:selectedInstrumentId,selectedInstrument:selectedInstrument,selectedRecord:selectedRecord,Instrument:Instrument,InstrumentID:InstrumentID});}else{selectedRecord[fieldName]=comboData.item;if(fieldName===\"sproductname\"){var isAlertUpdate=false;if(_this.state.selectedProduct!==undefined&&_this.state.selectedProduct.value!==comboData.value){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nproductcode\"]=comboData.value;selectedRecord[\"userInfo\"]=_this.props.Login.userInfo;selectedRecord[\"stestname\"]=_this.state.selectedRecord['stestname'];selectedRecord[\"ntestcode\"]=_this.state.selectedRecord['stestname']['ntestcode'];selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;//this.setState({ selectedProduct:comboData });\n_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_WANTTOCHANGESAMPLE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.props.getProductBasedInstrument(selectedRecord,_this.props.Login.masterData);},function(){return _this.props.getProductBasedInstrument(selectedRecord,_this.props.Login.masterData);});}else{selectedRecord[\"nproductcode\"]=comboData.value;selectedRecord[\"userInfo\"]=_this.props.Login.userInfo;selectedRecord[\"stestname\"]=_this.state.selectedRecord['stestname'];selectedRecord[\"ntestcode\"]=_this.state.selectedRecord['stestname']['ntestcode'];selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;//this.setState({ selectedProduct:comboData });\n_this.props.getProductBasedInstrument(selectedRecord,_this.props.Login.masterData);}}}else if(fieldName===\"ssectionname\"){inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=_this.props.Login.naddcontrolCode;inputData['section']=selectedRecord.ssectionname;inputData['userInfo']=_this.props.Login.userInfo;inputData['nneedmyjob']=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.nneedmyjob:false;inputData['nneedjoballocation']=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation:false;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;_this.props.getTestInstrumentComboService(inputData,_this.props.Login.masterData);// this.setState({ selectedSection:comboData });\n}else if(fieldName===\"stestname\"){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nprevioustestcode\"]=_this.state.selectedTestSynonym.value;}selectedRecord[\"ntestcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nprojectmastercode\"]=comboData.item.nprojectmastercode;selectedRecord['sinstrumentcatname']=undefined;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;_this.props.getTestInstrumentCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sinstrumentcatname\"){selectedRecord[\"ninstrumentcatcode\"]=comboData.value;selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;selectedRecord[\"ntestcode\"]=_this.state.selectedTestSynonym.value;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['sinstrumentname']=undefined;_this.props.getInstrumentForInstCategory(selectedRecord,_this.props.Login.masterData);//this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\n}else if(fieldName===\"smaterialcatname\"){selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterialCategory:comboData});_this.props.getMaterialBasedOnMaterialCategory(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"smaterialname\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=comboData.item.needsection;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterial:comboData});_this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinventoryid\"){selectedRecord[\"nmaterialcode\"]=_this.state.selectedMaterial.value;selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=_this.props.Login.masterData.selectedMaterial.needsection;_this.setState({selectedMaterialInventory:comboData});// if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\n//     selectedRecord['nsectioncode']=transactionStatus.NA;\n// }else{\nselectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;//}\n_this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinstrumentname\"){selectedRecord[\"ninstrumentnamecode\"]=comboData.value;selectedRecord[\"sinstrumentname\"]=comboData.label;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['selectedInstrument']=comboData.item;selectedRecord['ninstrumentcatcode']=comboData.item.ninstrumentcatcode;selectedRecord['ninstrumentcode']=comboData.item.ninstrumentcode;_this.props.getInstrumentID(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sprojectcode\"){_this.setState({selectedProjectcode:comboData});}else{_this.setState({selectedInstrumentId:comboData});}// else{\n//    // let nInstrumentCategory=\"\",nInstrument=\"\",nInstrumentID=\"\";\n//     this.setState=({InstrumentCategory:{},Instrument:{},\n//         InstrumentID:})\n//   }\n}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getBatchManufacturerComboChange(selectedRecord,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.clearComponentInput=function(){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nproductcode\"]=undefined;selectedRecord[\"ncomponentcode\"]=undefined;selectedRecord[\"smanuflotno\"]=\"\";selectedRecord[\"dateprompt\"]=transactionStatus.NO;selectedRecord[\"transdatefrom\"]=_this.props.Login.componentDefaultSearchDate;selectedRecord[\"transdateto\"]=_this.props.Login.componentDefaultSearchDate;_this.setState({selectedRecord:selectedRecord});};_this.openClosePortal=function(){if(_this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode!==transactionStatus.NA){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED){if(_this.props.Login.openELNSheet===undefined||!_this.props.Login.openELNSheet){if(_this.props.Login.elnUserInfo!==null||_this.props.Login.elnUserInfo!=undefined){_this.props.Login.masterData.enlLink=\"\";var integrationSettings=_this.props.Login.integrationSettings;var inputParam={userInfo:_this.props.Login.userInfo,elnUserInfo:_this.props.Login.elnUserInfo,elnSite:_this.props.Login.elnSite,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno,ntestcode:_this.props.Login.masterData.ntestcode};var link=\"\";var detail=CF_encryptionData(\"-1//Sheet\").EncryptData;var settedId=inputParam.nbatchmastercode;//console.log(settedId);\nvar encryptedbatchid=CF_encryptionData(settedId).EncryptData;var userObject={usercode:inputParam.elnUserInfo.nelncode,username:inputParam.elnUserInfo.selnuserid,userfullname:inputParam.elnUserInfo.selnusername,lsusergroup:{usergroupcode:inputParam.elnUserInfo.nelnusergroupcode,usergroupname:inputParam.elnUserInfo.nelnusergroupcode},lssitemaster:{sitecode:inputParam.elnSite.nelnsitecode}};var encrypteduser=CF_encryptionData(userObject).EncryptData;var baseURL=integrationSettings[1].slinkname;link=baseURL+\"/vieworder\"+'#{\"d\":\"'+settedId+'\",\"user\":\"'+encrypteduser+'\",\"batchid\":\"'+encryptedbatchid+'\"}';// this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \nvar updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:true,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:link,baseURL:baseURL})}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ELNSHEETNOTFOUND\"}));}}else{var _updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:\"\"})}};_this.props.updateStore(_updateInfo);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHWITHINSTRUMENT\"}));}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord={};if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onDropImage=function(attachedFiles,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=attachedFiles;_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.saveSample=function(addedSamplesListSortedList){var compList=addedSamplesListSortedList.map(function(x){delete x.selected;//return {...x, 'sregistereddate':formatInputDate(x.sregistereddate, false)}\nreturn x;})||[];if(compList===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}else if(compList.length>0){var sampleArray=[];compList.map(function(item){return sampleArray.push({npreregno:item.npreregno,ntransactionsamplecode:item.ntransactionsamplecode,ntransactiontestcode:item.ntransactiontestcode,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster?_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode:transactionStatus.NA,sarno:item.jsonuidata.samplelist.sarno,ssamplearno:item.jsonuidata.samplelist.ssamplearno,stestname:item.jsonuidata.samplelist.stestname,jsonuidata:{samplelist:item.jsonuidata.samplelist},jsondata:{samplelist:item.jsondata.samplelist}});});var nbatchmastercode=_this.props.Login.masterData.SelectedBatchmaster&&_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;// batchSample = {\n//     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\n//     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\n//     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\n//     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\n// }\n//jsondata : \nvar inputParam={inputData:{batchSample:nbatchmastercode,sampleArray:sampleArray,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,nregtypecode:_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA}};_this.props.createSampleAction(inputParam.inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELCETONESAMPLE\"}));}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"createSample\"){_this.saveSample(_this.state.addedSamplesListSortedList);}else if(_this.props.Login.operation===\"initiate\"){_this.testStartActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.testStartId);}else if(_this.props.Login.operation===\"complete\"){_this.batchCompleteActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.completeId);}else if(_this.props.Login.operation===\"createiqcsample\"){_this.batchSaveIQCActions(_this.props.Login.masterData.SelectedBatchmaster);}else{var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);if(_this.props.Login.operation===\"create\"){inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;}inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedcombodataforFilter\"]=\"true\";inputData[\"needFilterSubmit\"]=\"false\";inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nprevioustestcode\"]=_this.state.selectedRecord&&_this.state.selectedRecord.nprevioustestcode!=undefined?_this.state.selectedRecord.nprevioustestcode:_this.state.selectedTestSynonym.value;inputData[\"ntestcode\"]=_this.state.selectedTestSynonym?_this.state.selectedTestSynonym.value:transactionStatus.NA;inputData[\"nsectioncode\"]=_this.state.selectedSection?_this.state.selectedSection.item.nsectioncode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\n//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\ninputData[\"ninstrumentcatcode\"]=_this.state.selectedInstCategory?_this.state.selectedInstCategory.value:transactionStatus.NA;inputData[\"ninstrumentcode\"]=_this.state.selectedInstrument?_this.state.selectedInstrument.value:transactionStatus.NA;inputData[\"nproductcode\"]=_this.state.selectedProduct?_this.state.selectedProduct.value:transactionStatus.NA;inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;inputData[\"sbatcharno\"]='-';// inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \n// this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \n// this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \n// this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\ninputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=transactionStatus.DRAFT;inputData[\"sinstrumentid\"]=_this.state.selectedInstrumentId?_this.state.selectedInstrumentId.label:\"NA\";// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \n// this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;inputData[\"nprojectmastercode\"]=_this.state.selectedProjectcode?_this.state.selectedProjectcode.value:transactionStatus.NA;var postParam=undefined;postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\"};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};if(_this.props.Login.operation===\"create\"){_this.searchRef.current.value=\"\";_this.props.createBatchmasterAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}else{inputData[\"nbatchmastercode\"]=_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;inputData[\"SelectedBatchmaster\"]=_this.props.Login.masterData.SelectedBatchmaster;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.editId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.updateBatchcreationAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}}}// const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n// if (esignNeeded) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n//             openModal: true, screenName: \"IDS_BATCHCREATION\",\n//             operation: this.props.Login.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\n//     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n// }\n};_this.deleteBatchCreation=function(selectedBatch,deleteId,operation){if(selectedBatch.ntransactionstatus===transactionStatus.COMPLETED||selectedBatch.ntransactionstatus===transactionStatus.INITIATED||selectedBatch.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedBatch.nbatchmastercode,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userInfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.defaultSampleType.nsampletypecode}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"currentdate\"]=formatInputDate(new Date(),true);inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedBatch.nbatchmastercode;//inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\ninputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"selectedBatch\"]=selectedBatch;inputData[\"samples\"]=_this.props.Login.masterData.Samples;var inputParam={postParam:postParam,inputData:inputData,operation:operation,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.fetchEditData=function(editParam){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){_this.props.getActiveBatchCreationService(editParam,_this.props.Login.masterData.SelectedBatchmaster);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};//ALPD-3399\nif(_this.props.Login.operation==\"complete\"||_this.props.Login.operation==\"initiate\"){_this.props.validateEsignforBatch(inputParam);}else{_this.props.validateEsignCredential(inputParam,\"openModal\");}};_this.closeFilter=function(){var inputValues={fromDate:_this.props.Login.masterData.realFromDate||new Date(),//this.state.selectedFilter[\"fromDate\"] != undefined ?\n//rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"fromDate\"]) : this.fromDate,\ntoDate:_this.props.Login.masterData.realToDate||new Date(),//this.state.selectedFilter[\"toDate\"] != undefined ?\n// rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"toDate\"]) : this.toDate,\nSampleType:_this.props.Login.masterData.realSampleTypeList||[],SampleTypeValue:_this.props.Login.masterData.realSampleTypeValue||{},defaultSampleType:_this.props.Login.masterData.realSampleTypeValue||{},RegistrationType:_this.props.Login.masterData.realRegistrationTypeList||[],RegTypeValue:_this.props.Login.masterData.realRegTypeValue||{},defaultRegistrationType:_this.props.Login.masterData.realRegTypeValue||{},RegistrationSubType:_this.props.Login.masterData.realRegistrationSubTypeList||[],RegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue||{},BCFilterStatus:_this.props.Login.masterData.realBCFilterStatusList||[],FilterStatusValue:_this.props.Login.masterData.realdefaultFilterStatus||{},ApprovalConfigVersion:_this.props.Login.masterData.realApprovalConfigVersionList||[],ApprovalVersionValue:_this.props.Login.masterData.realApproveConfigVersion||{},defaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus||{},defaultApprovalConfigVersion:_this.props.Login.masterData.realApproveConfigVersion||{},defaultRegistrationSubType:_this.props.Login.masterData.realRegSubTypeValue||{},// ALPD-5563 - code or designTemplateMappingValue changed by Gowtham R - Run batch screen -> In Advanced Filter options, make changes and cancel filter refresh, no records found.\nndesigntemplatemappingcode:_this.props.Login.masterData.realndesigntemplatemappingcode||_this.props.Login.masterData.DesignTemplateMappingValue&&_this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode||-1};var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),inputValues)}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.fromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData[\"fromdate\"]=obj.fromDate;inputData[\"todate\"]=obj.toDate;inputData[\"realFromDate\"]=obj.fromDate;inputData[\"realToDate\"]=obj.toDate;inputData[\"needFilterSubmit\"]=\"true\";inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;// inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===0 ? this.state.BCFilterStatus.map(item1=>\"'\"+item1.item.ntransactionstatus+\"'\").join(\",\") : this.state.FilterStatusValue.value;\n//ALPD-3399          \ninputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;//  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;// inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\ninputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;//inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\n// inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"realRegistrationTypeList\"]=_this.props.Login.masterData.RegistrationType;inputData[\"realRegTypeValue\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"realRegistrationSubTypeList\"]=_this.props.Login.masterData.RegistrationSubType;inputData[\"realRegSubTypeValue\"]=_this.props.Login.masterData.defaultRegistrationSubType;inputData[\"realBCFilterStatusList\"]=_this.props.Login.masterData.BCFilterStatus;inputData[\"realdefaultFilterStatus\"]=_this.state.FilterStatusValue!==undefined?_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item:_this.props.Login.masterData.defaultFilterStatus;inputData[\"realApprovalConfigVersionList\"]=_this.props.Login.masterData.ApprovalConfigVersion;//inputData[\"realApproveConfigVersion\"] = this.props.Login.masterData.defaultApprovalConfigVersion;\ninputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue!==undefined?_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item:_this.props.Login.masterData.defaultApprovalConfigVersion;inputData[\"realndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;//ALPD-4999 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\ninputData[\"operation\"]=\"create\";// ALPD-5557 - real to default changed by Gowtham R - Run batch screen -> In Advanced Filter options, config version displaying wrongly.\ninputData[\"sampleTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.defaultSampleType;inputData[\"regTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.defaultRegistrationType;inputData[\"regSubTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.defaultRegistrationSubType;inputData[\"filterStatusValue\"]=_this.state.FilterStatusValue!==undefined?_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item:_this.props.Login.masterData.realdefaultFilterStatus;inputData[\"approvalConfigValue\"]=_this.state.ApprovalVersionValue!==undefined?_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item:_this.props.Login.masterData.realApproveConfigVersion;// inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realndesigntemplatemappingcode \n//                                           || this.props.Login.masterData.ndesigntemplatemappingcode;\n// ALPD-5563 - real to default changed by Gowtham R - Run batch screen -> In Advanced Filter options, make changes and cancel filter refresh, no records found.\ninputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;inputData[\"saveFilterSubmit\"]=true;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.closeModalShow=function(){var loadEsign=_this.props.Login.loadEsign;var modalShow=_this.props.Login.modalShow;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){loadEsign=false;}else{modalShow=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{modalShow:modalShow,selectedRecord:selectedRecord,selectedId:null,loadEsign:loadEsign}};_this.props.updateStore(updateInfo);};_this.onSaveModalFilterName=function(){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.fromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData[\"sfiltername\"]=_this.state.selectedRecord&&_this.state.selectedRecord.sfiltername!==null?_this.state.selectedRecord.sfiltername:\"\";inputData[\"fromdate\"]=obj.fromDate;inputData[\"todate\"]=obj.toDate;inputData[\"realFromDate\"]=obj.fromDate;inputData[\"realToDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"sampleTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.realSampleTypeValue;inputData[\"regTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.realRegTypeValue;inputData[\"regSubTypeValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.realRegSubTypeValue;inputData[\"filterStatusValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.realdefaultFilterStatus;inputData[\"approvalConfigValue\"]=_this.props.Login.masterData&&_this.props.Login.masterData.realApproveConfigVersion;inputData[\"saveFilterSubmit\"]=true;inputData[\"userinfo\"]=_this.props.Login.userInfo;var masterData=_this.props.Login.masterData;if(_this.props.Login.masterData.defaultSampleType!=undefined&&_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputParam={classUrl:\"batchcreation\",methodUrl:\"FilterName\",displayName:\"IDS_BATCHCREATION\",operation:\"create\",inputData:inputData,searchRef:_this.searchRef};_this.props.crudMaster(inputParam,masterData,\"modalShow\");}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.openFilterName=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{modalShow:true,operation:\"create\",modalTitle:_this.props.intl.formatMessage({id:\"IDS_SAVEFILTER\"})}};_this.props.updateStore(updateInfo);};_this.clickFilterDetail=function(value){var inputData={};var obj=convertDateValuetoString(_this.props.Login.masterData&&_this.props.Login.masterData.realFromDate,_this.props.Login.masterData&&_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"nfilternamecode\"]=value&&value.nfilternamecode?value.nfilternamecode:-1;inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"realFromDate\"]=obj.fromDate;inputData[\"realToDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.value===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.state.FilterStatusValue.value;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"userinfo\"]=_this.props.Login.userInfo;var masterData=_this.props.Login.masterData;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.getBatchCreationFilter(inputParam[\"inputData\"],masterData);};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\nif(_this.props.Login.masterData.realRegTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegTypeValue!==null&&_this.props.Login.masterData.realRegSubTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegSubTypeValue!==null&&_this.props.Login.masterData.realApproveConfigVersion!==transactionStatus.NA||_this.props.Login.masterData.realApproveConfigVersion!==null&&_this.props.Login.masterData.defaultFilterStatus!==transactionStatus.NA||_this.props.Login.masterData.defaultFilterStatus!==null){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:transactionStatus.NA;inputData[\"defaultRegistrationSubType\"]=_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:transactionStatus.NA;//inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\ninputData[\"ntranscode\"]=_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.ALL?_this.state.BCFilterStatus.filter(function(item1){return item1.item.ntransactionstatus!==transactionStatus.ALL;}).map(function(item1){return item1.item.ntransactionstatus;}).join(\",\"):_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA;//inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"realRegistrationTypeList\"]=_this.props.Login.masterData.realRegistrationTypeList;inputData[\"realRegTypeValue\"]=_this.props.Login.masterData.realRegTypeValue;inputData[\"realRegistrationSubTypeList\"]=_this.props.Login.masterData.realRegistrationSubTypeList;inputData[\"realRegSubTypeValue\"]=_this.props.Login.masterData.realRegSubTypeValue;inputData[\"realBCFilterStatusList\"]=_this.props.Login.masterData.realBCFilterStatusList;//inputData[\"realdefaultFilterStatus\"] =this.state.FilterStatusValue!==undefined? this.state.FilterStatusValue && this.state.FilterStatusValue.item :this.props.Login.masterData.realdefaultFilterStatus;\ninputData[\"realdefaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus!==undefined?_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus;inputData[\"realApprovalConfigVersionList\"]=_this.props.Login.masterData.realApprovalConfigVersionList;inputData[\"realApproveConfigVersion\"]=_this.props.Login.masterData.realApproveConfigVersion;inputData[\"realndesigntemplatemappingcode\"]=_this.props.Login.masterData.realndesigntemplatemappingcode;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onClickReport=function(selectedRecord,flag,ncontrolcode){var reportParam={classUrl:\"certificategeneration\",methodUrl:\"reportGeneration\",screenName:\"CertificateGeneration\",operation:\"previewReport\",primaryKeyField:\"nreleasebatchcode\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:-1,inputData:{sprimarykeyname:'nreleasebatchcode',nprimarykey:selectedRecord.nreleasebatchcode,nreleasebatchcode:selectedRecord.nreleasebatchcode,ncertificatetypecode:selectedRecord.ndecision===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,ndecisionstatus:selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\nnreporttypecode:flag===2?reportTypeEnum.SCREENWISE:reportTypeEnum.BATCH,ncontrolcode:ncontrolcode,ncoareporttypecode:flag===2?-1:reportCOAType.BATCHPREVIEW,userinfo:_this.props.Login.userInfo,nflag:flag,skipbatchvalidation:true}};_this.props.onClickReport(reportParam);};_this.reportMethod=function(value){if(value.method===1){_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,2,value.controlId);}else{_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,1,value.controlId);}};var sampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var histortState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var iqcsampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var viewstate={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],userRoleControlRights:[],controlMap:new Map(),selectedFilter:{},sampleState:sampleState,histortState:histortState,iqcsampleState:iqcsampleState,viewstate:viewstate,selectedRecord:{},addedSamplesListSortedList:[],//confirmmsg:this.ConfirmMessage.bind(this),\ndataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},sidebarview:false};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stestname\",\"sinstrumentcatname\",\"sinstrumentname\",\"sproductname\",\"smanufname\",\"stransactiondate\",\"username\",\"stransactionstatus\",\"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];_this.sampleMandatoryFields=[];_this.copyMandatoryFields=[];return _this;}_createClass(BatchCreation,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;var temparray=[];data&&data.map(function(option){if(option[designProperties.VALUE]!==\"dregdate\"){temparray.push({\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\"});}});if(temparray){temparray.push({\"idsName\":\"IDS_REGISTRATIONDATE\",\"dataField\":\"dregdate\",\"width\":\"250px\",\"columnSize\":\"3\"});}return temparray;}},{key:\"gridfillingColumnMoreItems\",value:function gridfillingColumnMoreItems(data){var _this3=this;var temparray=[];data&&data.map(function(option){if(option[designProperties.VALUE]!==\"dregdate\"){temparray.push({\"idsName\":option[designProperties.LABEL][_this3.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE],\"width\":\"200px\",\"columnSize\":\"3\"});}});if(temparray){temparray.push({\"idsName\":\"IDS_REGISTRATIONDATE\",\"dataField\":\"dregdate\",\"width\":\"250px\",\"columnSize\":\"3\"});}return temparray;}},{key:\"valiateCheckAll\",value:// headerSelectionChange = (event) => {\n//     const checked = event.syntheticEvent.target.checked;\n//     let addedComponentList = this.state.addedComponentList || [];\n//     if (checked) {\n//         const data = this.state.addComponentDataList.map(item => {\n//             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\n//                 addedComponentList.push({ ...item, selected: false });\n//                 item.selected = checked;\n//                 return item;\n//             } else {\n//                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\n//                 olditem.selected = checked;\n//                 return olditem;\n//             }\n//         });\n//         this.setState({\n//             addComponentDataList: data, addedComponentList,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n//     else {\n//         let addedComponentData = this.state.addedComponentList || [];\n//         let deletedListdData = this.state.deletedList || [];\n//         const data = this.state.addComponentDataList.map(item => {\n//             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\n//             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\n//             item.selected = checked;\n//             return item;\n//         });\n//         // console.log(\"data:\",data1, data2);\n//         this.setState({\n//             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n// }\nfunction valiateCheckAll(data){var selectAll=true;// let checkRepeatComponent;\n//  let addedComponentList = this.state.addedComponentList || [];\nif(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;// checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\n// if(checkRepeatComponent.length>0){\n//     selectAll = true;\n// }else{\n//     selectAll = false;\n// }\n}});}else{//if (gridType === \"originalgrid\"){\nselectAll=false;// }\n}return selectAll;}},{key:\"shouldComponentUpdate\",value://ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\nfunction shouldComponentUpdate(nextProps,nextState){if((this.props.Login.openModal||this.props.Login.openChildModal)&&nextState.isInitialRender===false&&nextState.addedSamplesListSortedList!==this.state.addedSamplesListSortedList){return false;}else{return true;}}},{key:\"render\",value:function render(){var _this4=this;var reportActionList=[];var batchMandatoryFields=[];var mandatoryFieldsFilter=[{\"mandatory\":true,\"idsName\":\"IDS_FILTERNAME\",\"dataField\":\"sfiltername\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];//commenting as its done in below code by rukshana\n// if (this.props.Login.operation === \"update\") {\n//     batchMandatoryFields.push(\n//         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\n//     );\n// }\n// else {\n//     batchMandatoryFields.push(\n//         { idsName: \"IDS_SECTION\", dataField: \"ssectionname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_TEST\", dataField: \"stestname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\n//         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\n//     );\n// }\n//let mandatoryFields =[];\nif(this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"){var selectedRecord=this.state.selectedRecord;batchMandatoryFields.push({\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n// { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n// { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});if(selectedRecord&&selectedRecord.sinstrumentcatname!==undefined&&selectedRecord.ninstrumentcatcode>0){batchMandatoryFields.push(// { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n{\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"sinstrumentname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENTID\",\"dataField\":\"sinstrumentid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});}}var getBatch={screenName:\"IDS_BATCHCREATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"Batchcreation\",keyName:\"batchcreation\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):undefined;this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):undefined;var addId=this.state.controlMap.has(\"AddBatchCreation\")&&this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditBatchcreation\")&&this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteBatchcreation\")&&this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;var testStartId=this.state.controlMap.has(\"BatchInitiate\")&&this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;var completeId=this.state.controlMap.has(\"BatchComplete\")&&this.state.controlMap.get(\"BatchComplete\").ncontrolcode;var cancelId=this.state.controlMap.has(\"CancelBatch\")&&this.state.controlMap.get(\"CancelBatch\").ncontrolcode;var elnSheetId=this.state.controlMap.has(\"ELNSheet\")&&this.state.controlMap.get(\"ELNSheet\").ncontrolcode;var filterNameId=this.state.controlMap.has(\"FilterName\")?this.state.controlMap.get(\"FilterName\").ncontrolcode:-1;var filterDetailId=this.state.controlMap.has(\"FilterDetail\")?this.state.controlMap.get(\"FilterDetail\").ncontrolcode:-1;var addParam={screenName:\"IDS_BATCHCREATION\",primaryeyField:\"nreleasebatchcode\",primaryKeyValue:undefined,operation:\"create\",//inputParam: this.props.Login.inputParam,\nuserInfo:this.props.Login.userInfo,ncontrolCode:addId,nneedtestinitiate:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedtestinitiate,masterData:this.props.Login.masterData,fromdate:this.props.Login.masterData.fromDate,todate:this.props.Login.masterData.toDate,nregtypecode:this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,napprovalconfigcode:this.state.ApprovalVersionValue&&this.state.ApprovalVersionValue.item||transactionStatus.NA,ntranscode:this.props.Login.masterData.realdefaultFilterStatus?this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode};var viewInfoFields=[];viewInfoFields.push({\"fieldName\":\"sbatcharno\",\"label\":\"IDS_BATCHARNO\"},{\"fieldName\":\"ssectionname\",\"label\":\"IDS_SECTION\"},{\"fieldName\":\"stestname\",\"label\":\"IDS_TESTNAME\"},{\"fieldName\":\"sinstrumentcatname\",\"label\":\"IDS_INSTRUMENTCATEGORY\"},{\"fieldName\":\"sinstrumentid\",\"label\":\"IDS_INSTRUMENTID\"},{\"fieldName\":\"sinstrumentname\",\"label\":\"IDS_INSTRUMENTNAME\"},{\"fieldName\":\"sproductname\",\"label\":\"IDS_SAMPLETYPE\"},{\"fieldName\":\"stransdisplaystatus\",\"label\":\"IDS_STATUS\"},{\"fieldName\":\"username\",\"label\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED?\"IDS_BATCHINITIATEDBY\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED?\"IDS_BATCHCOMPLETEDBY\":\"IDS_BATCHCREATEDBY\"});if(this.props.Login.masterData.realSampleTypeValue&&this.props.Login.masterData.realSampleTypeValue.nsampletypecode===SampleType.PROJECTSAMPLETYPE){viewInfoFields.push({\"fieldName\":\"sprojectcode\",\"label\":\"IDS_PROJECTCODE\"});}var stransactionstatuscode=this.props.Login.masterData.SelectedFilterStatus?String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus):null;if(this.state.selectedRecord&&this.state.selectedRecord[\"nfiltertransstatus\"]!==undefined){stransactionstatuscode=this.state.selectedRecord[\"nfiltertransstatus\"].value===String(0)?null:String(this.state.selectedRecord[\"nfiltertransstatus\"].value);}var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);var editParam={screenName:\"IDS_BATCHCREATION\",operation:\"update\",primaryKeyField:\"nbatchmastercode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,masterData:this.props.Login.masterData,naddcontrolCode:addId,nprojectmastercode:this.props.Login.masterData.selectedTestSynonym&&this.props.Login.masterData.selectedTestSynonym.nprojectmastercode,nsampletypecode:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA};var filterParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",fecthInputObject:{fromDate:obj.fromDate,toDate:obj.toDate,userInfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,napprovalconfigcode:this.state.ApprovalVersionValue?this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA,ntranscode:this.state.FilterStatusValue?this.state.FilterStatusValue.value:transactionStatus.DRAFT,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA//fromDate, toDate, \n//stransactionstatuscode,\n//activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\n},masterData:this.props.Login.masterData,//unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\nsearchFieldList:this.searchFieldList};this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},{\"label\":\"IDS_BATCHSTATUS\",\"value\":this.props.Login.masterData.realdefaultFilterStatus&&this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus?this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus:\"NA\"}// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// }\n];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData})),/*#__PURE__*/React.createElement(\"div\",{className:\"fixed-buttons\"},/*#__PURE__*/React.createElement(Nav.Link,{//ALPD-4999 Add filter name and filter details button,done by Dhanushya RI\nclassName:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_SAVEFILTER\"})// data-for=\"tooltip-common-wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(filterNameId)===-1,onClick:function onClick(){return _this4.openFilterName(filterNameId);}},/*#__PURE__*/React.createElement(SaveIcon,{width:\"20px\",height:\"20px\",className:\"custom_icons\"})),this.state.userRoleControlRights.indexOf(filterDetailId)!==-1&&this.props.Login.masterData&&this.props.Login.masterData.FilterName!==undefined&&this.props.Login.masterData.FilterName.length>0?/*#__PURE__*/React.createElement(CustomPopover,{icon:faBolt,nav:true,data:this.props.Login.masterData.FilterName,btnClasses:\"btn-circle btn_grey ml-2 spacesremovefromaction\"//dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\n,dynamicButton:function dynamicButton(value){return _this4.clickFilterDetail(value);},textKey:\"sfiltername\",iconKey:\"nfiltercode\"}):\"\"),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(ListMaster,{masterList:this.props.Login.masterData.searchedData||(this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster[0]?this.props.Login.masterData.Batchmaster:[]),selectedMaster:this.props.Login.masterData.SelectedBatchmaster||[],primaryKeyField:\"nbatchmastercode\",userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData//getMasterDetail={this.props.getSelectedBatchCreationDetail}\n,getMasterDetail:function getMasterDetail(batch){return _this4.props.getSelectedBatchCreationDetail(batch,_this4.props.Login.userInfo,_this4.props.Login.masterData);},inputParam:getBatch,screenName:this.props.intl.formatMessage({id:\"IDS_BATCHCREATION\"})//mainField=\"stestname\"\n,mainField:\"sbatcharno\",firstField:\"stestname\",secondField:\"sinstrumentname\",selectedListName:\"SelectedBatchmaster\",objectName:\"BatchCreation\",listName:\"IDS_BATCHCREATION\",needValidation:false,hidePaging:false// subFields={\n//     [\n//         { [designProperties.VALUE]: \"sinstrumentcatname\" },\n//         { [designProperties.VALUE]: \"sinstrumentname\" },\n//         // { [designProperties.VALUE]: \"smahname\" },\n//         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\n//     ]\n// }\n,needFilter:true,needMultiSelect:false,subFieldsLabel:true,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,isClearSearch:this.props.Login.isClearSearch// skip={this.state.skip}\n// take={this.state.take}\n// handlePageChange={this.handlePageChange}\n,addId:addId,showFilterIcon:true,userRoleControlRights:this.state.userRoleControlRights,reloadData:this.reloadData,openModal:function openModal(){return _this4.createBatchValidation(addParam);},callCloseFunction:true// openModal={() => this.props.getTestInstrumentComboService(addParam)}\n,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this4.props.getTestInstrumentComboService(addParam);}// onClick={() => this.createBatchValidation(addParam)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2 p-0\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\"//onClick={() => this.reloadData(false)} \n},/*#__PURE__*/React.createElement(RefreshIcon,{className:\"custom_icons\"})))// </Tooltip>\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(BatchCreationFilter,{fromDate:this.props.Login.masterData&&this.props.Login.masterData.fromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.fromDate):new Date(),toDate:this.props.Login.masterData&&this.props.Login.masterData.toDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.toDate):new Date(),SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.state.nregsubtypecode||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.BCFilterStatus||[],FilterStatusValue:this.state.FilterStatusValue||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.selectedTestSynonym||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,handleFilterDateChange:this.handleFilterDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'8':\"10\"),className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn \",onClick:this.props.parentFunction},!this.props.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"}))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster.length>0&&this.props.Login.masterData.SelectedBatchmaster?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedBatchmaster.sbatcharno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},this.props.Login.masterData.SelectedBatchTestTAT&&this.props.Login.masterData.SelectedBatchTestTAT.Deviation&&this.props.intl.formatMessage({id:\"IDS_DEVIATION\"})+\" : \"+this.props.Login.masterData.SelectedBatchTestTAT.Deviation,/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED?\"outline-initiate\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED?\"outline-success\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED?\"outline-danger\":\"outline-secondary\",\" btn-sm ml-3\")},this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"openelnsheet\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(elnSheetId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_OPENELNSHEET\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:elnimage,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this4.openClosePortal(_this4.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"view\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEWINFO\"})// hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\n,onClick:function onClick(){return _this4.props.viewInfo(_this4.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this4.props.Login.userInfo,_this4.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"editBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this4.fetchEditData(editParam);}// onClick={() => this.props.getActiveBatchCreationService(editParam,\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\n})),/*#__PURE__*/ // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\nReact.createElement(Nav.Link,{name:\"initiateBatchCreation\"//  data-for=\"tooltip-common-wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_BATCHINITIATE\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey mr-2\"//role=\"button\"\n,onClick:function onClick(){return _this4.testPopUpStartActions(testStartId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay}))// :\"\"\n,/*#__PURE__*/React.createElement(Nav.Link,{name:\"completeBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(completeId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),onClick:function onClick(){return _this4.completePopUpStartActions(completeId);}//onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\n// onClick={() => this.props.validateBatchComplete({\n//     masterData: this.props.Login.masterData,\n//     userInfo: this.props.Login.userInfo,\n//     userRoleControlRights: this.props.Login.userRoleControlRights,\n//     ncontrolCode: completeId,\n//     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\n// })}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle// title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\n})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this4.ConfirmDelete(_this4.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this4.cancelBatch(_this4.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),reportActionList.length>0?/*#__PURE__*/React.createElement(CustomPopover,{nav:true,data:reportActionList,Button:true,hideIcon:true,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"value\",dynamicButton:function dynamicButton(value){return _this4.reportMethod(value);},userRoleControlRights:this.state.userRoleControlRights}):\"\")))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(CustomTab,{activeKey:this.props.Login.batchactiveKey?this.props.Login.batchactiveKey:\"IDS_SAMPLE\",tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))))):\"\"))))),/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{centered:true,scrollable:true,bsPrefix:\"model model_zindex\",show:this.props.Login.openELNSheet// show={this.state.openELNSheet}\n,onHide:this.openClosePortal,dialogClassName:\"\".concat(this.props.nflag&&this.props.nflag===2?'alert-popup':'',\" modal-fullscreen\"),backdrop:\"static\",keyboard:false,enforceFocus:false,\"aria-labelledby\":\"example-custom-modal-styling-title\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{style:{\"line-height\":\"1.0\"},id:\"example-custom-modal-styling-title\"},this.props.intl.formatMessage({id:\"IDS_ELNSHEET\"})),/*#__PURE__*/React.createElement(ReactTooltip,{globalEventOff:\"true\"})),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal-inner-content\"},/*#__PURE__*/React.createElement(Iframe// url={\"http://agl69:8080/QuaLISWeb/#/login\"}\n,{url:this.props.Login.masterData.enlLink,width:\"98%\",height:\"1000px\",id:\"reportviewID\",className:\"reportview\"//display=\"initial\"\n/// position=\"relative\" \n})))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:this.props.Login.operation===\"createSample\"?\"xl\":\"lg\",closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.operation===\"createSample\"?this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"view\"||this.props.Login.operation===\"complete\"?this.props.intl.formatMessage({id:\"IDS_BATCH\"}):this.props.Login.operation===\"createiqcsample\"?this.props.intl.formatMessage({id:\"IDS_BATCHIQCSAMPLE\"}):this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?batchMandatoryFields//  : this.props.Login.operation === \"initiate\"  ?\n//    this.initiateMandatoryFields \n//  : this.props.Login.operation === \"complete\" ?\n//    this.completeMandatoryFields\n:this.props.Login.operation===\"createiqcsample\"?this.materialIqcMandatory:[],showSaveContinue:this.state.showSaveContinue,noSave:this.props.Login.operation===\"view\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?/*#__PURE__*/React.createElement(AddBatchCreation,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onNumericInputOnChange:this.onNumericInputOnChange,handleDateChange:this.handleDateChange,sampleType:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,Test:this.state.Testvalues||[],selectedInstrumentCategory:this.state.selectedInstCategory,InstrumentCategory:this.state.InstrumentCategory,Instrument:this.state.Instrument,selectedInstrument:this.state.selectedInstrument,productCategory:this.state.ProductCategory,selectedProductCategory:this.state.selectedProductCategory,TestValue:this.state.selectedTestSynonym||[],product:this.state.Product||[],instrumentID:this.state.InstrumentID||[],selectedProduct:this.state.selectedProduct||[],studyPlanList:this.props.Login.studyPlanList||[],manufacturerList:this.props.Login.productManufacturerList||[],maHolderList:this.props.Login.maHolderList||[],timeZoneList:this.props.Login.timeZoneList||[],selectedBacthCreation:this.props.Login.masterData.SelectedBatchmaster||{},operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,selectedInstrumentId:this.state.selectedInstrumentId,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,batchCreationEditStatusList:this.props.Login.batchCreationEditStatusList,Section:this.state.Section,selectedSection:this.state.selectedSection,ProjectCode:this.state.ProjectCode,selectedProjectcode:this.state.selectedProjectcode}):this.props.Login.operation===\"createSample\"?/*#__PURE__*/React.createElement(AddSample//ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\n,{childDataChange:this.childDataChange//dataStateChangeBatchSample={this.dataStateChangeBatchSample}\n// addSaveDataGrid={this.addSaveDataGrid}\n//handleClickDelete={this.handleClickDelete}\n,addedSamplesListSortedList:this.state.addedSamplesListSortedList||[],onInputOnChange:this.onInputOnChange,getProductByCategory:this.getProductByCategory,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo,productCategoryList:this.props.productCategoryList,productList:this.props.productList,componentList:this.props.componentList,getDataForAddComponent:this.getDataForAddComponent,clearComponentInput:this.props.clearComponentInput,samples:this.state.samples||[],headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,addedComponentList:this.state.addedComponentList||[],addedHeaderSelectionChange:this.addedHeaderSelectionChange,addedSelectionChange:this.addedSelectionChange//dataStateChange={this.dataStateChange} \n,userRoleControlRights:this.props.userRoleControlRights,controlMap:this.props.controlMap,inputParam:this.props.inputParam,screenName:this.props.screenName,addSelectAll:this.state.addSelectAll,deleteSelectAll:this.state.deleteSelectAll,onDeleteSelectedComponent:this.onDeleteSelectedComponent,componentPopupSkip:this.props.componentPopupSkip,componentPopupTake:this.props.componentPopupTake,componentPageSizes:this.props.componentPageSizes,nneedsubsample:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedsubsample}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"complete\"?/*#__PURE__*/React.createElement(AddBatchinitiate,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,handleDateChange:this.handleDateChange,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[]}):this.props.Login.operation===\"view\"?/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ViewInfo,{userInfo:this.props.Login.userInfo,selectedRecordView:this.props.Login.masterData.selectedRecordView,viewInfoFields:viewInfoFields}))):this.props.Login.operation===\"createiqcsample\"?/*#__PURE__*/React.createElement(AddMaterialIqc,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,materialCategory:this.state.MaterialCategory,selectedMaterialType:this.state.selectedMaterialType,selectedMaterialCategory:this.state.selectedMaterialCategory,onComboChange:this.onComboChange,selectedMaterial:this.state.selectedMaterial,screenName:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),handleSaveClick:this.handleSaveClick,material:this.state.Material,materialInventory:this.state.MaterialInventory,AddSpec:this.AddSpec,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[],loadSpec:this.props.Login.loadSpec,selectedMaterialInventory:this.state.selectedMaterialInventory,selectedInventoryUnit:this.props.Login.masterData.selectedInventoryUnit,AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,onTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.batchactiveKey,Specification:this.props.Login.Specification,selectedSpec:this.props.Login.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange,openSpecModal:this.props.Login.openSpecModal,closeModal:this.closeModal}):\"\"}):\"\",this.props.Login.modalShow?/*#__PURE__*/ //ALPD-4999-To show the add popup to get input of filter name,done by Dhanushya RI\nReact.createElement(ModalShow,{modalShow:this.props.Login.modalShow,closeModal:this.closeModalShow,onSaveClick:this.onSaveModalFilterName,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,mandatoryFields:mandatoryFieldsFilter,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},modalTitle:this.props.Login.modalTitle,modalBody:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:this.props.intl.formatMessage({id:\"IDS_FILTERNAME\"}),name:\"sfiltername\"// type=\"text\"\n,onChange:this.onInputOnChange,placeholder:this.props.intl.formatMessage({id:\"IDS_FILTERNAME\"}),value:this.state.selectedRecord?this.state.selectedRecord.sfiltername:\"\",isMandatory:true,required:true,maxLength:\"50\"}))}):\"\",this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state2=this.state,userRoleControlRights=_this$state2.userRoleControlRights,controlMap=_this$state2.controlMap,selectedRecord=_this$state2.selectedRecord,filterData=_this$state2.filterData,addedComponentList=_this$state2.addedComponentList,filterStatusList=_this$state2.filterStatusList,dataState=_this$state2.dataState,sahDataState=_this$state2.sahDataState,bahDataState=_this$state2.bahDataState,chDataState=_this$state2.chDataState,testCommentDataState=_this$state2.testCommentDataState,SampleType=_this$state2.SampleType,RegistrationType=_this$state2.RegistrationType,RegistrationSubType=_this$state2.RegistrationSubType,BCFilterStatus=_this$state2.BCFilterStatus,REJobStatus=_this$state2.REJobStatus,Testvalues=_this$state2.Testvalues,ApprovalConfigVersion=_this$state2.ApprovalConfigVersion,skip=_this$state2.skip,take=_this$state2.take,testskip=_this$state2.testskip,testtake=_this$state2.testtake,selectedFilter=_this$state2.selectedFilter,InstrumentCategory=_this$state2.InstrumentCategory,selectedInstCategory=_this$state2.selectedInstCategory,ProductCategory=_this$state2.ProductCategory,Instrument=_this$state2.Instrument,selectedInstrument=_this$state2.selectedInstrument,selectedTestSynonym=_this$state2.selectedTestSynonym,nregsubtypecode=_this$state2.nregsubtypecode,selectedProductCategory=_this$state2.selectedProductCategory,Product=_this$state2.Product,selectedProduct=_this$state2.selectedProduct,samples=_this$state2.samples,addSelectAll=_this$state2.addSelectAll,deleteSelectAll=_this$state2.deleteSelectAll,ApprovalVersionValue=_this$state2.ApprovalVersionValue,FilterStatusValue=_this$state2.FilterStatusValue,Section=_this$state2.Section,selectedSection=_this$state2.selectedSection,sampleGridItem=_this$state2.sampleGridItem,subsampleGridItem=_this$state2.subsampleGridItem,_this$state2$testGrid=_this$state2.testGridItem,testGridItem=_this$state2$testGrid===void 0?[]:_this$state2$testGrid,DynamicGridItem=_this$state2.DynamicGridItem,samplegridmoreitem=_this$state2.samplegridmoreitem,DynamicGridMoreItem=_this$state2.DynamicGridMoreItem,MaterialCategory=_this$state2.MaterialCategory,selectedMaterialType=_this$state2.selectedMaterialType,Material=_this$state2.Material,selectedMaterial=_this$state2.selectedMaterial,selectedMaterialCategory=_this$state2.selectedMaterialCategory,MaterialInventory=_this$state2.MaterialInventory,selectedMaterialInventory=_this$state2.selectedMaterialInventory,Specification=_this$state2.Specification,selectedSpec=_this$state2.selectedSpec,addedSamplesList=_this$state2.addedSamplesList,testGridArnoItems=_this$state2.testGridArnoItems,InstrumentID=_this$state2.InstrumentID,selectedInstrumentId=_this$state2.selectedInstrumentId,sinstrumentid=_this$state2.sinstrumentid,selectedProjectcode=_this$state2.selectedProjectcode,ProjectCode=_this$state2.ProjectCode;var isStateChanged=false;var bool=false;addedSamplesList=[];// samples = [];\nif(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var _dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;isStateChanged=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);BCFilterStatus=constructOptionList(this.props.Login.masterData.BCFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestname','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory||[],'ninstrumentcatcode','sinstrumentcatname','ascending','ninstrumentcatcode',false);Instrument=constructOptionList(this.props.Login.masterData.instrument||[],'ninstrumentnamecode','sinstrumentname','ascending','ninstrumentcode',false);ProductCategory=constructOptionList(this.props.Login.masterData.productcategory||[],'nproductcatcode','sproductcatname','ascending','nproductcatcode',false);Product=constructOptionList(this.props.Login.masterData.product||[],'nproductcode','sproductname','ascending','nproductcode',false);Section=constructOptionList(this.props.Login.masterData.Section||[],'nsectioncode','ssectionname','ascending','nsectioncode',false);MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory||[],'nmaterialcatcode','smaterialcatname','ascending','nmaterialcatcode',false);Material=constructOptionList(this.props.Login.masterData.Material||[],'nmaterialcode','smaterialname','ascending','nmaterialcode',false);MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory||[],'nmaterialinventtranscode','sinventoryid','ascending','nmaterialinventtranscode',false);InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID||[],'ninstrumentcode','sinstrumentid','ascending','ninstrumentcode',false);ProjectCode=constructOptionList(this.props.Login.masterData.ProjectCode||[],'nprojectmastercode','sprojectcode','ascending','nprojectmastercode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.BCFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;SampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");BCFilterStatus=BCFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");InstrumentCategory=InstrumentCategory.get(\"OptionList\");Instrument=Instrument.get(\"OptionList\");ProductCategory=ProductCategory.get(\"OptionList\");Product=Product.get(\"OptionList\");Section=Section.get(\"OptionList\");MaterialCategory=MaterialCategory.get(\"OptionList\");Material=Material.get(\"OptionList\");MaterialInventory=MaterialInventory.get(\"OptionList\");InstrumentID=InstrumentID.get(\"OptionList\");ProjectCode=ProjectCode.get(\"OptionList\");//selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\nsamples=this.props.Login.masterData.samples;addSelectAll=false;deleteSelectAll=true;nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType?{label:this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,value:this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,item:this.props.Login.masterData.defaultRegistrationSubType}:\"\";if(this.props.Login.masterData.selectedTestSynonym!==previousProps.Login.masterData.selectedTestSynonym){selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym?{label:this.props.Login.masterData.selectedTestSynonym.stestname,value:this.props.Login.masterData.selectedTestSynonym.ntestcode,item:this.props.Login.masterData.selectedTestSynonym}:\"\";var stestname=selectedTestSynonym.item;//selectedRecord = {...this.state.selectedRecord,stestname,...selectedRecord};\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{stestname:stestname});isStateChanged=true;}if(this.props.Login.masterData.selectedProductcategory!==previousProps.Login.masterData.selectedProductcategory){selectedProductCategory=this.props.Login.masterData.selectedProductcategory?{label:this.props.Login.masterData.selectedProductcategory.sproductcatname,value:this.props.Login.masterData.selectedProductcategory.nproductcatcode,item:this.props.Login.masterData.selectedProductcategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProduct!==previousProps.Login.masterData.selectedProduct){selectedProduct=this.props.Login.masterData.selectedProduct?{label:this.props.Login.masterData.selectedProduct.sproductname,value:this.props.Login.masterData.selectedProduct.nproductcode,item:this.props.Login.masterData.selectedProduct}:\"\";var sproductname=selectedProduct.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sproductname:sproductname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentCategory!==previousProps.Login.masterData.selectedInstrumentCategory){selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory?{label:this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,value:this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,item:this.props.Login.masterData.selectedInstrumentCategory}:\"\";var sinstrumentcatname=selectedInstCategory.item;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentcatname:sinstrumentcatname});// selectedRecord = {...this.state.selectedRecord,sinstrumentcatname,...selectedRecord};\nisStateChanged=true;}if(this.props.Login.masterData.selectedInstrument!==previousProps.Login.masterData.selectedInstrument){selectedInstrument=this.props.Login.masterData.selectedInstrument?{label:this.props.Login.masterData.selectedInstrument.sinstrumentname,value:this.props.Login.masterData.selectedInstrument.ninstrumentcode,item:this.props.Login.masterData.selectedInstrument}:\"\";var sinstrumentname=selectedInstrument.item;//selectedRecord = { ...this.state.selectedRecord, sinstrumentname, ...selectedRecord };\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentname:sinstrumentname});isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentId!==previousProps.Login.masterData.selectedInstrumentId){selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId?{label:this.props.Login.masterData.selectedInstrumentId.sinstrumentid,value:this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,item:this.props.Login.masterData.selectedInstrumentId}:undefined;var _sinstrumentid=selectedInstrumentId&&selectedInstrumentId.item;//selectedRecord = { ...this.state.selectedRecord, sinstrumentid, ...selectedRecord };\nselectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{sinstrumentid:_sinstrumentid});isStateChanged=true;}if(this.props.Login.masterData.ProjectCode!==previousProps.Login.masterData.ProjectCode){selectedProjectcode=this.props.Login.masterData.selectedProjectedCode?{label:this.props.Login.masterData.selectedProjectedCode.sprojectcode,value:this.props.Login.masterData.selectedProjectedCode.nprojectmastercode,item:this.props.Login.masterData.selectedProjectedCode}:undefined;var sprojectcode=selectedProjectcode&&selectedProjectcode.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sprojectcode:sprojectcode},selectedRecord);isStateChanged=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});isStateChanged=true;}if(this.props.Login.selectedComponentList!==previousProps.Login.selectedComponentList){addedComponentList=this.props.Login.selectedComponentList;isStateChanged=true;// this.setState({ addedComponentList });\n}if(this.props.Login.masterData.defaultApprovalConfigVersion!==previousProps.Login.masterData.defaultApprovalConfigVersion){ApprovalVersionValue=this.props.Login.masterData.defaultApprovalConfigVersion?{label:this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,value:this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,item:this.props.Login.masterData.defaultApprovalConfigVersion}:\"\";isStateChanged=true;}if(this.props.Login.masterData.defaultFilterStatus!==previousProps.Login.masterData.defaultFilterStatus){FilterStatusValue=this.props.Login.masterData.defaultFilterStatus?{label:this.props.Login.masterData.defaultFilterStatus.sfilterstatus,value:this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,item:this.props.Login.masterData.defaultFilterStatus}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedSection!==previousProps.Login.masterData.selectedSection){selectedSection=this.props.Login.masterData.selectedSection?{label:this.props.Login.masterData.selectedSection.ssectionname,value:this.props.Login.masterData.selectedSection.nsectioncode,item:this.props.Login.masterData.selectedSection}:\"\";var ssectionname=selectedSection.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{ssectionname:ssectionname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialType!==previousProps.Login.masterData.selectedMaterialType){selectedMaterialType=this.props.Login.masterData.selectedMaterialType?{label:this.props.Login.masterData.selectedMaterialType.smaterialtypename,value:this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,item:this.props.Login.masterData.selectedMaterialType}:\"\";selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialCategory!==previousProps.Login.masterData.selectedMaterialCategory){selectedMaterialCategory=this.props.Login.masterData.selectedMaterialCategory?{label:this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,value:this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,item:this.props.Login.masterData.selectedMaterialCategory}:\"\";selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterial!==previousProps.Login.masterData.selectedMaterial){selectedMaterial=this.props.Login.masterData.selectedMaterial?{label:this.props.Login.masterData.selectedMaterial.smaterialname,value:this.props.Login.masterData.selectedMaterial.nmaterialcode,item:this.props.Login.masterData.selectedMaterial}:\"\";selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialInventory!==previousProps.Login.masterData.selectedMaterialInventory){selectedMaterialInventory=this.props.Login.masterData.selectedMaterialInventory?{label:this.props.Login.masterData.selectedMaterialInventory.sinventoryid,value:this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,item:this.props.Login.masterData.selectedMaterialInventory}:\"\";selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory&&this.props.Login.masterData.selectedMaterialInventory.sinventoryid!=null?this.props.Login.masterData.selectedMaterialInventory.sinventoryid:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInventoryUnit!==previousProps.Login.masterData.selectedInventoryUnit){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nselectedRecord[\"savailablequatity\"]=this.props.Login.masterData.selectedInventoryUnit&&this.props.Login.masterData.selectedInventoryUnit.savailablequatity!=null?this.props.Login.masterData.selectedInventoryUnit.savailablequatity:\"\";selectedRecord[\"susedquantity\"]=\"\";selectedRecord[\"sremarks\"]=\"\";isStateChanged=true;}if(this.props.Login.isselectedrecordempty){selectedRecord={};isStateChanged=true;}if(this.props.Login.masterData.Specification!==previousProps.Login.masterData.Specification){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nSpecification=this.props.Login.masterData.Specification&&this.props.Login.masterData.Specification!=null?this.props.Login.masterData.Specification:\"\";isStateChanged=true;}if(this.props.Login.selectedSpec!==previousProps.Login.selectedSpec){selectedRecord[\"selectedSpec\"]=this.props.Login.selectedSpec&&this.props.Login.selectedSpec!=null?this.props.Login.selectedSpec:\"\";isStateChanged=true;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}else if(this.props.Login.selectedFilter!==previousProps.Login.selectedFilter){this.setState({selectedFilter:this.props.Login.selectedFilter});}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);testGridArnoItems=dynamicColumn.testListFields.testlistitem?dynamicColumn.testListFields.testlistitem:[];testGridItem[0]=dynamicColumn.testListFields.releasetestfields[0]?dynamicColumn.testListFields.releasetestfields[0]:[];sampleGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];subsampleGridItem=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];samplegridmoreitem=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];DynamicGridMoreItem=_toConsumableArray(samplegridmoreitem);DynamicGridItem=[].concat(_toConsumableArray(sampleGridItem),_toConsumableArray(subsampleGridItem),_toConsumableArray(testGridArnoItems.slice(1)),_toConsumableArray(testGridItem));isStateChanged=true;}}//ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\nif(this.props.Login.dataState!==previousProps.Login.dataState){if(this.props.Login.dataState){delete this.props.Login.dataState.filter;delete this.props.Login.dataState.sort;this.setState({dataState:this.props.Login.dataState});}}//ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\nif(this.props.Login.addedSamplesListSortedList!==previousProps.Login.addedSamplesListSortedList){this.setState({addedSamplesListSortedList:this.props.Login.addedSamplesListSortedList,isInitialRender:true});}// if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\n//     // let selectedRecord = {};\n//     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\n//     'ascending', 'nmaterialcatcode', false);\n//     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\n//     'ascending', 'nmaterialcode', false);\n//     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\n//     'ascending', 'nmaterialinventorycode', false);\n//      MaterialCategory = MaterialCategory.get(\"OptionList\")\n//      Material = Material.get(\"OptionList\")\n//      MaterialInventory = MaterialInventory.get(\"OptionList\")\n//      selectedRecord[\"MaterialCategory\"]=MaterialCategory\n//      selectedRecord[\"Material\"]=Material\n//      selectedRecord[\"MaterialInventory\"]=MaterialInventory\n//  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\n//         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\n//             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\n//             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\n//         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\n//         isStateChanged = true;\n//     }\n//  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\n//         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\n//             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\n//             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \n//         }:\"\"\n//         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\n//         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\n//          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\n//             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\n//             item: this.props.Login.selectedRecord.selectedMaterial\n//         }:\"\"\n//         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\n//         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\n//         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\n//             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\n//             item: this.props.Login.selectedRecord.selectedMaterialInventory\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\n//         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\n//         isStateChanged = true;\n//     }\n//ALPD-5137--Vignesh R(19-01-2025)---Including filter in Data selection Kendo Grid\nvar updateStateObject={};if(this.props.Login.addedSamplesList!==previousProps.Login.addedSamplesList){addSelectAll=false;deleteSelectAll=true;this.setState({addedSamplesList:this.props.Login.addedSamplesList,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll});}//ALPD-5137--Vignesh R(19-01-2025)---Including filter in Data selection Kendo Grid\nif(this.props.Login.addedSamplesList!==previousProps.Login.addedSamplesList){addSelectAll=false;deleteSelectAll=true;this.setState({addedSamplesList:this.props.Login.addedSamplesList,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll});}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){isStateChanged=true;selectedRecord=this.props.Login.selectedRecord;//this.setState({ selectedRecord: this.props.Login.selectedRecord });\n}if(isStateChanged){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterData:filterData,addedComponentList:addedComponentList,filterStatusList:filterStatusList,dataState:dataState,sahDataState:sahDataState,bahDataState:bahDataState,chDataState:chDataState,testCommentDataState:testCommentDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,BCFilterStatus:BCFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,selectedInstCategory:selectedInstCategory,InstrumentCategory:InstrumentCategory,Instrument:Instrument,selectedInstrument:selectedInstrument,selectedTestSynonym:selectedTestSynonym,nregsubtypecode:nregsubtypecode,ProductCategory:ProductCategory,selectedProductCategory:selectedProductCategory,Product:Product,selectedProduct:selectedProduct,samples:samples,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll,ApprovalVersionValue:ApprovalVersionValue,FilterStatusValue:FilterStatusValue,Section:Section,selectedSection:selectedSection,sampleGridItem:sampleGridItem,subsampleGridItem:subsampleGridItem,testGridItem:testGridItem,DynamicGridItem:DynamicGridItem,samplegridmoreitem:samplegridmoreitem,DynamicGridMoreItem:DynamicGridMoreItem,MaterialCategory:MaterialCategory,selectedMaterialType:selectedMaterialType,Material:Material,selectedMaterial:selectedMaterial,selectedMaterialCategory:selectedMaterialCategory,MaterialInventory:MaterialInventory,selectedMaterialInventory:selectedMaterialInventory,Specification:Specification,selectedSpec:selectedSpec,addedSamplesList:addedSamplesList,testGridArnoItems:testGridArnoItems,InstrumentID:InstrumentID,selectedInstrumentId:selectedInstrumentId,sinstrumentid:sinstrumentid,selectedProjectcode:selectedProjectcode,ProjectCode:ProjectCode});}}//  ALPD-5719   Added componentwillunmount by Vishakh\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,batchactiveKey:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){// if (props.Login.masterStatus !== \"\") {\n//     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n//        if(props.Login.operation == \"initiate\"){\n//         toast.warn(props.Login.masterStatus);\n//         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\n//        }\n//     }\n// }\nif(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\n}// const sampleColumnList = [];\n// if (props.nneedsubsample){\n//     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\n// }\n// else{\n//     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\n// }\n}]);return BatchCreation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getTestInstrumentComboService:getTestInstrumentComboService,getTestInstrumentCategory:getTestInstrumentCategory,getInstrumentForInstCategory:getInstrumentForInstCategory,getProductBasedInstrument:getProductBasedInstrument,getBatchCreationDetails:getBatchCreationDetails,onActionFilterSubmit:onActionFilterSubmit,getProductcategoryAction:getProductcategoryAction,createBatchmasterAction:createBatchmasterAction,getSamplesForGrid:getSamplesForGrid,getSelectedBatchCreationDetail:getSelectedBatchCreationDetail,createSampleAction:createSampleAction,deleteSampleAction:deleteSampleAction,getActiveBatchCreationService:getActiveBatchCreationService,updateBatchcreationAction:updateBatchcreationAction,deleteBatchCreation:deleteBatchCreation,batchInitiateAction:batchInitiateAction,getBCRegistrationSubType:getBCRegistrationSubType,batchCompleteAction:batchCompleteAction,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getBatchhistoryAction:getBatchhistoryAction,getBatchSection:getBatchSection,viewInfo:viewInfo,getIqcSamples:getIqcSamples,getMaterialBasedOnMaterialCategory:getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial:getMaterialInventoryBasedOnMaterial,batchSaveIQCActions:batchSaveIQCActions,getMaterialAvailQtyBasedOnInv:getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction:getBatchIqcSampleAction,getBCApprovalConfigVersion:getBCApprovalConfigVersion,getBCRegistrationType:getBCRegistrationType,getTreeByMaterial:getTreeByMaterial,getNewRegSpecification:getNewRegSpecification,cancelIQCSampleAction:cancelIQCSampleAction,batchCancelAction:batchCancelAction,batchInitiateDatePopup:batchInitiateDatePopup,batchCompleteDatePopup:batchCompleteDatePopup,getInstrumentID:getInstrumentID,getBatchViewResultAction:getBatchViewResultAction,validateEsignforBatch:validateEsignforBatch,getBatchCreationFilter:getBatchCreationFilter//,batchTAT\n})(injectIntl(BatchCreation));","map":{"version":3,"sources":["D:/WorkingFolder/LIMS/ALPD/branches/Version 11.0.0.1/QuaLISWeb/src/pages/batchruncreation/BatchCreation.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Nav","FormGroup","FormLabel","Card","Modal","Image","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faEye","faPlay","faPlus","faSync","faBolt","callService","crudMaster","updateStore","getTestInstrumentComboService","getTestInstrumentCategory","getProductBasedInstrument","getInstrumentForInstCategory","getBatchCreationDetails","onActionFilterSubmit","getProductcategoryAction","createBatchmasterAction","getSamplesForGrid","getSelectedBatchCreationDetail","createSampleAction","deleteSampleAction","getActiveBatchCreationService","updateBatchcreationAction","deleteBatchCreation","batchInitiateAction","getBCRegistrationSubType","batchCompleteAction","validateEsignCredential","filterColumnData","getBatchhistoryAction","getBatchSection","viewInfo","getIqcSamples","getMaterialBasedOnMaterialCategory","getMaterialInventoryBasedOnMaterial","batchSaveIQCActions","getMaterialAvailQtyBasedOnInv","getBatchIqcSampleAction","getBCApprovalConfigVersion","getBCRegistrationType","getTreeByMaterial","getNewRegSpecification","cancelIQCSampleAction","batchCancelAction","batchInitiateDatePopup","batchCompleteDatePopup","getInstrumentID","getBatchViewResultAction","validateEsignforBatch","getBatchCreationFilter","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","SampleType","DEFAULT_RETURN","showEsign","getControlMap","getStartOfDay","getEndOfDay","formatInputDate","constructOptionList","rearrangeDateFormat","convertDateValuetoString","CF_encryptionData","ConfirmMessage","SlideOutModal","ReadOnlyText","ContentPanel","MediaLabel","ListWrapper","BreadcrumbComponent","Esign","ProductList","CustomPopover","BatchCreationFilter","AddBatchCreation","AddBatchinitiate","CustomTab","SampleTab","BatchhistoryTab","process","AddSample","ListMaster","ViewInfo","Affix","AddMaterialIqc","BatchIqcSampleTab","BatchResultTab","PortalModal","Iframe","ReactTooltip","ModalShow","FormTextarea","mapStateToProps","state","Login","BatchCreation","props","sidebarExpandCollapse","setState","sidebarview","completeMandatoryFields","initiateMandatoryFields","materialIqcMandatory","getSamples","selectedbatchmaster","addSampleID","controlMap","has","get","ncontrolcode","ntransactionstatus","INITIATED","COMPLETED","CANCELLED","warn","intl","formatMessage","id","masterData","SelectedBatchmaster","ntestcode","nbatchmastercode","userInfo","realRegTypeValue","nregtypecode","NA","realRegSubTypeValue","nregsubtypecode","dataState","addedSamplesListSortedList","createBatchValidation","addParam","defaultRegistrationType","undefined","FilterStatusValue","item","ApprovalVersionValue","Samples","length","addcontrolcode","inputData","realSampleTypeValue","nsampletypecode","ntestgroupspecrequired","YES","NO","nsectioncode","deleteRecord","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","selectedRecord","nbatchsampleCode","fetchUrl","isSingleGet","fecthInputObject","userinfo","jsondata","inputParam","classUrl","methodUrl","Sample","sarno","ssamplearno","stestname","nbatchsamplecode","ndesigntemplatemappingcode","operation","displayName","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","cancelRecord","nbatchsampleiqccode","iqcSample","nmaterialinventtranscode","onTabChange","tabProps","nneedsubsample","batchactiveKey","dataStateChange","event","dataResult","sampleState","dataStateBatchHistoryChange","Batchhistory","histortState","dataStateBatchIqcChangeChange","iqcsample","iqcsampleState","dataStateViewChange","Resultview","viewstate","getApprovalVersion","obj","fromDate","realFromDate","toDate","realToDate","needFilterSubmit","parseInt","defaultSampleType","isneedapprovalfilter","defaultRegistrationSubType","isneedrealFilterStatus","realRegistrationTypeList","realRegistrationSubTypeList","realApprovalConfigVersionList","realBCFilterStatusList","realdefaultFilterStatus","realApproveConfigVersion","tabDetail","tabMap","Map","set","gridfillingColumn","DynamicGridItem","gridfillingColumnMoreItems","DynamicGridMoreItem","ELNTest","sbatcharno","onFilterComboChange","fieldname","dateObj","nflag","ntranscode","value","realndesigntemplatemappingcode","napprovalversioncode","napprovalconfigversioncode","napprovalconfigcode","selectedFilter","inputParamData","fromdate","todate","ApprovalConfigVersion","String","defaultFilterStatus","DesignTemplateMappingValue","getBCFilterTemplate","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","getBCFilterStatus","handleFilterDateChange","dateValue","dateName","Date","headerSelectionChange","checked","syntheticEvent","target","addedSamplesList","samples","map","findIndex","x","ntransactiontestcode","selected","newItem","JSON","parse","stringify","push","olditem","addComponentDataListCopy","valiateCopy","addSelectAll","valiateCheckAll","deleteSelectAll","deletedListdData","deletedList","filter","item1","npreregno","onTreeClick","activeKey","key","focusKey","keyName","selectedNode","primaryKey","selectionChange","samplesList","dataItem","childDataChange","isInitialRender","handleSaveClick","saveType","failedControls","startLabel","label","mandatoryFields","console","log","selectedSpec","nallottedspeccode","loadSpec","openSpecModal","info","handlePageChange","e","skip","take","ConfirmDelete","selectedBatch","deleteId","confirmMessage","confirm","completePopUpStartActions","completeId","DRAFT","AddSpec","selectedMaterial","selectedMaterialCategory","ncategorybasedflow","testPopUpStartActions","testStartId","testStartActions","selectedmaster","jsonuidata","totalSample","concat","join","sample","ntransactionsamplecode","nneedmyjob","nneedjoballocation","nneedtestinitiate","dtransactiondate","currentTime","scomments","BCFilterStatus","savailablequatity","parseFloat","susedquantity","inventoryTransaction","inputRegistrationData","inputMaterialInventoryData","inputBatchData","batchCreationSampleData","batchCreationTestData","batchCreationSampleArray","batchCreationTestArray","samplecombinationuniqueArray","inputMaterialInventoryArrData","nspecsampletypecode","ntemplatemanipulationcode","nregsubtypeversioncode","nmaterialcode","nmaterialcatcode","smaterialcatname","sinventoryid","selectedMaterialInventory","nmaterialinventorycode","smaterial","smaterialname","smaterialtype","selectedMaterialType","smaterialtypename","nmaterialtypecode","sunitname","sremarks","selectedInventoryUnit","nqtyused","selectedTestDetails","ntestgrouptestcode","nmethodcode","PREREGISTER","cancelBatch","cancelId","batchCompleteActions","closeAlert","showConfirmAlert","loading","closeModal","selectedId","onComboChange","comboData","fieldName","selectedInstCategory","selectedInstrumentId","InstrumentCategory","selectedInstrument","Instrument","InstrumentID","isAlertUpdate","selectedProduct","naddcontrolCode","sregsubtypename","ssectionname","selectedTestSynonym","nprojectmastercode","ncalibrationreq","needSectionwise","needsection","ninstrumentcatcode","ninstrumentcode","selectedProjectcode","onNumericInputOnChange","name","onInputOnChange","type","ACTIVE","DEACTIVE","onMultiColumnValue","flag","keys","forEach","objarray","objkey","index","getBatchManufacturerComboChange","onMultiColumnMAHChange","clearComponentInput","componentDefaultSearchDate","openClosePortal","openELNSheet","elnUserInfo","enlLink","integrationSettings","elnSite","link","detail","EncryptData","settedId","encryptedbatchid","userObject","usercode","nelncode","username","selnuserid","userfullname","selnusername","lsusergroup","usergroupcode","nelnusergroupcode","usergroupname","lssitemaster","sitecode","nelnsitecode","encrypteduser","baseURL","slinkname","handleDateChange","onDropImage","attachedFiles","actionType","saveSample","compList","sampleArray","samplelist","batchSample","onSaveClick","formRef","nprevioustestcode","selectedSection","unchangeList","searchRef","current","editId","ALL","fetchEditData","editParam","validateEsign","sreason","password","closeFilter","inputValues","realSampleTypeList","SampleTypeValue","RegistrationType","RegTypeValue","RegSubTypeValue","showFilter","onFilterSubmit","closeModalShow","modalShow","onSaveModalFilterName","sfiltername","openFilterName","modalTitle","clickFilterDetail","nfilternamecode","reloadData","isFilterSubmit","onClickReport","reportParam","sprimarykeyname","nprimarykey","nreleasebatchcode","ncertificatetypecode","ndecision","PASS","ndecisionstatus","nreporttypecode","SCREENWISE","BATCH","ncoareporttypecode","BATCHPREVIEW","skipbatchvalidation","reportMethod","method","SelectedBatchCreation","controlId","settings","createRef","searchFieldList","sampleMandatoryFields","copyMandatoryFields","temparray","option","VALUE","LABEL","slanguagetypecode","selectAll","nextProps","nextState","openChildModal","reportActionList","batchMandatoryFields","mandatoryFieldsFilter","sinstrumentcatname","getBatch","addId","elnSheetId","filterNameId","filterDetailId","primaryeyField","viewInfoFields","PROJECTSAMPLETYPE","stransactionstatuscode","SelectedFilterStatus","filterParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sfilterstatus","indexOf","FilterName","searchedData","Batchmaster","batch","openFilter","isClearSearch","REJobStatus","Testvalues","onDesignTemplateChange","stateDynamicDesign","parentFunction","SelectedBatchTestTAT","Deviation","stransdisplaystatus","elnimage","reject","masterStatus","showSaveContinue","ProductCategory","selectedProductCategory","Product","studyPlanList","productManufacturerList","maHolderList","timeZoneList","batchCreationEditStatusList","Section","ProjectCode","getProductByCategory","productCategoryList","productList","componentList","getDataForAddComponent","addedComponentList","addedHeaderSelectionChange","addedSelectionChange","onDeleteSelectedComponent","componentPopupSkip","componentPopupTake","componentPageSizes","selectedRecordView","MaterialCategory","Material","MaterialInventory","AgaramTree","OpenNodes","FocusKey","Specification","onspecChange","onEsignInputOnChange","confirmAlert","previousProps","filterData","filterStatusList","sahDataState","bahDataState","chDataState","testCommentDataState","testskip","testtake","sampleGridItem","subsampleGridItem","testGridItem","samplegridmoreitem","testGridArnoItems","sinstrumentid","isStateChanged","bool","instrumentCategory","instrument","productcategory","product","instrumentID","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","selectedProductcategory","sproductcatname","nproductcatcode","sproductname","nproductcode","selectedInstrumentCategory","sinstrumentname","selectedProjectedCode","sprojectcode","Object","values","selectedComponentList","sversionname","isselectedrecordempty","DynamicDesign","dynamicColumn","testListFields","testlistitem","releasetestfields","samplegriditem","subsamplelistitem","slice","sort","updateStateObject","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Nav, FormGroup, FormLabel, Card, Modal, Image, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faEye, faPlay, faPlus, faSync,\r\n    faBolt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport elnimage from '../../assets/image/sheet-view.svg'\r\nimport {\r\n    callService, crudMaster, updateStore,\r\n    getTestInstrumentComboService, getTestInstrumentCategory, getProductBasedInstrument,\r\n    getInstrumentForInstCategory, getBatchCreationDetails, onActionFilterSubmit,\r\n    getProductcategoryAction, createBatchmasterAction, getSamplesForGrid,\r\n    getSelectedBatchCreationDetail, createSampleAction, deleteSampleAction,\r\n    getActiveBatchCreationService, updateBatchcreationAction, deleteBatchCreation,\r\n    batchInitiateAction, getBCRegistrationSubType, batchCompleteAction,\r\n    validateEsignCredential, filterColumnData, getBatchhistoryAction, getBatchSection,\r\n    viewInfo, getIqcSamples, getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial, batchSaveIQCActions, getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction, getBCApprovalConfigVersion, getBCRegistrationType, getTreeByMaterial,\r\n    getNewRegSpecification, cancelIQCSampleAction, batchCancelAction, batchInitiateDatePopup,\r\n    batchCompleteDatePopup, getInstrumentID, getBatchViewResultAction, validateEsignforBatch,\r\n    getBatchCreationFilter\r\n    //,batchTAT\r\n} from '../../actions';\r\nimport {\r\n    transactionStatus, designProperties, reportTypeEnum, reportCOAType,\r\n    RegistrationSubType, SampleType\r\n} from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    showEsign, getControlMap, getStartOfDay, getEndOfDay,\r\n    formatInputDate, constructOptionList, rearrangeDateFormat, convertDateValuetoString, CF_encryptionData\r\n} from '../../components/CommonScript';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport { ReactComponent as SaveIcon } from '../../assets/image/save_icon.svg';\r\nimport BatchCreationFilter from './BatchCreationFilter';\r\nimport AddBatchCreation from './AddBatchCreation';\r\nimport AddBatchinitiate from './AddBatchinitiate';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleTab from './SampleTab';\r\nimport BatchhistoryTab from './BatchhistoryTab';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AddSample from '../batchruncreation/AddSample';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport ViewInfo from './ViewInfo';\r\nimport { Affix } from 'rsuite';\r\nimport AddMaterialIqc from './AddMaterialIqc';\r\nimport BatchIqcSampleTab from './BatchIqcSampleTab';\r\nimport BatchResultTab from './BatchResultTab';\r\nimport PortalModal from '../../PortalModal';\r\nimport Iframe from 'react-iframe';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BatchCreation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sampleState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const histortState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const iqcsampleState = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        const viewstate = {\r\n            skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n\r\n        this.state = {\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedFilter: {},\r\n            sampleState,\r\n            histortState,\r\n            iqcsampleState,\r\n            viewstate,\r\n            selectedRecord: {},\r\n            addedSamplesListSortedList:[],\r\n            //confirmmsg:this.ConfirmMessage.bind(this),\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sidebarview: false\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.searchFieldList = [\"stestname\", \"sinstrumentcatname\", \"sinstrumentname\", \"sproductname\", \"smanufname\", \"stransactiondate\", \"username\",\r\n            \"stransactionstatus\", \"sdecision\", \"sbatcharno\", \"stransdisplaystatus\"];\r\n\r\n        this.sampleMandatoryFields = [];\r\n        this.copyMandatoryFields = [];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // if (props.Login.masterStatus !== \"\") {\r\n        //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        //        if(props.Login.operation == \"initiate\"){\r\n        //         toast.warn(props.Login.masterStatus);\r\n        //         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\r\n        //        }\r\n        //     }\r\n        // }\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n        // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n        //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n        // }\r\n    }\r\n\r\n\r\n    // const sampleColumnList = [];\r\n\r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n\r\n    completeMandatoryFields = [\r\n        {\r\n            \"idsName\": \"IDS_BATCHCOMPLETEDATE\",\r\n            //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n            \"dataField\": \"dtransactiondate\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n    initiateMandatoryFields = [\r\n        {\r\n            \"idsName\": \"IDS_BATCHINITIATEDATE\",\r\n            //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n            \"dataField\": \"dtransactiondate\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    materialIqcMandatory = [\r\n\r\n        { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"smaterialtypename\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"smaterialcatname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"smaterialname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"sinventoryid\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n    ]\r\n\r\n    getSamples = (selectedbatchmaster) => {\r\n        const addSampleID = this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get(\"AddSamples\").ncontrolcode\r\n        if (selectedbatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.COMPLETED ||\r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else {\r\n            this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode, this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                this.props.Login.userInfo, this.props.Login.masterData,\r\n                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                    this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                    this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA, addSampleID,this.state.dataState,this.state.addedSamplesListSortedList)\r\n        }\r\n    }\r\n\r\n    createBatchValidation = (addParam) => {\r\n        if (this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined\r\n        ) {\r\n            this.props.getBatchSection(addParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    getIqcSamples = (SelectedBatchmaster) => {\r\n        if (SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDIQC\" }));\r\n        } else {\r\n            let addcontrolcode = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n            let inputData = {};\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            // inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode'] = addcontrolcode;\r\n            inputData['ntestgroupspecrequired'] = this.props.Login.masterData.realRegSubTypeValue && \r\n            this.props.Login.masterData.realRegSubTypeValue.ntestgroupspecrequired === true ? transactionStatus.YES : transactionStatus.NO;\r\n            \r\n            // inputData['section']={\r\n            //         nsectioncode: SelectedBatchmaster.nsectioncode\r\n            // };\r\n            inputData['nsectioncode'] = SelectedBatchmaster.nsectioncode;\r\n            inputData['userInfo'] = this.props.Login.userInfo;\r\n            inputData['nbatchmastercode'] = SelectedBatchmaster.nbatchmastercode;\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            this.props.getIqcSamples(inputData, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    deleteRecord = (inputData) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: inputData.selectedRecord.nbatchsampleCode,\r\n                fetchUrl: \"batchcreation/getSampleTabDetails\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let jsondata = inputData.selectedRecord;\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Sample\",\r\n                postParam,\r\n                inputData: {\r\n                    Sample: {\r\n                        \"sarno\": inputData.selectedRecord.sarno,\r\n                        \"ssamplearno\": inputData.selectedRecord.ssamplearno,\r\n                        \"stestname\": inputData.selectedRecord.stestname,\r\n                        \"nbatchsamplecode\": inputData.selectedRecord.nbatchsamplecode,\r\n\r\n                    },\r\n                    \"userInfo\": this.props.Login.userInfo,\r\n                    nbatchsamplecode: inputData.selectedRecord.nbatchsamplecode,\r\n                    masterData: {\r\n                        ...this.props.Login.masterData,\r\n                        \"samples\": []\r\n                    },\r\n                    nbatchmastercode: inputData.selectedRecord.nbatchmastercode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                    //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                },\r\n                operation: inputData.operation,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: inputData.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.deleteSampleAction(inputParam.inputData);\r\n            }\r\n        }\r\n    }\r\n\r\n    cancelRecord = (inputData) => {\r\n\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: inputData.nbatchsampleiqccode,\r\n                fetchUrl: \"batchcreation/getBatchIqcSampleAction\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"IQCSample\",\r\n                postParam,\r\n                inputData: {\r\n                    iqcSample: inputData.selectedRecord,\r\n                    nbatchsampleiqccode: inputData.selectedRecord.nbatchsampleiqccode,\r\n                    masterData: this.props.Login.masterData,\r\n                    nbatchmastercode: inputData.selectedRecord.nbatchmastercode,\r\n                    nmaterialinventtranscode: inputData.selectedRecord.nmaterialinventtranscode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                    //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue ?\r\n                        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA\r\n                },\r\n                operation: inputData.operation,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: {\r\n                            inputParam,\r\n                            masterData: this.props.Login.masterData\r\n                        },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: inputData.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.cancelIQCSampleAction(inputParam.inputData);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n\r\n        if (screenName == \"IDS_BATCHHISTORY\") {\r\n\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchhistoryAction(inputData, true);\r\n        } else if (screenName == \"IDS_BATCHIQCSAMPLE\") {\r\n\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchIqcSampleAction(inputData, true);\r\n        } else if (screenName == \"IDS_RESULTS\") {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nneedsubsample: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample,\r\n                nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchViewResultAction(inputData, true);\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { screenName, batchactiveKey: screenName }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n//ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n    /*dataStateChangeBatchSample= (event) => {\r\n\r\n    let updatedList = [];\r\n    if (event.dataState && event.dataState.filter === null) {\r\n      let addComponentDataListCopy = this.state.addComponentDataListCopy ||this.state.samples|| [];\r\n      addComponentDataListCopy.forEach(x => {\r\n        // Check if x's ntransactiontestcode exists in addComponentSortedList\r\n        const exists = this.state.addedSamplesListSortedList.some(\r\n          item => item.ntransactiontestcode === x.ntransactiontestcode\r\n        );\r\n        // If it doesn't exist, add it to updatedList\r\n        if (!exists) {\r\n          updatedList.push(x);\r\n        }\r\n      });\r\n    }else{\r\n      updatedList=this.state.samples||[]\r\n    }    \r\n\r\n    this.setState({\r\n    dataResult: process(this.state.samples || [], event.dataState),\r\n    dataState: event.dataState,\r\n    samples:updatedList,addSelectAll:event.dataState && event.dataState.filter === null?\r\n    this.valiateCheckAll(updatedList):\r\n    this.valiateCheckAll(process(updatedList || [], event.dataState).data)\r\n    \r\n    });\r\n  }\r\n*/\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Samples, event.dataState),\r\n            sampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Batchhistory, event.dataState),\r\n            histortState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchIqcChangeChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.iqcsample, event.dataState),\r\n            iqcsampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateViewChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Resultview, event.dataState),\r\n            viewstate: event.dataState\r\n        });\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = [];\r\n            data && data.map((option) => {\r\n              if (option[designProperties.VALUE] !== \"dregdate\") {\r\n                temparray.push({\r\n                  \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                  \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\"\r\n                })\r\n              }\r\n            });\r\n            if (temparray) {\r\n              temparray.push({ \"idsName\": \"IDS_REGISTRATIONDATE\", \"dataField\": \"dregdate\", \"width\": \"250px\", \"columnSize\": \"3\" })\r\n            }\r\n            return temparray;\r\n\r\n    }\r\n\r\n    gridfillingColumnMoreItems(data) {\r\n        \r\n        const temparray = [];\r\n            data && data.map((option) => {\r\n              if (option[designProperties.VALUE] !== \"dregdate\") {\r\n                temparray.push({\r\n                  \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                  \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\"\r\n                })\r\n              }\r\n            });\r\n            if (temparray) {\r\n              temparray.push({ \"idsName\": \"IDS_REGISTRATIONDATE\", \"dataField\": \"dregdate\", \"width\": \"250px\", \"columnSize\": \"3\" })\r\n            }\r\n            return temparray;\r\n        \r\n            }\r\n\r\n    getApprovalVersion = (data) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.props.Login.masterData.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n        inputData = {\r\n            needFilterSubmit: \"false\",\r\n            nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n            fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n            toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n            nregtypecode: data.item.nregtypecode,\r\n            userInfo: this.props.Login.userInfo,\r\n            nregsubtypecode: data.item.nregsubtypecode,\r\n            masterData: this.props.Login.masterData,\r\n            isneedapprovalfilter: true,\r\n            defaultRegistrationSubType: data.item,\r\n            isneedrealFilterStatus: \"false\",\r\n            // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n            // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n            // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\",\r\n            realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n            realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n            realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n            realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n            realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n            realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n            realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n            realFromDate: this.props.Login.masterData.realFromDate,\r\n            realToDate: this.props.Login.masterData.realToDate\r\n\r\n        }\r\n        this.props.getBCApprovalConfigVersion(inputData)\r\n\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SAMPLE\",\r\n            <SampleTab\r\n                sample={this.props.Login.masterData.Samples || []}\r\n                dataResult={process(this.props.Login.masterData.Samples || [], this.state.sampleState)}\r\n                dataState={this.state.sampleState}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={this.dataStateChange}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteRecord={this.deleteRecord}\r\n                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                detailedFieldList={this.gridfillingColumnMoreItems(this.state.DynamicGridMoreItem) || []}\r\n                methodUrl={\"Samples\"}\r\n                getSamples={() => this.getSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n                // getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                //     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\r\n                //inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_SAMPLE\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            />\r\n        )\r\n        tabMap.set(\"IDS_BATCHIQCSAMPLE\",\r\n            <BatchIqcSampleTab\r\n                iqcsample={this.props.Login.masterData.iqcsample || []}\r\n                dataResult={process(this.props.Login.masterData.iqcsample || [], this.state.iqcsampleState)}\r\n                dataState={this.state.iqcsampleState}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={this.dataStateBatchIqcChangeChange}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                cancelRecord={this.cancelRecord}\r\n                methodUrl={\"IQCSample\"}\r\n                getIqcSamples={() => this.getIqcSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n                screenName=\"IDS_BATCHIQCSAMPLE\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            />\r\n        )\r\n        //     if (this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.INITIATED\r\n        //         || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.COMPLETED)\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            tabMap.set(\"IDS_RESULTS\",\r\n                <BatchResultTab\r\n                    ELNTest={this.props.Login.masterData.ELNTest || []}\r\n                    resultview={this.props.Login.masterData.Resultview || []}\r\n                    dataResult={process(this.props.Login.masterData.Resultview || [], this.state.viewstate)}\r\n                    dataState={this.state.viewstate}\r\n                    dataStateChange={this.dataStateViewChange}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    methodUrl={\"BatchViewResult\"}\r\n                    screenName=\"IDS_RESULTS\"\r\n                    intl={this.props.intl}\r\n                    nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                    selectedfilename={this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n\r\n                />\r\n            )\r\n        }\r\n\r\n        tabMap.set(\"IDS_BATCHHISTORY\",\r\n            <BatchhistoryTab\r\n                batchhistory={this.props.Login.masterData.Batchhistory || []}\r\n                dataResult={process(this.props.Login.masterData.Batchhistory || [], this.state.histortState)}\r\n                dataState={this.state.histortState}\r\n                dataStateChange={this.dataStateBatchHistoryChange}\r\n                userInfo={this.props.Login.userInfo}\r\n                methodUrl={\"Batchhistory\"}\r\n                screenName=\"IDS_BATCHHISTORY\"\r\n                nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n\r\n            />\r\n        )\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n\r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    fromDate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    toDate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    defaultRegistrationType: this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType: this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n                    realFromDate: this.props.Login.masterData.realFromDate,\r\n                    realToDate: this.props.Login.masterData.realToDate,\r\n                    //ALPD-3571--Vignesh R(05-09-2024) \r\n                    realndesigntemplatemappingcode: this.props.Login.masterData.realndesigntemplatemappingcode,\r\n                    napprovalversioncode: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA,\r\n                    ApprovalVersionValue: this.state.ApprovalVersionValue\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    fromDate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    toDate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    defaultRegistrationType: this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType: this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    // realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion,\r\n                    realFromDate: this.props.Login.masterData.realFromDate,\r\n                    realToDate: this.props.Login.masterData.realToDate\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit: \"false\",\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    // realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    //  realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    //realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion\r\n                }\r\n                this.props.getBCRegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit: \"false\",\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    defaultSampleType: this.props.Login.masterData.defaultSampleType,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    // realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    // realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    // realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    // realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\",\r\n                    realRegistrationTypeList: this.props.Login.masterData.realRegistrationTypeList,\r\n                    realRegistrationSubTypeList: this.props.Login.masterData.realRegistrationSubTypeList,\r\n                    realApprovalConfigVersionList: this.props.Login.masterData.realApprovalConfigVersionList,\r\n                    realBCFilterStatusList: this.props.Login.masterData.realBCFilterStatusList,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue,\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus,\r\n                    realApproveConfigVersion: this.props.Login.masterData.realApproveConfigVersion\r\n                }\r\n                this.props.getBCRegistrationSubType(inputData, this.props.Login.masterData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n                const nregsubtypecode = this.state;\r\n                //this.setState({ nregsubtypecode:event });\r\n                this.getApprovalVersion(event);\r\n\r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit: \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item,\r\n                    isneedrealFilterStatus: \"false\",\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getBCFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                //     this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                // inputData = {\r\n                //     nflag: 4,\r\n                //     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                //     todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                //     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                //     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                //     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                //     napprovalversioncode: event.value,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     defaultApprovalConfigVersion: event.item,\r\n                //     masterData: this.props.Login.masterData,\r\n                //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                // }\r\n                // this.props.getBCJobStatus(inputData)\r\n                const ApprovalVersionValue = this.state;\r\n                this.setState({ ApprovalVersionValue: event });\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    needFilterSubmit: \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus : \"NA\"\r\n                }\r\n                this.props.getBCFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue: event });\r\n\r\n            }\r\n            else if (fieldname === \"test\") {\r\n\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue: event });\r\n            } else {\r\n                const selectedRecord = this.state;\r\n                this.setState({ selectedRecord: event });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilterDateChange = (dateValue, dateName) => {\r\n        const { selectedFilter } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedFilter[dateName] = dateValue;\r\n        this.setState({ selectedFilter });\r\n\r\n    }\r\n\r\n    // headerSelectionChange = (event) => {\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let addedComponentList = this.state.addedComponentList || [];\r\n    //     if (checked) {\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n    //                 addedComponentList.push({ ...item, selected: false });\r\n    //                 item.selected = checked;\r\n    //                 return item;\r\n    //             } else {\r\n    //                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n    //                 olditem.selected = checked;\r\n    //                 return olditem;\r\n    //             }\r\n\r\n    //         });\r\n\r\n\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         let addedComponentData = this.state.addedComponentList || [];\r\n    //         let deletedListdData = this.state.deletedList || [];\r\n\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             item.selected = checked;\r\n    //             return item;\r\n    //         });\r\n\r\n    //         // console.log(\"data:\",data1, data2);\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        // let checkRepeatComponent;\r\n        //  let addedComponentList = this.state.addedComponentList || [];\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                    // checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\r\n                    // if(checkRepeatComponent.length>0){\r\n                    //     selectAll = true;\r\n                    // }else{\r\n                    //     selectAll = false;\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            //if (gridType === \"originalgrid\"){\r\n            selectAll = false;\r\n            // }\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n\r\n    headerSelectionChange = (event) => {\r\n        let checked = event.syntheticEvent.target.checked;\r\n        let addedSamplesList = [];\r\n        checked = checked == false && this.state.samples.length > 0 ? false : this.state.samples.length == 0 ? false : true\r\n        if (checked) {\r\n            //const data = event.dataItems.map(item => {\r\n             //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n            const data = event.target.props.data.map(item => {\r\n                if (addedSamplesList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    //addedSamplesList.push({ ...item, selected: false });\r\n                    item.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(addedSamplesList[addedSamplesList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n\r\n                }\r\n\r\n            });\r\n\r\n\t\t    //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: addedSamplesList,\r\n                addComponentDataListCopy:  this.valiateCopy(this.state.addedSamplesListSortedList||[],data||[],addedSamplesList||[]),\r\n                addSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                deleteSelectAll:this.valiateCheckAll(addedSamplesList),\r\n                addSelectAll: checked, deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let addedSamplesList = this.state.addedSamplesList || [];\r\n            let deletedListdData = this.state.deletedList || [];\r\n\r\n            const data = event.target.props.data.map(item => {\r\n                addedSamplesList = addedSamplesList.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: addedSamplesList,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                deleteSelectAll: this.valiateCheckAll(addedSamplesList),\r\n                addSelectAll: checked, deleteSelectAll: false,\r\n                addComponentDataListCopy:  this.valiateCopy(this.state.addedSamplesListSortedList||[],data||[],addedSamplesList||[]),  \r\n\r\n                \r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }\r\n    /*headerSelectionChange = (event) => {\r\n        let checked = event.syntheticEvent.target.checked;\r\n        let sampleList = this.state.samples || [];\r\n        let addedSamplesList = [];\r\n        checked = checked == false && this.state.samples.length > 0 ? false : this.state.samples.length == 0 ? false : true\r\n        if (checked) {\r\n            //const data = event.dataItems.map(item => {\r\n            const data = event.target.props.data.map(item => {\r\n                if (sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    sampleList.push({ ...item, selected: false });\r\n                    item.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n\r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: addedSamplesList,\r\n                sampleList,\r\n                addSelectAll: checked,\r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let sampleListData = this.state.samples || [];\r\n            let deletedListdData = this.state.samples || [];\r\n\r\n            const data = this.state.samples.map(item => {\r\n                sampleListData = sampleListData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList: sampleListData,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: checked,\r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }*/\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n\r\n  /*  selectionChange = (event) => {\r\n        let addedSamplesList = this.state.addedSamplesList || [];\r\n        //let addedSamplesList= [];\r\n        let samples = this.state.samples || [];\r\n        const samplesList = this.state.samples.map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = !event.dataItem.selected;\r\n                //  item={...item,\"selected\":!event.dataItem.selected};\r\n                if (item.selected) {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"] = {};\r\n                    newItem[\"jsonuidata\"] = {};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                }\r\n                else {\r\n                    // if(addedSamplesList.length === 0){\r\n                    addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                    //   }else{\r\n                    //     this.state.samples.map((item1,index) => { \r\n                    //         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\r\n                    //             if(this.state.samples.length == 1){\r\n                    //                 addedSamplesList=[];\r\n                    //             }else{\r\n                    //                 const newItem = JSON.parse(JSON.stringify(item1));\r\n                    //                 newItem.selected = false;\r\n                    //                 newItem[\"jsondata\"]={};\r\n                    //                 newItem[\"jsonuidata\"]={};\r\n                    //                 newItem[\"jsondata\"]['samplelist'] = item1\r\n                    //                 newItem[\"jsonuidata\"]['samplelist'] = item1\r\n                    //                 //addedSamplesList.push(newItem);\r\n                    //                 addedSamplesList = item1;\r\n                    //             }  \r\n                    //         }\r\n                    //     } \r\n                    //   )\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        ///samplesList = addedSamplesList;\r\n        this.setState({\r\n            samplesList,\r\n            addedSamplesList,\r\n            samples,\r\n            initialList: addedSamplesList,\r\n            addSelectAll: this.valiateCheckAll(samplesList),\r\n            deleteSelectAll: this.valiateCheckAll(samplesList)\r\n        });\r\n    }*/\r\n\r\n\r\n   //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\nselectionChange = (event) => {\r\n    let addedSamplesList = this.state.addedSamplesList || [];\r\n    //let addedSamplesList= [];\r\n    //let samples = this.state.samples || [];\r\n    const samplesList = this.state.samples.map(item => {\r\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n           item.selected = !event.dataItem.selected;\r\n          //  item={...item,\"selected\":!event.dataItem.selected};\r\n            if (item.selected) {\r\n                const newItem = JSON.parse(JSON.stringify(item));\r\n                //newItem.selected = false;\r\n                delete newItem['selected']\r\n                //newItem[\"selected\"]=item.selected;\r\n                newItem[\"jsondata\"] = {};\r\n                newItem[\"jsonuidata\"] = {};\r\n                newItem[\"jsondata\"]['samplelist'] = item\r\n                newItem[\"jsonuidata\"]['samplelist'] = item\r\n                addedSamplesList.push(newItem);\r\n            }\r\n            else {\r\n                addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                \r\n            }\r\n        }\r\n        return item;\r\n    });\r\n    ///samplesList = addedSamplesList;\r\n    this.setState({\r\n      addSelectAll: this.valiateCheckAll(this.state.dataState && this.state.dataState.filter \r\n                  && this.state.dataState.filter !== null && this.state.dataState.filter!==undefined\r\n               ? process(samplesList || [], this.state.dataState).data : samplesList),\r\n               samples:samplesList, addedSamplesList,\r\n            //addSelectAll: this.valiateCheckAll(addComponentDataList),\r\n            deleteSelectAll: this.valiateCheckAll(addedSamplesList),\r\n            addComponentDataListCopy:this.valiateCopy(this.state.addedSamplesListSortedList||[],samplesList||[],addedSamplesList||[])\r\n    });\r\n}\r\n\r\n    //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n\r\n    childDataChange = (addedSamplesListSortedList) => {\r\n        this.setState({\r\n            addedSamplesListSortedList: addedSamplesListSortedList,\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord;\r\n        console.log(\"handle save:\", selectedRecord);\r\n        mandatoryFields = [\r\n            { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n        ]\r\n        let selectedSpec = this.props.Login.selectedSpec;\r\n\r\n        if (selectedRecord && selectedRecord.nallottedspeccode !== \"\") {\r\n            selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"];\r\n            selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"];\r\n            selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"];\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadSpec: false,\r\n                    selectedSpec,\r\n                    openModal: true,\r\n                    openSpecModal: false\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if ((this.props.Login.openModal || this.props.Login.openChildModal) && nextState.isInitialRender === false &&\r\n            (nextState.addedSamplesListSortedList !== this.state.addedSamplesListSortedList)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let reportActionList = [];\r\n        let batchMandatoryFields = [];\r\n        const mandatoryFieldsFilter = [{ \"mandatory\": true, \"idsName\": \"IDS_FILTERNAME\", \"dataField\": \"sfiltername\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n\r\n        //commenting as its done in below code by rukshana\r\n        // if (this.props.Login.operation === \"update\") {\r\n        //     batchMandatoryFields.push(\r\n\r\n        //         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n        //     );\r\n\r\n        // }\r\n        // else {\r\n        //     batchMandatoryFields.push(\r\n        //         { idsName: \"IDS_SECTION\", dataField: \"ssectionname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_TEST\", dataField: \"stestname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        //         { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n        //     );\r\n        // }\r\n        //let mandatoryFields =[];\r\n        if (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") {\r\n            let { selectedRecord } = this.state;\r\n            batchMandatoryFields.push(\r\n                { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                //{ \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                // { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                // { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            );\r\n\r\n            if (selectedRecord && selectedRecord.sinstrumentcatname !== undefined && selectedRecord.ninstrumentcatcode > 0) {\r\n                batchMandatoryFields.push(\r\n                    // { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                )\r\n            }\r\n        }\r\n        const getBatch = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            operation: \"get\",\r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"Batchcreation\", keyName: \"batchcreation\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || this.props.Login.masterData && this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : undefined;\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || this.props.Login.masterData && this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : undefined;\r\n        const addId = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBatchcreation\") && this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBatchcreation\") && this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;\r\n        const testStartId = this.state.controlMap.has(\"BatchInitiate\") && this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;\r\n        const completeId = this.state.controlMap.has(\"BatchComplete\") && this.state.controlMap.get(\"BatchComplete\").ncontrolcode;\r\n        const cancelId = this.state.controlMap.has(\"CancelBatch\") && this.state.controlMap.get(\"CancelBatch\").ncontrolcode;\r\n        const elnSheetId = this.state.controlMap.has(\"ELNSheet\") && this.state.controlMap.get(\"ELNSheet\").ncontrolcode;\r\n        const filterNameId = this.state.controlMap.has(\"FilterName\") ? this.state.controlMap.get(\"FilterName\").ncontrolcode : -1;\r\n        const filterDetailId = this.state.controlMap.has(\"FilterDetail\") ? this.state.controlMap.get(\"FilterDetail\").ncontrolcode : -1;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            primaryeyField: \"nreleasebatchcode\",\r\n            primaryKeyValue: undefined,\r\n            operation: \"create\",\r\n            //inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: addId,\r\n            nneedtestinitiate: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate,\r\n            masterData: this.props.Login.masterData,\r\n            fromdate: this.props.Login.masterData.fromDate,\r\n            todate: this.props.Login.masterData.toDate,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n            napprovalconfigcode: this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            ntranscode: this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus : transactionStatus.NA,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n        };\r\n\r\n        const viewInfoFields = [];\r\n\r\n        viewInfoFields.push(\r\n            { \"fieldName\": \"sbatcharno\", \"label\": \"IDS_BATCHARNO\" },\r\n            { \"fieldName\": \"ssectionname\", \"label\": \"IDS_SECTION\" },\r\n            { \"fieldName\": \"stestname\", \"label\": \"IDS_TESTNAME\" },\r\n            { \"fieldName\": \"sinstrumentcatname\", \"label\": \"IDS_INSTRUMENTCATEGORY\" },\r\n            { \"fieldName\": \"sinstrumentid\", \"label\": \"IDS_INSTRUMENTID\" },\r\n            { \"fieldName\": \"sinstrumentname\", \"label\": \"IDS_INSTRUMENTNAME\" },\r\n            { \"fieldName\": \"sproductname\", \"label\": \"IDS_SAMPLETYPE\" },\r\n            { \"fieldName\": \"stransdisplaystatus\", \"label\": \"IDS_STATUS\" },\r\n            {\r\n                \"fieldName\": \"username\", \"label\":\r\n                    this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED ? \"IDS_BATCHINITIATEDBY\" :\r\n                        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ? \"IDS_BATCHCOMPLETEDBY\"\r\n                            : \"IDS_BATCHCREATEDBY\"\r\n            }\r\n        );\r\n\r\n        if (this.props.Login.masterData.realSampleTypeValue &&\r\n            this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n            viewInfoFields.push(\r\n                { \"fieldName\": \"sprojectcode\", \"label\": \"IDS_PROJECTCODE\" },\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        let stransactionstatuscode = this.props.Login.masterData.SelectedFilterStatus ? String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus) : null;\r\n\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nfiltertransstatus\"] !== undefined) {\r\n            stransactionstatuscode = this.state.selectedRecord[\"nfiltertransstatus\"].value === String(0) ? null : String(this.state.selectedRecord[\"nfiltertransstatus\"].value);\r\n        }\r\n\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate,\r\n            this.props.Login.userInfo);\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_BATCHCREATION\",\r\n            operation: \"update\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            naddcontrolCode: addId,\r\n            nprojectmastercode: this.props.Login.masterData.selectedTestSynonym && this.props.Login.masterData.selectedTestSynonym.nprojectmastercode,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Batchmaster\",\r\n            selectedObject: \"SelectedBatchmaster\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n\r\n            fecthInputObject: {\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                userInfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                napprovalconfigcode: this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA,\r\n                ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT,\r\n                nsampletypecode: this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n                //fromDate, toDate, \r\n                //stransactionstatuscode,\r\n                //activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            //unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_BATCHSTATUS\",\r\n                \"value\": this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus ? this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus : \"NA\"\r\n            }\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // }\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                {/* <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"> */}\r\n                {/* <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\"> */}\r\n                {/* <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"> */}\r\n                {/* <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"> */}\r\n                {/* //</><div className=\"client-listing-wrap mtop-4\"> */}\r\n                \r\n                <div className=\"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    </Affix>\r\n                    \r\n                    <div className='fixed-buttons'> \r\n                        <Nav.Link //ALPD-4999 Add filter name and filter details button,done by Dhanushya RI\r\n                     className=\"btn btn-circle outline-grey ml-2\"\r\n                      data-tip={this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" })}\r\n                                                            // data-for=\"tooltip-common-wrap\"\r\n                       hidden={this.state.userRoleControlRights.indexOf(filterNameId) === -1}\r\n                        onClick={() => this.openFilterName(filterNameId)}>\r\n                       {/* <DownloadReportbutton width='20px' height='20px' className='custom_icons' /> */}\r\n                       <SaveIcon width='20px' height='20px' className='custom_icons' />\r\n                     </Nav.Link>\r\n                     {\r\n                         this.state.userRoleControlRights.indexOf(filterDetailId) !== -1 &&\r\n                         this.props.Login.masterData && this.props.Login.masterData.FilterName !== undefined && this.props.Login.masterData.FilterName.length > 0 ?\r\n                                                            <CustomPopover\r\n                                                                icon={faBolt}\r\n                                                                nav={true}\r\n                                                                data={this.props.Login.masterData.FilterName}\r\n                                                                btnClasses=\"btn-circle btn_grey ml-2 spacesremovefromaction\"\r\n                                                                //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\r\n                                                                dynamicButton={(value) => this.clickFilterDetail(value)}\r\n                                                                textKey=\"sfiltername\"\r\n                                                                iconKey=\"nfiltercode\"\r\n                                                            >\r\n                                                            </CustomPopover>\r\n                                                            : \"\"\r\n                                                            }\r\n                    </div>\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            {/* ALPD-5564 - null check for batchmaster is done by Gowtham R - RunBatch -> In Filter set To-Date as previous day and create new batch -> existing selected batch is duplicated.\r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster || [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster} */}\r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster[0] ? this.props.Login.masterData.Batchmaster : [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster || []}\r\n                                primaryKeyField=\"nbatchmastercode\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                //getMasterDetail={this.props.getSelectedBatchCreationDetail}\r\n                                getMasterDetail={(batch) => this.props.getSelectedBatchCreationDetail(batch, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                inputParam={getBatch}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_BATCHCREATION\" })}\r\n                                //mainField=\"stestname\"\r\n                                mainField=\"sbatcharno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sinstrumentname\"\r\n                                selectedListName=\"SelectedBatchmaster\"\r\n                                objectName=\"BatchCreation\"\r\n                                listName=\"IDS_BATCHCREATION\"\r\n                                needValidation={false}\r\n                                hidePaging={false}\r\n                                // subFields={\r\n                                //     [\r\n                                //         { [designProperties.VALUE]: \"sinstrumentcatname\" },\r\n                                //         { [designProperties.VALUE]: \"sinstrumentname\" },\r\n                                //         // { [designProperties.VALUE]: \"smahname\" },\r\n                                //         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                //     ]\r\n                                // }\r\n                                needFilter={true}\r\n                                needMultiSelect={false}\r\n                                subFieldsLabel={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                isClearSearch={this.props.Login.isClearSearch}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                                // handlePageChange={this.handlePageChange}\r\n                                addId={addId}\r\n                                showFilterIcon={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.createBatchValidation(addParam)}\r\n                                callCloseFunction={true}\r\n                                // openModal={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                commonActions={\r\n                                    // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                            onClick={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                        // onClick={() => this.createBatchValidation(addParam)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                        //onClick={() => this.reloadData(false)} \r\n                                        >\r\n                                            <RefreshIcon className='custom_icons' />\r\n                                        </Button>\r\n\r\n                                    </ProductList>\r\n                                    // </Tooltip>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\": <BatchCreationFilter\r\n                                            fromDate={this.props.Login.masterData && this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData && this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            SampleType={this.state.SampleType || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                            RegType={this.state.RegistrationType || []}\r\n                                            RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                            RegSubType={this.state.RegistrationSubType || []}\r\n                                            RegSubTypeValue={this.state.nregsubtypecode || []}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                            FilterStatus={this.state.BCFilterStatus || []}\r\n                                            FilterStatusValue={this.state.FilterStatusValue || []}\r\n                                            ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                            ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                            REJobStatus={this.state.REJobStatus || []}\r\n                                            JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                            Test={this.state.Testvalues || []}\r\n                                            TestValue={this.props.Login.masterData.selectedTestSynonym || []}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            handleFilterDateChange={this.handleFilterDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {/* <Row> */}\r\n                            {/* <Col md={12}> */}\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster.length > 0\r\n                                        && this.props.Login.masterData.SelectedBatchmaster ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                            {\r\n                                                                this.props.Login.masterData.SelectedBatchTestTAT && this.props.Login.masterData.SelectedBatchTestTAT.Deviation && this.props.intl.formatMessage({ id: \"IDS_DEVIATION\" }) + \" : \" + this.props.Login.masterData.SelectedBatchTestTAT.Deviation\r\n                                                            }\r\n\r\n                                                            <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED ? \"outline-initiate\"\r\n                                                                : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ? \"outline-success\"\r\n                                                                    : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED ? \"outline-danger\"\r\n                                                                        : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                                {this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus}\r\n                                                            </MediaLabel>\r\n                                                        </h2>\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"d-inline\">\r\n\r\n                                                            {/* <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHTAT\" })}\r\n                                                                            // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                            onClick={() => this.props.batchTAT(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>      */}\r\n\r\n                                                            <Nav.Link name=\"openelnsheet\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(elnSheetId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_OPENELNSHEET\" })}\r\n                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                            >\r\n                                                                <Image src={elnimage} alt=\"filer-icon action-icons-wrap\"\r\n                                                                    width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                    onClick={() => this.openClosePortal(this.props.Login.masterData.SelectedBatchmaster, cancelId)}\r\n                                                                    data-place=\"left\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                                // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                onClick={() => this.props.viewInfo(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEye} />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"editBatchCreation\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                onClick={() => this.fetchEditData(editParam)}\r\n                                                            // onClick={() => this.props.getActiveBatchCreationService(editParam,\r\n                                                            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                //  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\r\n                                                                />\r\n                                                            </Nav.Link>\r\n                                                            {\r\n                                                                // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\r\n                                                                <Nav.Link name=\"initiateBatchCreation\"                                                        //  data-for=\"tooltip-common-wrap\" \r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHINITIATE\" })}\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    //role=\"button\"\r\n                                                                    onClick={() => this.testPopUpStartActions(testStartId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPlay}\r\n                                                                    />\r\n                                                                    {/* </FontIconWrap>  */}\r\n                                                                </Nav.Link>\r\n                                                                // :\"\"\r\n                                                            }\r\n\r\n                                                            <Nav.Link name=\"completeBatchCreation\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                onClick={() => this.completePopUpStartActions(completeId)}\r\n                                                            //onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\r\n                                                            // onClick={() => this.props.validateBatchComplete({\r\n                                                            //     masterData: this.props.Login.masterData,\r\n                                                            //     userInfo: this.props.Login.userInfo,\r\n                                                            //     userRoleControlRights: this.props.Login.userRoleControlRights,\r\n                                                            //     ncontrolCode: completeId,\r\n                                                            //     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n                                                            // })}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCheckCircle}\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.ConfirmDelete(this.props.Login.masterData.SelectedBatchmaster, deleteId, \"delete\")}\r\n\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            </Nav.Link>\r\n\r\n\r\n                                                            <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                            >\r\n                                                                <Image src={reject} alt=\"filer-icon action-icons-wrap\"\r\n                                                                    width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                    onClick={() => this.cancelBatch(this.props.Login.masterData.SelectedBatchmaster, cancelId)}\r\n                                                                    data-place=\"left\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n\r\n                                                            {reportActionList.length > 0 ?\r\n                                                                <CustomPopover\r\n                                                                    nav={true}\r\n                                                                    data={reportActionList}\r\n                                                                    Button={true}\r\n                                                                    hideIcon={true}\r\n                                                                    btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                    textKey=\"value\"\r\n                                                                    dynamicButton={(value) => this.reportMethod(value)}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                />\r\n                                                                :\r\n                                                                \"\"}\r\n\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row className=\"no-gutters\">\r\n                                                    <Col md={12}>\r\n                                                        <Card className=\"at-tabs\">\r\n                                                            <CustomTab\r\n                                                                activeKey={this.props.Login.batchactiveKey ? this.props.Login.batchactiveKey : \"IDS_SAMPLE\"}\r\n                                                                tabDetail={this.tabDetail()} onTabChange={this.onTabChange}\r\n                                                            />\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* <CustomTab \r\n                                                            activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                            tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                            {/* </Col> */}\r\n                            {/* </Row> */}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <PortalModal>\r\n                    <div>\r\n                        <Modal\r\n                            centered\r\n                            scrollable\r\n                            bsPrefix=\"model model_zindex\"\r\n                            show={this.props.Login.openELNSheet}\r\n                            // show={this.state.openELNSheet}\r\n                            onHide={this.openClosePortal}\r\n                            dialogClassName={`${this.props.nflag && this.props.nflag === 2 ? 'alert-popup' : ''} modal-fullscreen`}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            enforceFocus={false}\r\n                            aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title style={{ \"line-height\": \"1.0\" }} id=\"example-custom-modal-styling-title\">\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_ELNSHEET\" })}\r\n                                </Modal.Title>\r\n                                <ReactTooltip globalEventOff=\"true\" />\r\n\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\"modal-inner-content\">\r\n                                    {/* <Iframe url={this.state.enlLink} */}\r\n                                    <Iframe\r\n                                        // url={\"http://agl69:8080/QuaLISWeb/#/login\"}\r\n                                        url={this.props.Login.masterData.enlLink}\r\n                                        width=\"98%\"\r\n                                        height=\"1000px\"\r\n                                        id=\"reportviewID\"\r\n                                        className=\"reportview\"\r\n                                    //display=\"initial\"\r\n                                    /// position=\"relative\" \r\n                                    />\r\n                                </div>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </div>\r\n                </PortalModal>\r\n                {/* </ListWrapper> */}\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {\r\n                    this.props.Login.openModal ?\r\n                        <SlideOutModal\r\n                            show={this.props.Login.openModal}\r\n                            size={this.props.Login.operation === \"createSample\"?\"xl\":\"lg\"}                            closeModal={this.closeModal}\r\n                            operation={this.props.Login.operation}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            screenName={this.props.Login.operation === \"createSample\" ? this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })\r\n                                : this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"view\" || this.props.Login.operation === \"complete\" ? this.props.intl.formatMessage({ id: \"IDS_BATCH\" })\r\n                                    : this.props.Login.operation === \"createiqcsample\" ? this.props.intl.formatMessage({ id: \"IDS_BATCHIQCSAMPLE\" })\r\n                                        : this.props.Login.screenName}\r\n                            onSaveClick={this.onSaveClick}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            mandatoryFields={this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                                batchMandatoryFields\r\n                                //  : this.props.Login.operation === \"initiate\"  ?\r\n                                //    this.initiateMandatoryFields \r\n                                //  : this.props.Login.operation === \"complete\" ?\r\n                                //    this.completeMandatoryFields\r\n                                : this.props.Login.operation === \"createiqcsample\" ?\r\n                                    this.materialIqcMandatory\r\n                                    : []\r\n                            }\r\n                            showSaveContinue={this.state.showSaveContinue}\r\n                            noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                            addComponent={this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                : this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                                    <AddBatchCreation\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        sampleType={this.props.Login.masterData.realSampleTypeValue ?\r\n                                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA}\r\n                                        Test={this.state.Testvalues || []}\r\n                                        selectedInstrumentCategory={this.state.selectedInstCategory}\r\n                                        InstrumentCategory={this.state.InstrumentCategory}\r\n                                        Instrument={this.state.Instrument}\r\n                                        selectedInstrument={this.state.selectedInstrument}\r\n                                        productCategory={this.state.ProductCategory}\r\n                                        selectedProductCategory={this.state.selectedProductCategory}\r\n                                        TestValue={this.state.selectedTestSynonym || []}\r\n                                        product={this.state.Product || []}\r\n                                        instrumentID={this.state.InstrumentID || []}\r\n                                        selectedProduct={this.state.selectedProduct || []}\r\n                                        studyPlanList={this.props.Login.studyPlanList || []}\r\n                                        manufacturerList={this.props.Login.productManufacturerList || []}\r\n                                        maHolderList={this.props.Login.maHolderList || []}\r\n                                        timeZoneList={this.props.Login.timeZoneList || []}\r\n                                        selectedBacthCreation={this.props.Login.masterData.SelectedBatchmaster || {}}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        selectedInstrumentId={this.state.selectedInstrumentId}\r\n                                        onMultiColumnValue={this.onMultiColumnValue}\r\n                                        onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                        batchCreationEditStatusList={this.props.Login.batchCreationEditStatusList}\r\n                                        Section={this.state.Section}\r\n                                        selectedSection={this.state.selectedSection}\r\n                                        ProjectCode={this.state.ProjectCode}\r\n                                        selectedProjectcode={this.state.selectedProjectcode}\r\n                                    />\r\n                                    : this.props.Login.operation === \"createSample\" ?\r\n                                        <AddSample\r\n                                         //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n                                         childDataChange={this.childDataChange}\r\n                                         //dataStateChangeBatchSample={this.dataStateChangeBatchSample}\r\n                                        // addSaveDataGrid={this.addSaveDataGrid}\r\n                                         //handleClickDelete={this.handleClickDelete}\r\n                                         addedSamplesListSortedList={this.state.addedSamplesListSortedList ||[]}                                            onInputOnChange={this.onInputOnChange}\r\n                                            getProductByCategory={this.getProductByCategory}\r\n                                            onComboChange={this.onComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            productCategoryList={this.props.productCategoryList}\r\n                                            productList={this.props.productList}\r\n                                            componentList={this.props.componentList}\r\n                                            getDataForAddComponent={this.getDataForAddComponent}\r\n                                            clearComponentInput={this.props.clearComponentInput}\r\n                                            samples={this.state.samples || []}\r\n                                            headerSelectionChange={this.headerSelectionChange}\r\n                                            selectionChange={this.selectionChange}\r\n                                            addedComponentList={this.state.addedComponentList || []}\r\n                                            addedHeaderSelectionChange={this.addedHeaderSelectionChange}\r\n                                            addedSelectionChange={this.addedSelectionChange}\r\n                                            //dataStateChange={this.dataStateChange} \r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            controlMap={this.props.controlMap}\r\n                                            inputParam={this.props.inputParam}\r\n                                            screenName={this.props.screenName}\r\n                                            addSelectAll={this.state.addSelectAll}\r\n                                            deleteSelectAll={this.state.deleteSelectAll}\r\n                                            onDeleteSelectedComponent={this.onDeleteSelectedComponent}\r\n                                            componentPopupSkip={this.props.componentPopupSkip}\r\n                                            componentPopupTake={this.props.componentPopupTake}\r\n                                            componentPageSizes={this.props.componentPageSizes}\r\n                                            nneedsubsample={this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n\r\n                                            \r\n                                        \r\n                                        />\r\n                                        : this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"complete\" ?\r\n                                            <AddBatchinitiate\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                operation={this.props.Login.operation}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                currentTime={this.props.Login.currentTime || []}\r\n                                            />\r\n                                            : this.props.Login.operation === \"view\" ?\r\n                                                <Card className='one' >\r\n                                                    <Card.Body>\r\n                                                        <ViewInfo\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                                                            viewInfoFields={viewInfoFields}\r\n                                                        />\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                                : this.props.Login.operation === \"createiqcsample\" ?\r\n                                                    <AddMaterialIqc\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        operation={this.props.Login.operation}\r\n                                                        materialCategory={this.state.MaterialCategory}\r\n                                                        selectedMaterialType={this.state.selectedMaterialType}\r\n                                                        selectedMaterialCategory={this.state.selectedMaterialCategory}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        selectedMaterial={this.state.selectedMaterial}\r\n                                                        screenName={this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                                        handleSaveClick={this.handleSaveClick}\r\n                                                        material={this.state.Material}\r\n                                                        materialInventory={this.state.MaterialInventory}\r\n                                                        AddSpec={this.AddSpec}\r\n                                                        onInputOnChange={this.onInputOnChange}\r\n                                                        currentTime={this.props.Login.currentTime || []}\r\n                                                        loadSpec={this.props.Login.loadSpec}\r\n                                                        selectedMaterialInventory={this.state.selectedMaterialInventory}\r\n                                                        selectedInventoryUnit={this.props.Login.masterData.selectedInventoryUnit}\r\n                                                        AgaramTree={this.props.Login.AgaramTree}\r\n                                                        openNodes={this.props.Login.OpenNodes}\r\n                                                        onTreeClick={this.onTreeClick}\r\n                                                        focusKey={this.props.Login.FocusKey}\r\n                                                        activeKey={this.props.Login.batchactiveKey}\r\n                                                        Specification={this.props.Login.Specification}\r\n                                                        selectedSpec={this.props.Login.selectedSpec}\r\n                                                        selectedRecord={this.state.selectedRecord}\r\n                                                        onSpecChange={this.onspecChange}\r\n                                                        openSpecModal={this.props.Login.openSpecModal}\r\n                                                        closeModal={this.closeModal}\r\n                                                    /> : \"\"\r\n                            }\r\n                        />\r\n                        : \"\"\r\n                }\r\n                         {this.props.Login.modalShow ? ( //ALPD-4999-To show the add popup to get input of filter name,done by Dhanushya RI\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalFilterName}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFieldsFilter}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                /> \r\n                                :\r\n               \r\n                        <Col md={12}>\r\n                        <FormTextarea\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                            name={\"sfiltername\"}\r\n                           // type=\"text\"\r\n                            onChange={this.onInputOnChange}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                            value={this.state.selectedRecord ? this.state.selectedRecord.sfiltername : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"50\"}\r\n                        />\r\n                    </Col>         \r\n                        }\r\n                    />\r\n                )\r\n                 : (\r\n                    \"\"\r\n                )}\r\n                {/* End of Modal Sideout for Creation */}\r\n                {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n\r\n    ConfirmDelete = (selectedBatch, deleteId, operation) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBatchCreation(selectedBatch, deleteId, operation));\r\n    };\r\n\r\n\r\n    completePopUpStartActions = (completeId) => {\r\n        // if(this.props.Login.masterData.nneedtestinitiate === true){\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT ||\r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED\r\n        ) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n        }\r\n        //    }else \r\n        else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        } else {\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         openModal: true, \r\n            //         completeId : completeId,\r\n            //         masterData: this.props.Login.masterData,\r\n            //        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n            //         operation: \"complete\"\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n\r\n            let inputData = {};\r\n            inputData[\"openModal\"] = true;\r\n            inputData[\"completeId\"] = completeId;\r\n            inputData[\"selectedRecord\"] = this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"operation\"] = \"complete\";\r\n            this.props.batchCompleteDatePopup(inputData, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    AddSpec = (e) => {\r\n        if (this.state.selectedMaterial !== undefined &&\r\n            this.state.selectedMaterialCategory !== undefined) {\r\n            let inputData = {};\r\n            inputData[\"nmaterialcode\"] = this.state.selectedMaterial.value;\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory.value;\r\n            inputData[\"ncategorybasedflow\"] = this.state.selectedMaterialCategory.item.ncategorybasedflow;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            // inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n            // inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n            // inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n            // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            // inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            // inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n            this.props.getTreeByMaterial(inputData, this.state.selectedRecord, this.props.Login.masterData);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_FILLALLDETAILSTOADDSPEC\" }));\r\n        }\r\n    }\r\n\r\n\r\n    testPopUpStartActions = (testStartId) => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        }\r\n        // else if (this.props.Login.masterData.iqcsample.length==0){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n        // }\r\n        else {\r\n            let inputData = {};\r\n            inputData[\"openModal\"] = true;\r\n            inputData[\"testStartId\"] = testStartId;\r\n            inputData[\"selectedRecord\"] = this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"operation\"] = \"initiate\";\r\n            this.props.batchInitiateDatePopup(inputData, this.props.Login.masterData);\r\n\r\n\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 openModal: true, \r\n            //                 testStartId : testStartId,\r\n            //                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\r\n            //                 masterData: this.props.Login.masterData,\r\n            //                 operation: \"initiate\"\r\n            //             }\r\n            //         }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n\r\n    }\r\n\r\n    testStartActions = (selectedmaster, testStartId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.INITIATED || selectedmaster.ntransactionstatus === transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        } else if (this.props.Login.masterData.Samples.length == 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        }\r\n        //else if (this.props.Login.masterData.iqcsample.length==0){\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n        // }\r\n        else {\r\n            let inputData = {};\r\n            let jsonuidata = [];\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/initiateBatchcreation\",\r\n                isSingleGet: true,\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n            if (this.props.Login.masterData.iqcsample.length > 0) {\r\n                let totalSample = this.props.Login.masterData.Samples.concat(this.props.Login.masterData.iqcsample);\r\n                inputData[\"npreregno\"] = this.props.Login.masterData.iqcsample.map(samples => samples.npreregno).join(\",\");\r\n                inputData[\"ntransactiontestcode\"] = totalSample.map(samples => samples.ntransactiontestcode).join(\",\");\r\n                inputData[\"nneedjoballocationiqc\"] = true\r\n                inputData[\"isiqcdata\"] = true\r\n            } else {\r\n                inputData[\"npreregno\"] = this.props.Login.masterData.Samples.map(samples => samples.npreregno).join(\",\");\r\n                inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactiontestcode).join(\",\");\r\n                inputData[\"isiqcdata\"] = false\r\n                inputData[\"nneedjoballocationiqc\"] = false\r\n            }\r\n            inputData[\"nbatchsampleCode\"] = this.props.Login.masterData.Samples.map(sample => sample.nbatchsamplecode).join(\",\");\r\n            inputData[\"muluserpreregno\"] = this.props.Login.masterData.Samples.map(samples => samples.npreregno).join(\",\");\r\n            inputData[\"mulusertransactionsamplecode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactionsamplecode).join(\",\");\r\n            inputData[\"mulusertransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples => samples.ntransactiontestcode).join(\",\");\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            // inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"batchsample\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"nneedmyjob\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob;\r\n            inputData[\"nneedjoballocation\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : this.props.Login.masterData.realApproveConfigVersion ?\r\n                    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            //ALPD-4922   they dint pass in real data \r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napproveconfversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = transactionStatus.INITIATED || transactionStatus.DRAFT;\r\n            inputData[\"nneedtestinitiate\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n            inputData[\"Batchhistory\"] = {\r\n                dtransactiondate: formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] != undefined ?\r\n                    this.state.selectedRecord[\"dtransactiondate\"] : this.props.Login.currentTime, false),\r\n                scomments: this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            };\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n            inputData[\"testStartId\"] = testStartId;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus && this.props.Login.masterData.BCFilterStatus[1];\r\n            inputData[\"sample\"] = this.props.Login.masterData ? this.props.Login.masterData.sample : \"\";\r\n            inputData[\"iqcsample\"] = this.props.Login.masterData ? this.props.Login.masterData.iqcsample : \"\";\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"initiate\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, testStartId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData\r\n                                // defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[1],\r\n                                // realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[1],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchInitiateAction(inputData, this.props.Login.masterData, this.confirmMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    batchSaveIQCActions = (selectedmaster) => {\r\n        if (this.state.selectedRecord.savailablequatity !== \"0.00\") {\r\n            if (parseFloat(this.state.selectedRecord.susedquantity) <= parseFloat(this.props.Login.masterData.inventoryTransaction.savailablequatity)) {\r\n                if (this.props.Login.selectedSpec.nallottedspeccode !== undefined && this.props.Login.selectedSpec.nallottedspeccode !== \"\") {\r\n                    let userInfo = {};\r\n                    let inputRegistrationData = {};\r\n                    let inputMaterialInventoryData = {};\r\n                    let inputBatchData = {};\r\n                    const map = {}\r\n                    let batchCreationSampleData = {};\r\n                    let batchCreationTestData = {};\r\n                    let batchCreationSampleArray = [];\r\n                    let batchCreationTestArray = [];\r\n                    let samplecombinationuniqueArray = [];\r\n                    let inputMaterialInventoryArrData = [];\r\n\r\n                    batchCreationSampleData[\"nspecsampletypecode\"] = this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ?\r\n                        this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode : transactionStatus.NA;\r\n                    batchCreationSampleData[\"ncomponentcode\"] = transactionStatus.NA;\r\n                    batchCreationSampleData[\"slno\"] = 1;\r\n                    batchCreationSampleArray.push(batchCreationSampleData);\r\n\r\n                    inputRegistrationData[\"nallottedspeccode\"] = this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ?\r\n                        this.props.Login.selectedSpec.nallottedspeccode.value : transactionStatus.NA;\r\n                    inputRegistrationData[\"ntemplatemanipulationcode\"] = this.props.Login.ntemplatemanipulationcode || transactionStatus.NA;\r\n                    inputRegistrationData[\"nregsubtypeversioncode\"] = this.props.Login.masterData.nregsubtypeversioncode;\r\n                    inputRegistrationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode;\r\n                    // inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    // inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    // inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue &&\r\n                        this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputRegistrationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputRegistrationData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"nproductcatcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"nproductcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"ninstrumentcatcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"ninstrumentcode\"] = transactionStatus.NA;\r\n                    inputRegistrationData[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n                    inputRegistrationData[\"nmaterialcode\"] = this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n\r\n                    inputRegistrationData[\"jsondata\"] = {\r\n                        nmaterialcode: this.state.selectedMaterial.value,\r\n                        nmaterialcatcode: this.state.selectedMaterialCategory.value,\r\n                        smaterialcatname: this.state.selectedMaterialCategory.label,\r\n                        sinventoryid: this.state.selectedMaterialInventory.item.sinventoryid,\r\n                        nmaterialinventorycode: this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                        smaterial: this.state.selectedMaterial.item.smaterialname,\r\n                        smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n                        nmaterialtypecode: this.state.selectedMaterialType.value,\r\n                        susedquantity: this.state.selectedRecord.susedquantity,\r\n                        sunitname: this.props.Login.masterData.inventoryTransaction.sunitname,\r\n                        savailablequatity: this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n                        //materialtype:this.state.selectedMaterialType.label,\r\n                        sremarks: this.state.selectedRecord.sremarks,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    };\r\n                    inputRegistrationData[\"jsonuidata\"] = {\r\n                        nmaterialcode: this.state.selectedMaterial.value,\r\n                        nmaterialcatcode: this.state.selectedMaterialCategory.value,\r\n                        smaterialcatname: this.state.selectedMaterialCategory.label,\r\n                        sinventoryid: this.state.selectedMaterialInventory.item.sinventoryid,\r\n                        nmaterialinventorycode: this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                        smaterial: this.state.selectedMaterial.item.smaterialname,\r\n                        smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n                        nmaterialtypecode: this.state.selectedMaterialType.value,\r\n                        susedquantity: this.state.selectedRecord.susedquantity,\r\n                        sunitname: this.props.Login.masterData.inventoryTransaction.sunitname,\r\n                        savailablequatity: this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n                        //materialtype:this.state.selectedMaterialType.label,\r\n                        sremarks: this.state.selectedRecord.sremarks,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n\r\n                    };\r\n\r\n                    // inputMaterialInventoryData = {\r\n                    //     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\r\n                    // }\r\n                    //  inputMaterialInventoryData = {\r\n                    //         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n                    //         jsondata : {\r\n                    //             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n                    //             nqtyused: this.state.selectedRecord.susedquantity\r\n                    //         },\r\n                    //         jsonuidata : {\r\n                    //             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n                    //             nqtyused: this.state.selectedRecord.susedquantity\r\n                    //         },\r\n                    //         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    //  };\r\n\r\n                    inputMaterialInventoryData[\"nmaterialinventorycode\"] = this.state.selectedMaterialInventory.item.nmaterialinventorycode;\r\n                    inputMaterialInventoryData[\"jsondata\"] = {\r\n                        ...this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n                        nqtyused: this.state.selectedRecord.susedquantity,\r\n                        savailablequatity: this.state.selectedRecord.savailablequatity,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    }\r\n                    //inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\r\n                    inputMaterialInventoryData[\"nsectioncode\"] = this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];\r\n                    inputMaterialInventoryData[\"jsonuidata\"] = {\r\n                        ...this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n                        nqtyused: this.state.selectedRecord.susedquantity,\r\n                        savailablequatity: this.state.selectedRecord.savailablequatity,\r\n                        nsectioncode: this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n                    }\r\n\r\n\r\n                    //inputMaterialInventoryArrData.push(inputMaterialInventoryData);\r\n\r\n                    batchCreationTestData[\"ntestgrouptestcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode : transactionStatus.NA;\r\n                    //     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    batchCreationTestData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                    batchCreationTestData[\"nsectioncode\"] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                    batchCreationTestData[\"nmethodcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nmethodcode : transactionStatus.NA;\r\n                    //   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\r\n                    batchCreationTestData[\"nrepeatcountno\"] = 1;//--\r\n                    //    batchCreationTestData[\"ntestretestno\"]=0;\r\n                    batchCreationTestData[\"nparametercount\"] = 1; //--\r\n                    batchCreationTestData[\"slno\"] = 1; //--\r\n\r\n                    batchCreationTestArray.push(batchCreationTestData);\r\n\r\n\r\n                    map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n                    map[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    userInfo = this.props.Login.userInfo;\r\n                    map[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n                    map[\"napproveconfversioncode\"] = this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    map[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                    map[\"nneedtestinitiate\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                    map[\"nmaterialcatcode\"] = this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n                    map[\"nmaterialcode\"] = this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n                    map[\"nmaterialtypecode\"] = this.state.selectedMaterialType ? this.state.selectedMaterialType.value : transactionStatus.NA;\r\n\r\n                    inputBatchData = this.props.Login.masterData.SelectedBatchmaster;\r\n\r\n                    map['Registration'] = inputRegistrationData;\r\n                    map['Batchsampleiqc'] = inputBatchData;\r\n                    map['RegistrationSample'] = batchCreationSampleArray;\r\n                    map['testgrouptest'] = batchCreationTestArray;\r\n                    map['userInfo'] = userInfo;\r\n                    map['samplecombinationunique'] = samplecombinationuniqueArray;\r\n                    map['inputMaterialInventoryArrData'] = inputMaterialInventoryData;\r\n\r\n                    const inputParam = {\r\n                        inputData: map,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHIQCSAVE\",\r\n                        operation: \"createiqc\"\r\n                    }\r\n\r\n                    this.props.batchSaveIQCActions(inputParam.inputData, this.props.Login.masterData);\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSPECIFICATIONS\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOAVAILABLEQUANTITY\" }));\r\n        }\r\n    }\r\n\r\n    cancelBatch = (selectedmaster, cancelId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.DRAFT || selectedmaster.ntransactionstatus == transactionStatus.COMPLETED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHINITIATEDRECORD\" }));\r\n        } else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/cancelBatch\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue &&\r\n                this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"samples\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = transactionStatus.CANCELLED || transactionStatus.DRAFT;\r\n            // inputData[\"Batchhistory\"] ={\r\n            //     dtransactiondate : formatInputDate(new Date(),true),\r\n            //     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            //     };\r\n            //inputData[\"completeId\"] = completeId;\r\n            inputData[\"nneedtestinitiate\"] = this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus\r\n                && this.props.Login.masterData.BCFilterStatus[3];\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batch\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"cancel\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData,\r\n                                defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                    && this.props.Login.masterData.BCFilterStatus[2],\r\n                                realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                    && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchCancelAction(inputData, this.props.Login.masterData);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    batchCompleteActions = (selectedmaster, completeId) => {\r\n        if (selectedmaster.ntransactionstatus == transactionStatus.COMPLETED || selectedmaster.ntransactionstatus == transactionStatus.DRAFT) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n        } else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/completeBatchcreation\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let jsondata = this.props.Login.masterData.Samples.map(item => {\r\n                return { jsonuidata: item }\r\n            });\r\n\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n            inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample => sample.ntransactiontestcode).join(\",\");\r\n            inputData[\"samples\"] = jsondata;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n            inputData[\"nneedsubsample\"] = this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            //  inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\r\n            inputData[\"ntranscode\"] = transactionStatus.COMPLETED\r\n\r\n            inputData[\"Batchhistory\"] = {\r\n                dtransactiondate: formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] != undefined ?\r\n                    this.state.selectedRecord[\"dtransactiondate\"] : this.props.Login.currentTime, false),\r\n                scomments: this.state.selectedRecord && this.state.selectedRecord.scomments\r\n            };\r\n            inputData[\"completeId\"] = completeId;\r\n            inputData[\"nneedtestinitiate\"] = this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.BCFilterStatus\r\n                && this.props.Login.masterData.BCFilterStatus[2];\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation: \"complete\"\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: {\r\n                            inputParam,\r\n                            masterData: {\r\n                                ...masterData\r\n                                // defaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[2],\r\n                                // realdefaultFilterStatus: this.props.Login.masterData.BCFilterStatus\r\n                                //     && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                            }\r\n                        },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                        operation: inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.batchCompleteAction(inputData, this.props.Login.masterData);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // completeBatchCreation = () => {\r\n    //     const postParam = {\r\n    //         inputListName: \"Batchmaster\", selectedObject: \"SelectedBatchCreation\",\r\n    //         primaryKeyField: \"nreleasebatchcode\",\r\n    //         primaryKeyValue: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n    //         fetchUrl: \"batchcreation/getBatchCreation\",\r\n    //         fecthInputObject: this.props.Login.userInfo,\r\n    //     }\r\n    //     const inputParam = {\r\n    //         classUrl: \"batchcreation\",\r\n    //         methodUrl: \"BatchCreation\", postParam,\r\n    //         inputData: {\r\n    //             ncontrolcode: this.props.Login.ncontrolCode,\r\n    //             \"userinfo\": this.props.Login.userInfo,\r\n    //             nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n    //         },\r\n    //         operation: \"complete\", showConfirmAlert: false\r\n    //     }\r\n    //     //this.props.updateStore({ typeName: DEFAULT_RETURN, data: { showConfirmAlert: false } });  \r\n\r\n    //     const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n\r\n    //     if (esignNeeded) {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n    //                 openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n    //                 operation: this.props.Login.operation,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n\r\n    //         this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n    //     }\r\n\r\n    // }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let { userRoleControlRights, controlMap, selectedRecord, filterData,\r\n            addedComponentList,\r\n            filterStatusList, dataState, sahDataState, bahDataState,\r\n            chDataState, testCommentDataState, SampleType, RegistrationType,\r\n            RegistrationSubType, BCFilterStatus, REJobStatus, Testvalues,\r\n            ApprovalConfigVersion, skip, take,\r\n            testskip, testtake, selectedFilter, InstrumentCategory, selectedInstCategory,\r\n            ProductCategory, Instrument, selectedInstrument, selectedTestSynonym, nregsubtypecode,\r\n            selectedProductCategory, Product, selectedProduct, samples, addSelectAll,\r\n            deleteSelectAll, ApprovalVersionValue, FilterStatusValue, Section,\r\n            selectedSection, sampleGridItem, subsampleGridItem, testGridItem = [],\r\n            DynamicGridItem, samplegridmoreitem, DynamicGridMoreItem, MaterialCategory,\r\n            selectedMaterialType, Material, selectedMaterial, selectedMaterialCategory,\r\n            MaterialInventory, selectedMaterialInventory, Specification,\r\n            selectedSpec, addedSamplesList, testGridArnoItems, InstrumentID,\r\n            selectedInstrumentId, sinstrumentid, selectedProjectcode, ProjectCode } = this.state;\r\n        let isStateChanged = false;\r\n        let bool = false;\r\n        addedSamplesList = [];\r\n        // samples = [];\r\n\r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            isStateChanged = true;\r\n\r\n\r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            BCFilterStatus = constructOptionList(this.props.Login.masterData.BCFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", \"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestname', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            InstrumentCategory = constructOptionList(this.props.Login.masterData.instrumentCategory || [], 'ninstrumentcatcode', 'sinstrumentcatname',\r\n                'ascending', 'ninstrumentcatcode', false);\r\n            Instrument = constructOptionList(this.props.Login.masterData.instrument || [], 'ninstrumentnamecode', 'sinstrumentname',\r\n                'ascending', 'ninstrumentcode', false);\r\n            ProductCategory = constructOptionList(this.props.Login.masterData.productcategory || [], 'nproductcatcode', 'sproductcatname',\r\n                'ascending', 'nproductcatcode', false);\r\n            Product = constructOptionList(this.props.Login.masterData.product || [], 'nproductcode', 'sproductname',\r\n                'ascending', 'nproductcode', false);\r\n            Section = constructOptionList(this.props.Login.masterData.Section || [], 'nsectioncode', 'ssectionname',\r\n                'ascending', 'nsectioncode', false);\r\n            MaterialCategory = constructOptionList(this.props.Login.masterData.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n                'ascending', 'nmaterialcatcode', false);\r\n            Material = constructOptionList(this.props.Login.masterData.Material || [], 'nmaterialcode', 'smaterialname',\r\n                'ascending', 'nmaterialcode', false);\r\n            MaterialInventory = constructOptionList(this.props.Login.masterData.MaterialInventory || [], 'nmaterialinventtranscode', 'sinventoryid',\r\n                'ascending', 'nmaterialinventtranscode', false);\r\n            InstrumentID = constructOptionList(this.props.Login.masterData.instrumentID || [], 'ninstrumentcode', 'sinstrumentid',\r\n                'ascending', 'ninstrumentcode', false);\r\n            ProjectCode = constructOptionList(this.props.Login.masterData.ProjectCode || [], 'nprojectmastercode', 'sprojectcode',\r\n                'ascending', 'nprojectmastercode', false);\r\n\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = {\r\n                ntransactionstatus: transactionStatus.PARTIAL,\r\n                sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }),\r\n                scolorhexcode: \"#800000\"\r\n            }\r\n            const selectedFilters = this.props.Login.masterData.BCFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n\r\n            selectedFilter = selectedFiltersNew;\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            BCFilterStatus = BCFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n            InstrumentCategory = InstrumentCategory.get(\"OptionList\")\r\n            Instrument = Instrument.get(\"OptionList\")\r\n            ProductCategory = ProductCategory.get(\"OptionList\")\r\n            Product = Product.get(\"OptionList\")\r\n            Section = Section.get(\"OptionList\")\r\n            MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n            Material = Material.get(\"OptionList\")\r\n            MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n            InstrumentID = InstrumentID.get(\"OptionList\")\r\n            ProjectCode = ProjectCode.get(\"OptionList\")\r\n            //selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\r\n\r\n            samples = this.props.Login.masterData.samples;\r\n\r\n\r\n            addSelectAll = false;\r\n            deleteSelectAll = true;\r\n            nregsubtypecode = this.props.Login.masterData.defaultRegistrationSubType ?\r\n                {\r\n                    label: this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,\r\n                    value: this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n                    item: this.props.Login.masterData.defaultRegistrationSubType\r\n                } : \"\"\r\n\r\n            if (this.props.Login.masterData.selectedTestSynonym !== previousProps.Login.masterData.selectedTestSynonym) {\r\n                selectedTestSynonym = this.props.Login.masterData.selectedTestSynonym ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedTestSynonym.stestname,\r\n                        value: this.props.Login.masterData.selectedTestSynonym.ntestcode,\r\n                        item: this.props.Login.masterData.selectedTestSynonym\r\n                    } : \"\"\r\n                let stestname = selectedTestSynonym.item;\r\n                //selectedRecord = {...this.state.selectedRecord,stestname,...selectedRecord};\r\n                selectedRecord = { ...selectedRecord, stestname };\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedProductcategory !== previousProps.Login.masterData.selectedProductcategory) {\r\n                selectedProductCategory = this.props.Login.masterData.selectedProductcategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProductcategory.sproductcatname,\r\n                        value: this.props.Login.masterData.selectedProductcategory.nproductcatcode,\r\n                        item: this.props.Login.masterData.selectedProductcategory\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedProduct !== previousProps.Login.masterData.selectedProduct) {\r\n                selectedProduct = this.props.Login.masterData.selectedProduct ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProduct.sproductname,\r\n                        value: this.props.Login.masterData.selectedProduct.nproductcode,\r\n                        item: this.props.Login.masterData.selectedProduct\r\n                    } : \"\"\r\n                let sproductname = selectedProduct.item;\r\n                selectedRecord = { ...this.state.selectedRecord, sproductname, ...selectedRecord };\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrumentCategory !== previousProps.Login.masterData.selectedInstrumentCategory) {\r\n                selectedInstCategory = this.props.Login.masterData.selectedInstrumentCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,\r\n                        value: this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentCategory\r\n                    } : \"\"\r\n                let sinstrumentcatname = selectedInstCategory.item;\r\n                selectedRecord = { ...selectedRecord, sinstrumentcatname };\r\n                // selectedRecord = {...this.state.selectedRecord,sinstrumentcatname,...selectedRecord};\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrument !== previousProps.Login.masterData.selectedInstrument) {\r\n                selectedInstrument = this.props.Login.masterData.selectedInstrument ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrument.sinstrumentname,\r\n                        value: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrument\r\n                    } : \"\"\r\n                let sinstrumentname = selectedInstrument.item;\r\n                //selectedRecord = { ...this.state.selectedRecord, sinstrumentname, ...selectedRecord };\r\n                selectedRecord = { ...selectedRecord, sinstrumentname };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInstrumentId !== previousProps.Login.masterData.selectedInstrumentId) {\r\n                selectedInstrumentId = this.props.Login.masterData.selectedInstrumentId ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentId.sinstrumentid,\r\n                        value: this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentId\r\n                    } : undefined\r\n                let sinstrumentid = selectedInstrumentId && selectedInstrumentId.item;\r\n                //selectedRecord = { ...this.state.selectedRecord, sinstrumentid, ...selectedRecord };\r\n                selectedRecord = { ...selectedRecord, sinstrumentid };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.ProjectCode !== previousProps.Login.masterData.ProjectCode) {\r\n                selectedProjectcode = this.props.Login.masterData.selectedProjectedCode ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProjectedCode.sprojectcode,\r\n                        value: this.props.Login.masterData.selectedProjectedCode.nprojectmastercode,\r\n                        item: this.props.Login.masterData.selectedProjectedCode\r\n                    } : undefined\r\n                let sprojectcode = selectedProjectcode && selectedProjectcode.item;\r\n                selectedRecord = { ...this.state.selectedRecord, sprojectcode, ...selectedRecord };\r\n                isStateChanged = true;\r\n\r\n\r\n            }\r\n\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({ userRoleControlRights, controlMap });\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedComponentList !== previousProps.Login.selectedComponentList) {\r\n                addedComponentList = this.props.Login.selectedComponentList;\r\n                isStateChanged = true;\r\n                // this.setState({ addedComponentList });\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.defaultApprovalConfigVersion !== previousProps.Login.masterData.defaultApprovalConfigVersion) {\r\n                ApprovalVersionValue = this.props.Login.masterData.defaultApprovalConfigVersion ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,\r\n                        value: this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.defaultApprovalConfigVersion\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.defaultFilterStatus !== previousProps.Login.masterData.defaultFilterStatus) {\r\n                FilterStatusValue = this.props.Login.masterData.defaultFilterStatus ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultFilterStatus.sfilterstatus,\r\n                        value: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                        item: this.props.Login.masterData.defaultFilterStatus\r\n                    } : \"\"\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedSection !== previousProps.Login.masterData.selectedSection) {\r\n                selectedSection = this.props.Login.masterData.selectedSection ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedSection.ssectionname,\r\n                        value: this.props.Login.masterData.selectedSection.nsectioncode,\r\n                        item: this.props.Login.masterData.selectedSection\r\n                    } : \"\"\r\n                let ssectionname = selectedSection.item;\r\n                selectedRecord = { ...this.state.selectedRecord, ssectionname, ...selectedRecord };\r\n                isStateChanged = true;\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialType !== previousProps.Login.masterData.selectedMaterialType) {\r\n                selectedMaterialType = this.props.Login.masterData.selectedMaterialType ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialType.smaterialtypename,\r\n                        value: this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,\r\n                        item: this.props.Login.masterData.selectedMaterialType\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialtypename\"] = this.props.Login.masterData.selectedMaterialType.smaterialtypename;\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialCategory !== previousProps.Login.masterData.selectedMaterialCategory) {\r\n                selectedMaterialCategory = this.props.Login.masterData.selectedMaterialCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,\r\n                        value: this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,\r\n                        item: this.props.Login.masterData.selectedMaterialCategory\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialcatname\"] = this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;\r\n                isStateChanged = true;\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterial !== previousProps.Login.masterData.selectedMaterial) {\r\n                selectedMaterial = this.props.Login.masterData.selectedMaterial ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterial.smaterialname,\r\n                        value: this.props.Login.masterData.selectedMaterial.nmaterialcode,\r\n                        item: this.props.Login.masterData.selectedMaterial\r\n                    } : \"\"\r\n                selectedRecord[\"smaterialname\"] = this.props.Login.masterData.selectedMaterial.smaterialname;\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedMaterialInventory !== previousProps.Login.masterData.selectedMaterialInventory) {\r\n                selectedMaterialInventory = this.props.Login.masterData.selectedMaterialInventory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialInventory.sinventoryid,\r\n                        value: this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,\r\n                        item: this.props.Login.masterData.selectedMaterialInventory\r\n                    } : \"\"\r\n                selectedRecord[\"sinventoryid\"] = this.props.Login.masterData.selectedMaterialInventory && this.props.Login.masterData.selectedMaterialInventory.sinventoryid != null ?\r\n                    this.props.Login.masterData.selectedMaterialInventory.sinventoryid : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.masterData.selectedInventoryUnit !== previousProps.Login.masterData.selectedInventoryUnit) {\r\n                //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                selectedRecord[\"savailablequatity\"] = this.props.Login.masterData.selectedInventoryUnit &&\r\n                    this.props.Login.masterData.selectedInventoryUnit.savailablequatity != null ? this.props.Login.masterData.selectedInventoryUnit.savailablequatity : \"\";\r\n                selectedRecord[\"susedquantity\"] = \"\";\r\n                selectedRecord[\"sremarks\"] = \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.isselectedrecordempty) {\r\n                selectedRecord = {};\r\n                isStateChanged = true;\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.Specification !== previousProps.Login.masterData.Specification) {\r\n                //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                Specification = this.props.Login.masterData.Specification &&\r\n                    this.props.Login.masterData.Specification != null ? this.props.Login.masterData.Specification : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedSpec !== previousProps.Login.selectedSpec) {\r\n                selectedRecord[\"selectedSpec\"] = this.props.Login.selectedSpec &&\r\n                    this.props.Login.selectedSpec != null ? this.props.Login.selectedSpec : \"\";\r\n                isStateChanged = true;\r\n            }\r\n\r\n            if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                selectedRecord = this.props.Login.selectedRecord\r\n                isStateChanged = true;\r\n            }\r\n            else if (this.props.Login.selectedFilter !== previousProps.Login.selectedFilter) {\r\n                this.setState({ selectedFilter: this.props.Login.selectedFilter });\r\n            }\r\n\r\n            if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.\r\n                    jsondata.value)\r\n                testGridArnoItems = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n                testGridItem[0] = dynamicColumn.testListFields.releasetestfields[0] ? dynamicColumn.testListFields.releasetestfields[0] : [];\r\n                sampleGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                subsampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n                samplegridmoreitem = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                DynamicGridMoreItem = [...samplegridmoreitem]\r\n                DynamicGridItem = [...sampleGridItem, ...subsampleGridItem, ...testGridArnoItems.slice(1), ...testGridItem]\r\n                isStateChanged = true;\r\n            }\r\n\r\n           \r\n        }\r\n //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n\r\n if(this.props.Login.dataState!==previousProps.Login.dataState){\r\n    if (this.props.Login.dataState) {\r\n        delete (this.props.Login.dataState.filter)\r\n        delete (this.props.Login.dataState.sort)\r\n        this.setState({ dataState: this.props.Login.dataState });\r\n      }\r\n  }\r\n//ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n\r\n  if (this.props.Login.addedSamplesListSortedList !== previousProps.Login.addedSamplesListSortedList) {\r\n    this.setState({ addedSamplesListSortedList: this.props.Login.addedSamplesListSortedList,isInitialRender:true });\r\n  }\r\n\r\n        // if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\r\n        //     // let selectedRecord = {};\r\n        //     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n        //     'ascending', 'nmaterialcatcode', false);\r\n        //     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\r\n        //     'ascending', 'nmaterialcode', false);\r\n        //     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\r\n        //     'ascending', 'nmaterialinventorycode', false);\r\n        //      MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n        //      Material = Material.get(\"OptionList\")\r\n        //      MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n\r\n        //      selectedRecord[\"MaterialCategory\"]=MaterialCategory\r\n        //      selectedRecord[\"Material\"]=Material\r\n        //      selectedRecord[\"MaterialInventory\"]=MaterialInventory\r\n\r\n        //  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\r\n        //         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\r\n        //         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\r\n        //         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\r\n        //         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\r\n        //          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterial\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\r\n        //         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\r\n        //         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterialInventory\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\r\n        //         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n\r\n            //ALPD-5137--Vignesh R(19-01-2025)---Including filter in Data selection Kendo Grid\r\n            let updateStateObject = {};\r\n            if (this.props.Login.addedSamplesList !== previousProps.Login.addedSamplesList) {\r\n\r\n            addSelectAll = false;\r\n            deleteSelectAll = true;\r\n\r\n            this.setState({\r\n                addedSamplesList: this.props.Login.addedSamplesList,\r\n                addSelectAll, deleteSelectAll\r\n            });\r\n            }\r\n\r\n            //ALPD-5137--Vignesh R(19-01-2025)---Including filter in Data selection Kendo Grid\r\n        if (this.props.Login.addedSamplesList !== previousProps.Login.addedSamplesList) {\r\n\r\n            addSelectAll = false;\r\n            deleteSelectAll = true;\r\n\r\n            this.setState({\r\n                addedSamplesList: this.props.Login.addedSamplesList,\r\n                addSelectAll, deleteSelectAll\r\n            });\r\n            }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            isStateChanged = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            //this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n\r\n\r\n        if (isStateChanged) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord,\r\n                filterData, addedComponentList,\r\n                filterStatusList, dataState, sahDataState, bahDataState, chDataState,\r\n                testCommentDataState, SampleType, RegistrationType, RegistrationSubType,\r\n                BCFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion, skip, take,\r\n                testskip, testtake, selectedFilter, selectedInstCategory, InstrumentCategory,\r\n                Instrument, selectedInstrument, selectedTestSynonym, nregsubtypecode,\r\n                ProductCategory, selectedProductCategory, Product, selectedProduct, samples,\r\n                addSelectAll, deleteSelectAll, ApprovalVersionValue, FilterStatusValue, Section,\r\n                selectedSection, sampleGridItem, subsampleGridItem, testGridItem, DynamicGridItem,\r\n                samplegridmoreitem, DynamicGridMoreItem, MaterialCategory, selectedMaterialType,\r\n                Material, selectedMaterial, selectedMaterialCategory, MaterialInventory,\r\n                selectedMaterialInventory, Specification, selectedSpec, addedSamplesList,\r\n                testGridArnoItems, InstrumentID, selectedInstrumentId, sinstrumentid,\r\n                selectedProjectcode, ProjectCode\r\n            });\r\n        }\r\n    }\r\n\r\n    //  ALPD-5719   Added componentwillunmount by Vishakh\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, batchactiveKey: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openSpecModal = this.props.Login.openSpecModal;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"cancel\") {\r\n                //    this.props.Login.operation === \"complete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n        } else if (this.props.Login.openSpecModal) {\r\n            loadEsign = false;\r\n            openSpecModal = false\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, openSpecModal, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let { selectedInstCategory, selectedInstrumentId, InstrumentCategory,\r\n            selectedInstrument, Instrument, InstrumentID } = this.state;\r\n        let inputData = {};\r\n        if (comboData == null) {\r\n            selectedInstCategory = undefined;\r\n            selectedInstrumentId = undefined;\r\n            Instrument = undefined;\r\n            InstrumentID = undefined;\r\n            selectedInstrument = undefined;\r\n            selectedRecord['sinstrumentcatname'] = undefined;\r\n            selectedRecord['sinstrumentname'] = undefined;\r\n            selectedRecord['sinstrumentid'] = undefined;\r\n\r\n            this.setState({\r\n                selectedInstCategory, selectedInstrumentId, selectedInstrument,\r\n                selectedRecord, Instrument, InstrumentID\r\n            });\r\n        } else {\r\n            selectedRecord[fieldName] = comboData.item;\r\n            if (fieldName === \"sproductname\") {\r\n                let isAlertUpdate = false;\r\n                if (this.state.selectedProduct !== undefined && this.state.selectedProduct.value !== comboData.value) {\r\n\r\n                    if (this.props.Login.operation === \"update\") {\r\n                        selectedRecord[\"nproductcode\"] = comboData.value;\r\n                        selectedRecord[\"userInfo\"] = this.props.Login.userInfo;\r\n                        selectedRecord[\"stestname\"] = this.state.selectedRecord['stestname'];\r\n                        selectedRecord[\"ntestcode\"] = this.state.selectedRecord['stestname']['ntestcode'];\r\n                        selectedRecord[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                        //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                        selectedRecord['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                        selectedRecord[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                        selectedRecord[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                        //this.setState({ selectedProduct:comboData });\r\n                        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_WANTTOCHANGESAMPLE\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                            () => this.props.getProductBasedInstrument(selectedRecord, this.props.Login.masterData),\r\n                            () => this.props.getProductBasedInstrument(selectedRecord, this.props.Login.masterData));\r\n                    } else {\r\n                        selectedRecord[\"nproductcode\"] = comboData.value;\r\n                        selectedRecord[\"userInfo\"] = this.props.Login.userInfo;\r\n                        selectedRecord[\"stestname\"] = this.state.selectedRecord['stestname'];\r\n                        selectedRecord[\"ntestcode\"] = this.state.selectedRecord['stestname']['ntestcode'];\r\n                        selectedRecord[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                        //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                        selectedRecord['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                        selectedRecord[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                        selectedRecord[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                        //this.setState({ selectedProduct:comboData });\r\n\r\n                        this.props.getProductBasedInstrument(selectedRecord, this.props.Login.masterData);\r\n\r\n                    }\r\n                }\r\n            } else if (fieldName === \"ssectionname\") {\r\n                inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                inputData['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                inputData['section'] = selectedRecord.ssectionname;\r\n                inputData['userInfo'] = this.props.Login.userInfo;\r\n                inputData['nneedmyjob'] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.nneedmyjob : false\r\n                inputData['nneedjoballocation'] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.nneedjoballocation : false\r\n                inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                this.props.getTestInstrumentComboService(inputData, this.props.Login.masterData);\r\n                // this.setState({ selectedSection:comboData });\r\n\r\n            } else if (fieldName === \"stestname\") {\r\n                if (this.props.Login.operation === \"update\") {\r\n                    selectedRecord[\"nprevioustestcode\"] = this.state.selectedTestSynonym.value\r\n                }\r\n                selectedRecord[\"ntestcode\"] = comboData.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                selectedRecord['naddcontrolCode'] = this.props.Login.naddcontrolCode;\r\n                selectedRecord[\"nprojectmastercode\"] = comboData.item.nprojectmastercode;\r\n                selectedRecord['sinstrumentcatname'] = undefined;\r\n                selectedRecord[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                selectedRecord[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                this.props.getTestInstrumentCategory(selectedRecord, this.props.Login.masterData);\r\n            } else if (fieldName === \"sinstrumentcatname\") {\r\n                selectedRecord[\"ninstrumentcatcode\"] = comboData.value;\r\n                selectedRecord[\"ncalibrationreq\"] = comboData.item.ncalibrationreq;\r\n                selectedRecord[\"ntestcode\"] = this.state.selectedTestSynonym.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                //selectedRecord['sinstrumentid']=undefined;\r\n                selectedRecord['sinstrumentname'] = undefined;\r\n                this.props.getInstrumentForInstCategory(selectedRecord, this.props.Login.masterData);\r\n                //this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n            } else if (fieldName === \"smaterialcatname\") {\r\n                selectedRecord[\"nmaterialcatcode\"] = comboData.value;\r\n                selectedRecord[\"needsectionwise\"] = comboData.item.needSectionwise;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                this.setState({ selectedMaterialCategory: comboData });\r\n                this.props.getMaterialBasedOnMaterialCategory(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n            } else if (fieldName === \"smaterialname\") {\r\n                selectedRecord[\"nmaterialcode\"] = comboData.value;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['needsection'] = comboData.item.needsection;\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                this.setState({ selectedMaterial: comboData });\r\n                this.props.getMaterialInventoryBasedOnMaterial(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n\r\n            } else if (fieldName === \"sinventoryid\") {\r\n                selectedRecord[\"nmaterialcode\"] = this.state.selectedMaterial.value;\r\n                selectedRecord[\"materialInvCode\"] = comboData.item.nmaterialinventorycode;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                selectedRecord['needsection'] = this.props.Login.masterData.selectedMaterial.needsection;\r\n                this.setState({ selectedMaterialInventory: comboData });\r\n                // if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\r\n                //     selectedRecord['nsectioncode']=transactionStatus.NA;\r\n                // }else{\r\n                selectedRecord['nsectioncode'] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n                //}\r\n                this.props.getMaterialAvailQtyBasedOnInv(selectedRecord, this.props.Login.masterData, this.state.selectedMaterialCategory);\r\n            } else if (fieldName === \"sinstrumentname\") {\r\n                selectedRecord[\"ninstrumentnamecode\"] = comboData.value;\r\n                selectedRecord[\"sinstrumentname\"] = comboData.label;\r\n                selectedRecord['userInfo'] = this.props.Login.userInfo;\r\n                //selectedRecord['sinstrumentid']=undefined;\r\n                selectedRecord['selectedInstrument'] = comboData.item;\r\n                selectedRecord['ninstrumentcatcode'] = comboData.item.ninstrumentcatcode;\r\n                selectedRecord['ninstrumentcode'] = comboData.item.ninstrumentcode;\r\n                this.props.getInstrumentID(selectedRecord, this.props.Login.masterData);\r\n            } else if (fieldName === \"sprojectcode\") {\r\n                this.setState({ selectedProjectcode: comboData });\r\n            } else {\r\n                this.setState({ selectedInstrumentId: comboData });\r\n            }\r\n            // else{\r\n            //    // let nInstrumentCategory=\"\",nInstrument=\"\",nInstrumentID=\"\";\r\n            //     this.setState=({InstrumentCategory:{},Instrument:{},\r\n            //         InstrumentID:})\r\n            //   }\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getBatchManufacturerComboChange(selectedRecord, this.props.Login.userInfo);\r\n    }\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    clearComponentInput = () => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"nproductcode\"] = undefined;\r\n        selectedRecord[\"ncomponentcode\"] = undefined;\r\n        selectedRecord[\"smanuflotno\"] = \"\";\r\n        selectedRecord[\"dateprompt\"] = transactionStatus.NO;\r\n        selectedRecord[\"transdatefrom\"] = this.props.Login.componentDefaultSearchDate;\r\n        selectedRecord[\"transdateto\"] = this.props.Login.componentDefaultSearchDate;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    openClosePortal = () => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode !== transactionStatus.NA) {\r\n            if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED) {\r\n                if (this.props.Login.openELNSheet === undefined || !this.props.Login.openELNSheet) {\r\n                    if (this.props.Login.elnUserInfo !== null || this.props.Login.elnUserInfo != undefined) {\r\n                        this.props.Login.masterData.enlLink = \"\";\r\n                        let integrationSettings = this.props.Login.integrationSettings;\r\n                        let inputParam = {\r\n                            userInfo: this.props.Login.userInfo,\r\n                            elnUserInfo: this.props.Login.elnUserInfo,\r\n                            elnSite: this.props.Login.elnSite,\r\n                            nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster.sbatcharno,\r\n                            ntestcode: this.props.Login.masterData.ntestcode\r\n                        }\r\n                        let link = \"\";\r\n\r\n                        let detail = CF_encryptionData(\"-1//Sheet\").EncryptData;\r\n\r\n                        const settedId = inputParam.nbatchmastercode;\r\n                        //console.log(settedId);\r\n                        let encryptedbatchid = CF_encryptionData(settedId).EncryptData;\r\n                        const userObject = {\r\n                            usercode: inputParam.elnUserInfo.nelncode,\r\n                            username: inputParam.elnUserInfo.selnuserid,\r\n                            userfullname: inputParam.elnUserInfo.selnusername,\r\n                            lsusergroup: {\r\n                                usergroupcode: inputParam.elnUserInfo.nelnusergroupcode,\r\n                                usergroupname: inputParam.elnUserInfo.nelnusergroupcode,\r\n                            },\r\n                            lssitemaster: {\r\n                                sitecode: inputParam.elnSite.nelnsitecode\r\n                            }\r\n                        }\r\n                        let encrypteduser = CF_encryptionData(userObject).EncryptData;\r\n                        const baseURL = integrationSettings[1].slinkname\r\n\r\n                        link = baseURL + \"/vieworder\" + '#{\"d\":\"' + settedId + '\",\"user\":\"' + encrypteduser + '\",\"batchid\":\"' + encryptedbatchid + '\"}';\r\n                        // this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                openELNSheet: true,\r\n                                masterData: {\r\n                                    ...this.props.Login.masterData,\r\n                                    enlLink: link,\r\n                                    baseURL: baseURL\r\n                                }\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_ELNSHEETNOTFOUND\" }));\r\n                    }\r\n                } else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openELNSheet: false,\r\n                            masterData: {\r\n                                ...this.props.Login.masterData,\r\n                                enlLink: \"\"\r\n                            }\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHWITHINSTRUMENT\" }));\r\n        }\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        let selectedRecord = {};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = attachedFiles;\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    saveSample = (addedSamplesListSortedList) => {\r\n        const compList = addedSamplesListSortedList.map(x => {\r\n            delete (x.selected);\r\n            //return {...x, 'sregistereddate':formatInputDate(x.sregistereddate, false)}\r\n            return x;\r\n          }) || [];\r\n        if (compList === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n        } else if (compList.length > 0) {\r\n            let sampleArray = [];\r\n            compList.map(item =>\r\n                sampleArray.push({\r\n                    npreregno: item.npreregno,\r\n                    ntransactionsamplecode: item.ntransactionsamplecode,\r\n                    ntransactiontestcode: item.ntransactiontestcode,\r\n                    nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster ?\r\n                        this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode : transactionStatus.NA,\r\n                    sarno: item.jsonuidata.samplelist.sarno,\r\n                    ssamplearno: item.jsonuidata.samplelist.ssamplearno,\r\n                    stestname: item.jsonuidata.samplelist.stestname,\r\n                    jsonuidata: {\r\n                        samplelist: item.jsonuidata.samplelist,\r\n                    },\r\n                    jsondata: {\r\n                        samplelist: item.jsondata.samplelist,\r\n                    }\r\n                }\r\n                )\r\n            )\r\n\r\n            let nbatchmastercode = this.props.Login.masterData.SelectedBatchmaster &&\r\n                this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n            // batchSample = {\r\n            //     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n            //     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\r\n            //     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\r\n            //     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n            //     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\r\n            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n            //     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\r\n            //     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\r\n            // }\r\n            //jsondata : \r\n\r\n            const inputParam = {\r\n                inputData: {\r\n                    batchSample: nbatchmastercode,\r\n                    sampleArray,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    nregtypecode: this.props.Login.masterData.defaultRegistrationType ?\r\n                        this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                    nregsubtypecode: this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode\r\n                        : transactionStatus.NA,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA\r\n                }\r\n            }\r\n            this.props.createSampleAction(inputParam.inputData);\r\n        }  else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELCETONESAMPLE\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        if (this.props.Login.operation === \"createSample\") {\r\n            this.saveSample(this.state.addedSamplesListSortedList)\r\n        } else if (this.props.Login.operation === \"initiate\") {\r\n            this.testStartActions(this.props.Login.masterData.SelectedBatchmaster, this.props.Login.testStartId)\r\n        } else if (this.props.Login.operation === \"complete\") {\r\n            this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster, this.props.Login.completeId)\r\n        } else if (this.props.Login.operation === \"createiqcsample\") {\r\n            this.batchSaveIQCActions(this.props.Login.masterData.SelectedBatchmaster)\r\n        } else {\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            if (this.props.Login.operation === \"create\") {\r\n                inputData[\"fromDate\"] = obj.fromDate;\r\n                inputData[\"toDate\"] = obj.toDate;\r\n            }\r\n\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nneedcombodataforFilter\"] = \"true\"\r\n            inputData[\"needFilterSubmit\"] = \"false\"\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nprevioustestcode\"] = this.state.selectedRecord && this.state.selectedRecord.nprevioustestcode != undefined ? this.state.selectedRecord.nprevioustestcode : this.state.selectedTestSynonym.value;\r\n            inputData[\"ntestcode\"] = this.state.selectedTestSynonym ? this.state.selectedTestSynonym.value : transactionStatus.NA;\r\n            inputData[\"nsectioncode\"] = this.state.selectedSection ? this.state.selectedSection.item.nsectioncode : transactionStatus.NA;\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\r\n            inputData[\"ninstrumentcatcode\"] = this.state.selectedInstCategory ? this.state.selectedInstCategory.value : transactionStatus.NA;\r\n            inputData[\"ninstrumentcode\"] = this.state.selectedInstrument ? this.state.selectedInstrument.value : transactionStatus.NA;\r\n            inputData[\"nproductcode\"] = this.state.selectedProduct ? this.state.selectedProduct.value : transactionStatus.NA;\r\n            inputData[\"ntransactionstatus\"] = transactionStatus.DRAFT;\r\n            inputData[\"sbatcharno\"] = '-';\r\n            // inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n            // this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\r\n            // inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n            // this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n            // inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \r\n            // this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            inputData[\"ntranscode\"] = transactionStatus.DRAFT;\r\n\r\n\r\n            inputData[\"sinstrumentid\"] = this.state.selectedInstrumentId ? this.state.selectedInstrumentId.label : \"NA\";\r\n            // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n            // this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n            // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : transactionStatus.NA;\r\n            inputData[\"nprojectmastercode\"] = this.state.selectedProjectcode ? this.state.selectedProjectcode.value : transactionStatus.NA;\r\n            let postParam = undefined;\r\n            postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\"\r\n            };\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                postParam,\r\n                searchRef: this.searchRef,\r\n                operation: this.props.Login.operation,\r\n                saveType,\r\n                formRef,\r\n            }\r\n            if (this.props.Login.operation === \"create\") {\r\n                this.searchRef.current.value = \"\";\r\n                this.props.createBatchmasterAction(inputParam[\"inputData\"], this.props.Login.masterData, inputParam[\"operation\"]);\r\n            } else {\r\n                inputData[\"nbatchmastercode\"] = this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n                inputData[\"SelectedBatchmaster\"] = this.props.Login.masterData.SelectedBatchmaster;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.editId)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: {\r\n                                inputParam,\r\n                                masterData: this.props.Login.masterData\r\n                            },\r\n                            openModal: true,\r\n                            screenName: \"IDS_BATCHCREATION\",\r\n                            operation: inputParam.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.updateBatchcreationAction(inputParam[\"inputData\"], this.props.Login.masterData, inputParam[\"operation\"]);\r\n                }\r\n            }\r\n        }\r\n        // const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        // if (esignNeeded) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n        //             operation: this.props.Login.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\r\n        //     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        // }\r\n    }\r\n\r\n//ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n//comment by vignesh R\r\n/*addSaveDataGrid = () => {\r\n\r\n    let filterdata1=this.state.dataState ?process(this.state.addComponentDataListCopy || [], {...this.state.dataState,take:this.state.samples.length}).data:[];\r\n            let sortListedData1 = filterdata1.filter(x => \r\n             this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode)\r\n           );\r\n           let exists=this.state.dataState && this.state.dataState.filter!==null && this.state.dataState.filter!==undefined ? sortListedData1.length>0 ? true : false :true;\r\n            if (this.state.addedSamplesList.length > 0 && exists) {\r\n              let addedSamplesListSortedList = [];\r\n              let   updatedList =[];\r\n              let ListedData =[];\r\n              let sortListedData=[];\r\n              if(this.state.dataState && this.state.dataState.filter!==null && this.state.dataState.filter!==undefined){\r\n                let filterdata=process(this.state.addComponentDataListCopy  || this.state.samples ,\r\n                      {...this.state.dataState,take:this.state.samples.length}).data||[];\r\n                 sortListedData = filterdata.filter(x => \r\n                  this.state.addedSamplesList.some(item => item.ntransactiontestcode === x.ntransactiontestcode)\r\n                );\r\n                 updatedList = filterdata.filter(\r\n                  (item) => !sortListedData.some(\r\n                    (addedItem) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                  )\r\n                );\r\n                 updatedList.map(x =>{if(x.selected){ \r\n                    \r\n                    ListedData.push({...x,'jsondata':{\r\n                        'samplelist':x\r\n                      },'jsonuidata':{\r\n                        'samplelist':x\r\n                      }});\r\n                \r\n                \r\n                \r\n                }});\r\n        \r\n              }else{\r\n               updatedList = this.state.samples.filter(\r\n                (item) => !this.state.addedSamplesList.some(\r\n                  (addedItem) => addedItem.ntransactiontestcode === item.ntransactiontestcode\r\n                )\r\n              );\r\n              ListedData=[];\r\n              sortListedData= this.state.addedSamplesList;\r\n            }\r\n              if (this.state.addedSamplesListSortedList.length > 0) {\r\n                this.state.addedSamplesListSortedList.map(item => {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    newItem[\"jsondata\"] = {}\r\n                    newItem[\"jsonuidata\"] = {}\r\n                    newItem[\"selected\"] = false;\r\n                    newItem[\"jsondata\"]['samplelist'] = {...item,selected:false}\r\n                    newItem[\"jsonuidata\"]['samplelist'] = {...item,selected:false}\r\n                   addedSamplesListSortedList.push(newItem)\r\n                })\r\n              }\r\n              sortListedData.map(item => {\r\n                const newItem = JSON.parse(JSON.stringify(item));\r\n                newItem[\"jsondata\"] = {}\r\n                newItem[\"jsonuidata\"] = {}\r\n                newItem[\"selected\"] = false;\r\n                newItem[\"jsondata\"]['samplelist'] = {...item,selected:false}\r\n                newItem[\"jsonuidata\"]['samplelist'] = {...item,selected:false}\r\n                addedSamplesListSortedList.push(newItem)\r\n\r\n                })\r\n              this.setState({\r\n                samples: updatedList, addSelectAll: this.valiateCheckAll(updatedList)\r\n                , addedSamplesListSortedList: addedSamplesListSortedList\r\n                , addedSamplesList: ListedData,addComponentDataListCopy:this.valiateCopy(addedSamplesListSortedList||[],updatedList||[],ListedData||[]) \r\n              })\r\n            } else {\r\n              toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELCETONESAMPLE\" }));\r\n            }\r\n      }\r\n*/\r\n//ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n//comment by vignesh R\r\n     /* valiateCopy(sortedList,addComponentDataList,addedSamplesList){\r\n        let addedSamplesLists=addedSamplesList||this.state.addedSamplesList||[];\r\n        let listData = this.props.Login.masterData.samples || [];\r\n        let copyingList = listData.filter(item1 => \r\n          !sortedList.some(item2 => item1.ntransactiontestcode === item2.ntransactiontestcode)\r\n        ) ||[];\r\n        let copyingListData = copyingList.map(item => {\r\n          const existsInAddComponentDataList = addedSamplesLists.some(\r\n            item1 => item1.ntransactiontestcode === item.ntransactiontestcode \r\n          );\r\n         \r\n          if(existsInAddComponentDataList){\r\n            return {...item,selected: true};\r\n          }else{\r\n            return {...item,selected: false};\r\n          }\r\n         \r\n        });\r\n        return copyingListData;\r\n      }*/\r\n   \r\n       //ALPD-5137--Vignesh R(28-01-2025)---Including filter in Data selection Kendo Grid\r\n//comment by vignesh R\r\n   \r\n/*handleClickDelete = (row) => {\r\n        let updatedAddList=[];\r\n        const ntransactiontestcode = row.dataItem.ntransactiontestcode;\r\n        const updatedList = this.state.addedSamplesListSortedList.filter(\r\n          (item) => item.ntransactiontestcode !== ntransactiontestcode\r\n        );\r\n    \r\n        const exists = this.state.samples.some(\r\n          (item) => item.ntransactiontestcode === ntransactiontestcode\r\n        );\r\n        if (!exists) {\r\n           updatedAddList = this.state.samples.map(item => {\r\n            return item\r\n          })\r\n           updatedAddList.push({...row.dataItem,selected:false});\r\n        }\r\n        //ALPD-5137--Vignesh R(20-12-2024)---Including filter in Data selection Kendo Grid\r\n\r\n        this.setState({ samples: updatedAddList, addedSamplesListSortedList: updatedList ,\r\n            addSelectAll: this.valiateCheckAll(updatedAddList),\r\n            deleteSelectAll:this.valiateCheckAll(updatedAddList),\r\n            addComponentDataListCopy:this.valiateCopy(updatedList||[],updatedAddList||[]) })\r\n    \r\n      }*/\r\n    deleteBatchCreation = (selectedBatch, deleteId, operation) => {\r\n        if (selectedBatch.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.INITIATED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }\r\n        else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\",\r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedBatch.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : transactionStatus.NA,\r\n                    nsampletypecode: this.props.Login.masterData.defaultSampleType.nsampletypecode\r\n                },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"currentdate\"] = formatInputDate(new Date(), true)\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ?\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"nbatchmastercode\"] = selectedBatch.nbatchmastercode;\r\n            //inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value === transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1 => item1.item.ntransactionstatus !== transactionStatus.ALL).map(item1 => item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n\r\n            // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n            // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ?\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion &&\r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"selectedBatch\"] = selectedBatch;\r\n            inputData[\"samples\"] = this.props.Login.masterData.Samples;\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                operation,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchEditData = (editParam) => {\r\n        if (this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT) {\r\n            this.props.getActiveBatchCreationService(editParam,\r\n                this.props.Login.masterData.SelectedBatchmaster)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        //ALPD-3399\r\n        if (this.props.Login.operation == \"complete\" || this.props.Login.operation == \"initiate\") {\r\n            this.props.validateEsignforBatch(inputParam,);\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openModal\");\r\n        }\r\n\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(),//this.state.selectedFilter[\"fromDate\"] != undefined ?\r\n            //rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"fromDate\"]) : this.fromDate,\r\n            toDate: this.props.Login.masterData.realToDate || new Date(), //this.state.selectedFilter[\"toDate\"] != undefined ?\r\n            // rearrangeDateFormat(this.props.Login.userInfo, this.state.selectedFilter[\"toDate\"]) : this.toDate,\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            defaultSampleType: this.props.Login.masterData.realSampleTypeValue || {},\r\n            RegistrationType: this.props.Login.masterData.realRegistrationTypeList || [],\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            defaultRegistrationType: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegistrationSubType: this.props.Login.masterData.realRegistrationSubTypeList || [],\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            BCFilterStatus: this.props.Login.masterData.realBCFilterStatusList || [],\r\n            FilterStatusValue: this.props.Login.masterData.realdefaultFilterStatus || {},\r\n            ApprovalConfigVersion: this.props.Login.masterData.realApprovalConfigVersionList || [],\r\n            ApprovalVersionValue: this.props.Login.masterData.realApproveConfigVersion || {},\r\n            defaultFilterStatus: this.props.Login.masterData.realdefaultFilterStatus || {},\r\n            defaultApprovalConfigVersion: this.props.Login.masterData.realApproveConfigVersion || {},\r\n            defaultRegistrationSubType: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            // ALPD-5563 - code or designTemplateMappingValue changed by Gowtham R - Run batch screen -> In Advanced Filter options, make changes and cancel filter refresh, no records found.\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realndesigntemplatemappingcode || \r\n                                            this.props.Login.masterData.DesignTemplateMappingValue &&\r\n                                            this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode || -1\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n\r\n        if (this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined\r\n        ) {\r\n            let inputData = {};\r\n\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.fromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n            inputData[\"fromdate\"] = obj.fromDate;\r\n            inputData[\"todate\"] = obj.toDate;\r\n            inputData[\"realFromDate\"] = obj.fromDate;\r\n            inputData[\"realToDate\"] = obj.toDate;\r\n            inputData[\"needFilterSubmit\"] = \"true\";\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            // inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value===0 ? this.state.BCFilterStatus.map(item1=>\"'\"+item1.item.ntransactionstatus+\"'\").join(\",\") : this.state.FilterStatusValue.value;\r\n            //ALPD-3399          \r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value === transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1 => item1.item.ntransactionstatus !== transactionStatus.ALL).map(item1 => item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            //  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            //inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n            // inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n\r\n            inputData[\"realRegistrationTypeList\"] = this.props.Login.masterData.RegistrationType;\r\n            inputData[\"realRegTypeValue\"] = this.props.Login.masterData.defaultRegistrationType;\r\n            inputData[\"realRegistrationSubTypeList\"] = this.props.Login.masterData.RegistrationSubType;\r\n            inputData[\"realRegSubTypeValue\"] = this.props.Login.masterData.defaultRegistrationSubType;\r\n            inputData[\"realBCFilterStatusList\"] = this.props.Login.masterData.BCFilterStatus;\r\n            inputData[\"realdefaultFilterStatus\"] = this.state.FilterStatusValue !== undefined ? this.state.FilterStatusValue \r\n            && this.state.FilterStatusValue.item : this.props.Login.masterData.defaultFilterStatus;\r\n            inputData[\"realApprovalConfigVersionList\"] = this.props.Login.masterData.ApprovalConfigVersion;\r\n            //inputData[\"realApproveConfigVersion\"] = this.props.Login.masterData.defaultApprovalConfigVersion;\r\n            inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue !== undefined ? this.state.ApprovalVersionValue \r\n            && this.state.ApprovalVersionValue.item : this.props.Login.masterData.defaultApprovalConfigVersion;\r\n\r\n            inputData[\"realndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode;\r\n            //ALPD-4999 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\r\n            inputData[\"operation\"] = \"create\";\r\n            // ALPD-5557 - real to default changed by Gowtham R - Run batch screen -> In Advanced Filter options, config version displaying wrongly.\r\n            inputData[\"sampleTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.defaultSampleType;\r\n            inputData[\"regTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.defaultRegistrationType;\r\n            inputData[\"regSubTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.defaultRegistrationSubType;\r\n            inputData[\"filterStatusValue\"] = this.state.FilterStatusValue !== undefined ? this.state.FilterStatusValue \r\n                        && this.state.FilterStatusValue.item : this.props.Login.masterData.realdefaultFilterStatus;\r\n            inputData[\"approvalConfigValue\"] = this.state.ApprovalVersionValue !== undefined ? this.state.ApprovalVersionValue \r\n            && this.state.ApprovalVersionValue.item : this.props.Login.masterData.realApproveConfigVersion;\r\n            // inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realndesigntemplatemappingcode \r\n            //                                           || this.props.Login.masterData.ndesigntemplatemappingcode;\r\n            // ALPD-5563 - real to default changed by Gowtham R - Run batch screen -> In Advanced Filter options, make changes and cancel filter refresh, no records found.\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode; \r\n            inputData[\"saveFilterSubmit\"] = true;\r\n\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n            this.props.onActionFilterSubmit(inputParam[\"inputData\"], this.props.Login.masterData);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    //ALPD-4999 to insert the filter name in filtername table,done by Dhanushya RI\r\n\r\n    onSaveModalFilterName = () => {\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.fromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n            inputData[\"sfiltername\"]=this.state.selectedRecord && this.state.selectedRecord.sfiltername !== null\r\n            ? this.state.selectedRecord.sfiltername: \"\";\r\n            inputData[\"fromdate\"] = obj.fromDate;\r\n            inputData[\"todate\"] = obj.toDate;\r\n            inputData[\"realFromDate\"] = obj.fromDate;\r\n            inputData[\"realToDate\"] = obj.toDate;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;         \r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value === transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1 => item1.item.ntransactionstatus !== transactionStatus.ALL).map(item1 => item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n            inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"sampleTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue;    \r\n            inputData[\"regTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.realRegTypeValue;\r\n            inputData[\"regSubTypeValue\"] = this.props.Login.masterData && this.props.Login.masterData.realRegSubTypeValue;\r\n            inputData[\"filterStatusValue\"] = this.props.Login.masterData && this.props.Login.masterData.realdefaultFilterStatus;\r\n            inputData[\"approvalConfigValue\"] = this.props.Login.masterData && this.props.Login.masterData.realApproveConfigVersion;\r\n            inputData[\"saveFilterSubmit\"] = true;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            let masterData = this.props.Login.masterData\r\n\r\n            if (this.props.Login.masterData.defaultSampleType != undefined && this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n                this.state.ApprovalVersionValue.item != undefined\r\n            ) {\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"FilterName\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                operation:\"create\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n            this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n         }\r\n         else {\r\n             toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n         }\r\n    }\r\n    //ALPD-4999 To open the save popup of filtername,done by Dhanushya RI\r\n    openFilterName = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {  modalShow: true,operation:\"create\",modalTitle:this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" })}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    //ALPD-4999-To get previously saved filter details when click the filter name,,done by Dhanushya RI\r\n    clickFilterDetail = (value) => {\r\n        let inputData = {};\r\n            let obj = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.realFromDate,\r\n                this.props.Login.masterData && this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"nfilternamecode\"]=value && value.nfilternamecode? value.nfilternamecode:-1;\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"realFromDate\"] = obj.fromDate;\r\n            inputData[\"realToDate\"] = obj.toDate;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"] = this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;         \r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue && this.state.FilterStatusValue.value === transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1 => item1.item.ntransactionstatus !== transactionStatus.ALL).map(item1 => item1.item.ntransactionstatus).join(\",\") : this.state.FilterStatusValue.value;\r\n            inputData[\"napprovalconfigcode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue ?\r\n                this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode ||\r\n                transactionStatus.NA;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let masterData = this.props.Login.masterData\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n            this.props.getBatchCreationFilter(inputParam[\"inputData\"], masterData);\r\n       \r\n    }\r\n    reloadData = (isFilterSubmit) => {\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n        if (this.props.Login.masterData.realRegTypeValue !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realRegTypeValue !== null &&\r\n            this.props.Login.masterData.realRegSubTypeValue !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realRegSubTypeValue !== null &&\r\n            this.props.Login.masterData.realApproveConfigVersion !== transactionStatus.NA ||\r\n            this.props.Login.masterData.realApproveConfigVersion !== null &&\r\n            this.props.Login.masterData.defaultFilterStatus !== transactionStatus.NA ||\r\n            this.props.Login.masterData.defaultFilterStatus !== null) {\r\n\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"] = obj.fromDate;\r\n            inputData[\"toDate\"] = obj.toDate;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n\r\n            inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue &&\r\n                this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n            inputData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n                this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n\r\n            inputData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n                this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n\r\n            inputData[\"defaultSampleType\"] = this.props.Login.masterData.defaultSampleType;\r\n\r\n            inputData[\"defaultRegistrationType\"] = this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n\r\n            inputData[\"defaultRegistrationSubType\"] = this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n\r\n            //inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus === transactionStatus.ALL ? this.state.BCFilterStatus.filter(item1 => item1.item.ntransactionstatus !== transactionStatus.ALL).map(item1 => item1.item.ntransactionstatus).join(\",\") : this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus : transactionStatus.NA;\r\n\r\n            inputData[\"napprovalconfigcode\"] = this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA;\r\n\r\n            inputData[\"realApproveConfigVersion\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n\r\n            inputData[\"napprovalversioncode\"] = this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA;\r\n\r\n            //inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n            inputData[\"realdefaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            inputData[\"realRegistrationTypeList\"] = this.props.Login.masterData.realRegistrationTypeList;\r\n            inputData[\"realRegTypeValue\"] = this.props.Login.masterData.realRegTypeValue;\r\n            inputData[\"realRegistrationSubTypeList\"] = this.props.Login.masterData.realRegistrationSubTypeList;\r\n            inputData[\"realRegSubTypeValue\"] = this.props.Login.masterData.realRegSubTypeValue;\r\n            inputData[\"realBCFilterStatusList\"] = this.props.Login.masterData.realBCFilterStatusList;\r\n            //inputData[\"realdefaultFilterStatus\"] =this.state.FilterStatusValue!==undefined? this.state.FilterStatusValue && this.state.FilterStatusValue.item :this.props.Login.masterData.realdefaultFilterStatus;\r\n            inputData[\"realdefaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus !== undefined ? this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus : this.props.Login.masterData.realdefaultFilterStatus;\r\n            inputData[\"realApprovalConfigVersionList\"] = this.props.Login.masterData.realApprovalConfigVersionList;\r\n            inputData[\"realApproveConfigVersion\"] = this.props.Login.masterData.realApproveConfigVersion;\r\n            inputData[\"realndesigntemplatemappingcode\"] = this.props.Login.masterData.realndesigntemplatemappingcode;\r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData,\r\n                searchRef: this.searchRef,\r\n            }\r\n\r\n            this.props.onActionFilterSubmit(inputParam[\"inputData\"], this.props.Login.masterData);\r\n        } else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n\r\n    // addtest=(addParam)=>{\r\n    //     if(this.props.Login.masterData.Batchmaster == undefined ){\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" })); \r\n    //     }else{\r\n    //         this.props.getTestInstrumentComboService(addParam)\r\n    //     }\r\n    // }\r\n\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    onClickReport = (selectedRecord, flag, ncontrolcode) => {\r\n        const reportParam = {\r\n            classUrl: \"certificategeneration\",\r\n            methodUrl: \"reportGeneration\",\r\n            screenName: \"CertificateGeneration\",\r\n            operation: \"previewReport\",\r\n            primaryKeyField: \"nreleasebatchcode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: -1,\r\n            inputData: {\r\n                sprimarykeyname: 'nreleasebatchcode',\r\n                nprimarykey: selectedRecord.nreleasebatchcode,\r\n                nreleasebatchcode: selectedRecord.nreleasebatchcode,\r\n                ncertificatetypecode: selectedRecord.ndecision === transactionStatus.PASS && flag === 1 ? selectedRecord.ncertificatetypecode : -1,\r\n                ndecisionstatus: selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\r\n                nreporttypecode: flag === 2 ? reportTypeEnum.SCREENWISE : reportTypeEnum.BATCH,\r\n                ncontrolcode,\r\n                ncoareporttypecode: flag === 2 ? -1 : reportCOAType.BATCHPREVIEW,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                skipbatchvalidation: true,\r\n            }\r\n        };\r\n        this.props.onClickReport(reportParam)\r\n    }\r\n\r\n    reportMethod = (value) => {\r\n        if (value.method === 1) {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 2, value.controlId);\r\n        }\r\n        else {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 1, value.controlId);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore,\r\n    getTestInstrumentComboService, getTestInstrumentCategory, getInstrumentForInstCategory,\r\n    getProductBasedInstrument,\r\n    getBatchCreationDetails, onActionFilterSubmit, getProductcategoryAction,\r\n    createBatchmasterAction, getSamplesForGrid, getSelectedBatchCreationDetail,\r\n    createSampleAction, deleteSampleAction, getActiveBatchCreationService,\r\n    updateBatchcreationAction, deleteBatchCreation, batchInitiateAction,\r\n    getBCRegistrationSubType, batchCompleteAction, validateEsignCredential,\r\n    filterColumnData, getBatchhistoryAction,\r\n    getBatchSection, viewInfo, getIqcSamples, getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial, batchSaveIQCActions, getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction, getBCApprovalConfigVersion, getBCRegistrationType,\r\n    getTreeByMaterial, getNewRegSpecification, cancelIQCSampleAction, batchCancelAction,\r\n    batchInitiateDatePopup, batchCompleteDatePopup, getInstrumentID, getBatchViewResultAction, \r\n    validateEsignforBatch,getBatchCreationFilter\r\n    //,batchTAT\r\n})(injectIntl(BatchCreation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}